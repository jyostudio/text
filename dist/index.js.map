{
  "version": 3,
  "sources": ["../node_modules/@jyostudio/overload/src/constant.js", "../node_modules/@jyostudio/overload/src/index.js", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/src/constant.js", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/src/index.js", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/compile/codegen/code.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/compile/codegen/scope.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/compile/codegen/index.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/compile/util.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/compile/names.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/compile/errors.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/compile/validate/boolSchema.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/compile/rules.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/compile/validate/applicability.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/compile/validate/dataType.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/compile/validate/defaults.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/code.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/compile/validate/keyword.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/compile/validate/subschema.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/fast-deep-equal/index.js", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/json-schema-traverse/index.js", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/compile/resolve.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/compile/validate/index.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/runtime/validation_error.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/compile/ref_error.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/compile/index.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/dist/refs/data.json", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/fast-uri/lib/scopedChars.js", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/fast-uri/lib/utils.js", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/fast-uri/lib/schemes.js", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/fast-uri/index.js", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/runtime/uri.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/core.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/core/id.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/core/ref.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/core/index.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/validation/limitNumber.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/validation/multipleOf.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/runtime/ucs2length.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/validation/limitLength.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/validation/pattern.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/validation/limitProperties.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/validation/required.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/validation/limitItems.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/runtime/equal.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/validation/uniqueItems.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/validation/const.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/validation/enum.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/validation/index.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/applicator/additionalItems.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/applicator/items.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/applicator/prefixItems.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/applicator/items2020.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/applicator/contains.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/applicator/dependencies.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/applicator/propertyNames.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/applicator/additionalProperties.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/applicator/properties.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/applicator/patternProperties.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/applicator/not.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/applicator/anyOf.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/applicator/oneOf.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/applicator/allOf.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/applicator/if.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/applicator/thenElse.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/applicator/index.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/format/format.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/format/index.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/metadata.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/draft7.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/discriminator/types.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/vocabularies/discriminator/index.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/dist/refs/json-schema-draft-07.json", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv/lib/ajv.ts", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/node_modules/ajv-i18n/localize/zh/index.js", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/src/jsonSchema.js", "../node_modules/@jyostudio/list/node_modules/@jyostudio/overload/src/constant.js", "../node_modules/@jyostudio/list/src/index.js", "../src/encodingInfo.js", "../src/encoding.js", "../src/utf8Encoding.js", "../src/unicodeEncoding.js", "../src/utf32Encoding.js", "../src/asciiEncoding.js", "../src/stringBuilder.js"],
  "sourcesContent": ["/**\r\n * \u4EFB\u610F\u7C7B\u578B\u6807\u5FD7\r\n */\r\nexport const ANY_STR = \"*\";\r\n\r\n/**\r\n * \u5269\u4F59\u53C2\u6570\u6807\u5FD7\r\n */\r\nexport const REST_STR = \"...\";\r\n\r\n/**\r\n * \u7C7B\u578B\u8F6C\u6362\u6807\u5FD7\r\n */\r\nexport const TYPE_CONVERT_STR = \"\u21C4\";\r\n\r\n/**\r\n * \u5185\u90E8\u7C7B\u578B\u7236\u7EA7\u6807\u5FD7\r\n */\r\nexport const INNER_TYPE_FATHER = \"##INNER_TYPE##\";\r\n\r\n/**\r\n * \u5185\u90E8\u7C7B\u578B\u5B50\u7EA7\u6807\u5FD7\r\n */\r\nexport const INNER_TYPE_SON = \"@@INNER_TYPE@@\";\r\n\r\n/**\r\n * \u5185\u90E8\u629B\u51FA\u51FD\u6570\u6807\u5FD7\r\n */\r\nexport const INNER_THROW_FN = \"##INNER_THROW_FN##\";\r\n\r\n/**\r\n * \u5185\u90E8\u7C7B\u578B\u51FD\u6570\u6807\u5FD7\r\n */\r\nexport const INNER_TYPE_FN = \"##INNER_TYPE_FN##\";", "import { ANY_STR, REST_STR, TYPE_CONVERT_STR, INNER_TYPE_FATHER, INNER_TYPE_SON, INNER_TYPE_FN, INNER_THROW_FN } from \"./constant.js\";\r\n\r\n/**\r\n * \u5339\u914D\u7C7B\u578B\r\n * @param {any} param - \u4F20\u5165\u7684\u53C2\u6570\r\n * @param {any} type - \u671F\u671B\u7684\u7C7B\u578B\r\n * @returns {Boolean} \u662F\u5426\u5339\u914D\r\n */\r\nfunction matchType(param, type) {\r\n  if (Array.isArray(type)) {\r\n    for (let i = 0; i < type.length; i++) {\r\n      if (matchType(param, type[i])) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  if (type?.[INNER_TYPE_FN]?.(param)) {\r\n    return true;\r\n  }\r\n\r\n  if (typeof type !== \"function\") {\r\n    if (\r\n      type === ANY_STR && param !== null ||\r\n      type === REST_STR ||\r\n      (type === null && param === null) ||\r\n      type === typeof param\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  switch (typeof param) {\r\n    case \"function\":\r\n    case \"object\":\r\n      break;\r\n    case \"string\": param = String; break;\r\n    case \"number\": param = Number; break;\r\n    case \"boolean\": param = Boolean; break;\r\n    case \"symbol\": param = Symbol; break;\r\n    case \"bigint\": param = BigInt; break;\r\n    default: param = Object(param); break;\r\n  }\r\n\r\n  if (param === type || param instanceof type) {\r\n    return true;\r\n  }\r\n\r\n  if (param?.[INNER_TYPE_SON]) {\r\n    return param[INNER_TYPE_SON] === type?.[INNER_TYPE_FATHER];\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/**\r\n * \u83B7\u53D6\u7C7B\u578B\u540D\u79F0\r\n * @param {any} param - \u4F20\u5165\u7684\u53C2\u6570\r\n * @returns {String} \u7C7B\u578B\u540D\u79F0\r\n */\r\nfunction getTypeName(param) {\r\n  if (param === null) {\r\n    return \"null\";\r\n  }\r\n\r\n  if (param === ANY_STR) {\r\n    return \"(\u4EFB\u610F)\";\r\n  }\r\n\r\n  const paramType = typeof param;\r\n\r\n  if (![\"function\", \"object\"].includes(paramType)) {\r\n    return paramType[0].toUpperCase() + paramType.slice(1);;\r\n  }\r\n\r\n  let className = (param?.name || param?.constructor?.name || \"(\u672A\u77E5)\").split(\" \").pop();\r\n\r\n  [INNER_TYPE_FATHER, INNER_TYPE_SON].forEach(v => {\r\n    if (param?.[v]) {\r\n      className += `<${getTypeName(param?.[v])}>`;\r\n    }\r\n  });\r\n\r\n  if (paramType === \"function\" && className === \"anonymous\") {\r\n    return \"(\u533F\u540D)\";\r\n  }\r\n\r\n  return className;\r\n}\r\n\r\n/**\r\n * \u629B\u51FA\u5806\u6808\u4FE1\u606F\r\n * @param {Error} err - \u9519\u8BEF\u5BF9\u8C61\r\n * @param {...any} args - \u53C2\u6570\u5217\u8868\r\n * @throws {Error}\r\n */\r\nfunction throwStackInfo(err, types, args) {\r\n  const stackList = err.stack.split(\"\\n\").splice(3);\r\n  let errorMessage = \"\";\r\n  let formattedStack = \"\\n\";\r\n  let errorMethodName = \"\";\r\n\r\n  stackList.forEach((stackLine, index, arr) => {\r\n    const parts = stackLine.trim().split(\" \");\r\n    const fullMethodName = parts.length === 3 ? parts[1] : `(\u533F\u540D)`;\r\n    const methodName = fullMethodName.split(\".\").pop();\r\n\r\n    arr[index] = {\r\n      fullMethodName,\r\n      methodName,\r\n      link: parts.length === 3 ? parts[2] : parts[1],\r\n    };\r\n\r\n    if (!index) {\r\n      errorMethodName = methodName;\r\n    } else {\r\n      formattedStack += `${methodName}\\t${arr[index].link}\\n`;\r\n    }\r\n  });\r\n\r\n  const matchingTypes = types.find(v => v.length === args.length);\r\n\r\n  if (!matchingTypes) {\r\n    errorMessage += `\u65B9\u6CD5 ${errorMethodName} \u4E0D\u5B58\u5728 ${args.length} \u4E2A\u53C2\u6570\u7684\u91CD\u8F7D\u3002`;\r\n    errorMessage += formattedStack;\r\n    throw new Error(errorMessage);\r\n  }\r\n\r\n  let hasError = false;\r\n  matchingTypes.forEach((expectedType, i) => {\r\n    if (!matchType(args[i], expectedType)) {\r\n      const expectedTypeNames = Array.isArray(expectedType)\r\n        ? expectedType.map(getTypeName).join(\"\u3001\")\r\n        : getTypeName(expectedType);\r\n\r\n      errorMessage += `${hasError ? \"\\n\" : \"\"}\u53C2\u6570${i + 1}\uFF1A\u9884\u671F ${expectedTypeNames} \u4F46\u5F97\u5230 ${getTypeName(args[i])}\u3002`;\r\n\r\n      if (Array.isArray(expectedType)) {\r\n        expectedType.forEach((type, index) => {\r\n          if (typeof type?.[INNER_THROW_FN] === \"function\") {\r\n            errorMessage += `${index === 0 ? \"\\n\u9644\u52A0\u4FE1\u606F\uFF1A\\n\" : \"\"}\u5C1D\u8BD5\u65B9\u6848${i + 1} - ${type[INNER_THROW_FN]?.(args[i])}`;\r\n          }\r\n        });\r\n      } else if (typeof expectedType?.[INNER_THROW_FN] === \"function\") {\r\n        errorMessage += `\\n\u9644\u52A0\u4FE1\u606F\uFF1A\\n\u5C1D\u8BD5\u65B9\u6848${i + 1} - ${expectedType[INNER_THROW_FN]?.(args[i])}`;\r\n      }\r\n\r\n      hasError = true;\r\n    }\r\n  });\r\n\r\n  if (hasError) {\r\n    errorMessage = `\u65B9\u6CD5 ${errorMethodName} \u8C03\u7528\u9519\u8BEF\\n${errorMessage}`;\r\n    errorMessage += formattedStack;\r\n    throw new Error(errorMessage);\r\n  }\r\n}\r\n\r\n/**\r\n * \u8FD4\u56DE\u4E00\u4E2A\u91CD\u8F7D\u51FD\u6570\r\n * @returns {Function} \u91CD\u8F7D\u51FD\u6570\r\n */\r\nfunction createOverload() {\r\n  const TYPES = [];\r\n  const FNS = [];\r\n  const OPTIONS = [];\r\n  let anyFn = null;\r\n\r\n  /**\r\n   * \u8C03\u7528\u515C\u5E95\u51FD\u6570\r\n   * @param  {...any} args - \u53C2\u6570\u5217\u8868\r\n   * @returns {any} \u8FD4\u56DE\u503C\r\n   */\r\n  function runAny(...args) {\r\n    if (anyFn) {\r\n      return anyFn.apply(this, args);\r\n    }\r\n\r\n    throwStackInfo(new Error(), TYPES, args);\r\n  }\r\n\r\n  /**\r\n   * \u91CD\u8F7D\u51FD\u6570\r\n   * @param {...any} params - \u53C2\u6570\u5217\u8868\r\n   * @returns {any} \u8FD4\u56DE\u503C\r\n   */\r\n  function overload(...params) {\r\n    if (!TYPES.length) {\r\n      return runAny.apply(this, params);\r\n    }\r\n\r\n    const paramsLength = params.length;\r\n\r\n    loop: for (let i = 0; i < TYPES.length; i++) {\r\n      const types = TYPES[i];\r\n      const options = OPTIONS[i];\r\n      const typesLength = types.length;\r\n\r\n      if ((options.length !== paramsLength && !options.rest) ||\r\n        (paramsLength === 0 && typesLength && types[0] !== REST_STR)) {\r\n        continue;\r\n      }\r\n\r\n      for (let j = 0; j < paramsLength; j++) {\r\n        const type = types[j] || types[typesLength - 1];\r\n        if (!matchType(params[j], type)) {\r\n          try {\r\n            const convert = type?.[TYPE_CONVERT_STR]?.(params[j]);\r\n            if (matchType(convert, type)) {\r\n              params[j] = convert;\r\n              continue;\r\n            }\r\n          } catch { }\r\n          continue loop;\r\n        }\r\n      }\r\n\r\n      return FNS[i].apply(this, params);\r\n    }\r\n\r\n    return runAny.apply(this, params);\r\n  }\r\n\r\n  /**\r\n   * \u6DFB\u52A0\u51FD\u6570\u91CD\u8F7D\r\n   * @param {Array} types - \u53C2\u6570\u7C7B\u578B\u5217\u8868\r\n   * @param {Function} fn - \u8981\u8C03\u7528\u7684\u51FD\u6570\r\n   * @returns {Function} \u91CD\u8F7D\u51FD\u6570\r\n   * @throws {TypeError}\r\n   * @throws {Error}\r\n   */\r\n  overload.add = function (types, fn) {\r\n    if (!Array.isArray(TYPES)) {\r\n      throw new TypeError(\"types \u5FC5\u987B\u662F\u6570\u7EC4\u3002\");\r\n    }\r\n\r\n    if (typeof fn !== \"function\") {\r\n      throw new TypeError(\"fn \u5FC5\u987B\u662F\u51FD\u6570\u3002\");\r\n    }\r\n\r\n    for (let i = 0; i < types.length; i++) {\r\n      if (types[i] === REST_STR && i !== types.length - 1) {\r\n        throw new SyntaxError(`${REST_STR} \u5FC5\u987B\u662F\u6700\u540E\u4E00\u4E2A\u53C2\u6570\u3002`);\r\n      }\r\n    }\r\n\r\n    TYPES.forEach((key) => {\r\n      if (key.length !== types.length) {\r\n        return;\r\n      }\r\n\r\n      for (let i = 0; i < key.length; i++) {\r\n        if (key[i] !== types[i]) return;\r\n      }\r\n\r\n      throw new Error(\"\u5DF2\u5B58\u5728\u6B64\u7B7E\u540D\u7684\u91CD\u8F7D\u3002\");\r\n    });\r\n\r\n    TYPES.forEach(type => {\r\n      const isArray = Array.isArray(type);\r\n      if (typeof type !== \"function\" && !isArray && type !== ANY_STR && type !== REST_STR) {\r\n        throw new TypeError(`\u671F\u671B\u7C7B\u578B\u4E3A Class\u3001Array\u3001${ANY_STR} \u6216\u672B\u5C3E\u53C2\u6570\u4E5F\u53EF\u4EE5\u662F ${REST_STR}\u3002`);\r\n      }\r\n\r\n      if (isArray) {\r\n        for (let i = 0; i < type.length; i++) {\r\n          const typeofStr = typeof type[i];\r\n          if (\r\n            typeofStr !== \"function\" &&\r\n            !(typeofStr === \"object\" && typeof type[i]?.constructor === \"function\") &&\r\n            type[i] !== null &&\r\n            type[i] !== ANY_STR\r\n          ) {\r\n            throw new TypeError(`\u7C7B\u578B\u5FC5\u987B\u4E3A Class\u3001null \u6216 ${ANY_STR}\u3002`);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    TYPES.push(types);\r\n    FNS.push(fn);\r\n    OPTIONS.push({\r\n      length: types.length,\r\n      rest: types[types.length - 1] === REST_STR,\r\n    });\r\n\r\n    return overload;\r\n  };\r\n\r\n  /**\r\n   * \u8BBE\u7F6E\u515C\u5E95\u51FD\u6570\r\n   * @param {Function} fn - \u515C\u5E95\u51FD\u6570\r\n   * @returns {Function} \u91CD\u8F7D\u51FD\u6570\r\n   * @throws {TypeError}\r\n   * @throws {Error}\r\n   */\r\n  overload.any = function (fn) {\r\n    if (anyFn) {\r\n      throw new Error(\"any \u51FD\u6570\u5DF2\u5B58\u5728\u3002\");\r\n    }\r\n\r\n    if (typeof fn !== \"function\") {\r\n      throw new TypeError(\"fn \u5FC5\u987B\u662F\u51FD\u6570\u3002\");\r\n    }\r\n\r\n    anyFn = fn;\r\n\r\n    return overload;\r\n  };\r\n\r\n  return overload;\r\n}\r\n\r\nexport default createOverload()\r\n  .add([], function () {\r\n    return createOverload();\r\n  })\r\n  .add([Array, Function], function (types, fn) {\r\n    const result = createOverload();\r\n    result.add(types, fn);\r\n    return result;\r\n  });", "/**\r\n * \u4EFB\u610F\u7C7B\u578B\u6807\u5FD7\r\n */\r\nexport const ANY_STR = \"*\";\r\n\r\n/**\r\n * \u5269\u4F59\u53C2\u6570\u6807\u5FD7\r\n */\r\nexport const REST_STR = \"...\";\r\n\r\n/**\r\n * \u7C7B\u578B\u8F6C\u6362\u6807\u5FD7\r\n */\r\nexport const TYPE_CONVERT_STR = \"\u21C4\";\r\n\r\n/**\r\n * \u5185\u90E8\u7C7B\u578B\u7236\u7EA7\u6807\u5FD7\r\n */\r\nexport const INNER_TYPE_FATHER = \"##INNER_TYPE##\";\r\n\r\n/**\r\n * \u5185\u90E8\u7C7B\u578B\u5B50\u7EA7\u6807\u5FD7\r\n */\r\nexport const INNER_TYPE_SON = \"@@INNER_TYPE@@\";\r\n\r\n/**\r\n * \u5185\u90E8\u629B\u51FA\u51FD\u6570\u6807\u5FD7\r\n */\r\nexport const INNER_THROW_FN = \"##INNER_THROW_FN##\";\r\n\r\n/**\r\n * \u5185\u90E8\u7C7B\u578B\u51FD\u6570\u6807\u5FD7\r\n */\r\nexport const INNER_TYPE_FN = \"##INNER_TYPE_FN##\";", "import { ANY_STR, REST_STR, TYPE_CONVERT_STR, INNER_TYPE_FATHER, INNER_TYPE_SON, INNER_TYPE_FN, INNER_THROW_FN } from \"./constant.js\";\r\n\r\n/**\r\n * \u5339\u914D\u7C7B\u578B\r\n * @param {any} param - \u4F20\u5165\u7684\u53C2\u6570\r\n * @param {any} type - \u671F\u671B\u7684\u7C7B\u578B\r\n * @returns {Boolean} \u662F\u5426\u5339\u914D\r\n */\r\nfunction matchType(param, type) {\r\n  if (Array.isArray(type)) {\r\n    for (let i = 0; i < type.length; i++) {\r\n      if (matchType(param, type[i])) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  if (type?.[INNER_TYPE_FN]?.(param)) {\r\n    return true;\r\n  }\r\n\r\n  if (typeof type !== \"function\") {\r\n    if (\r\n      type === ANY_STR && param !== null ||\r\n      type === REST_STR ||\r\n      (type === null && param === null) ||\r\n      type === typeof param\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  switch (typeof param) {\r\n    case \"function\":\r\n    case \"object\":\r\n      break;\r\n    case \"string\": param = String; break;\r\n    case \"number\": param = Number; break;\r\n    case \"boolean\": param = Boolean; break;\r\n    case \"symbol\": param = Symbol; break;\r\n    case \"bigint\": param = BigInt; break;\r\n    default: param = Object(param); break;\r\n  }\r\n\r\n  if (param === type || param instanceof type) {\r\n    return true;\r\n  }\r\n\r\n  if (param?.[INNER_TYPE_SON]) {\r\n    return param[INNER_TYPE_SON] === type?.[INNER_TYPE_FATHER];\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/**\r\n * \u83B7\u53D6\u7C7B\u578B\u540D\u79F0\r\n * @param {any} param - \u4F20\u5165\u7684\u53C2\u6570\r\n * @returns {String} \u7C7B\u578B\u540D\u79F0\r\n */\r\nfunction getTypeName(param) {\r\n  if (param === null) {\r\n    return \"null\";\r\n  }\r\n\r\n  if (param === ANY_STR) {\r\n    return \"(\u4EFB\u610F)\";\r\n  }\r\n\r\n  const paramType = typeof param;\r\n\r\n  if (![\"function\", \"object\"].includes(paramType)) {\r\n    return paramType[0].toUpperCase() + paramType.slice(1);;\r\n  }\r\n\r\n  let className = (param?.name || param?.constructor?.name || \"(\u672A\u77E5)\").split(\" \").pop();\r\n\r\n  [INNER_TYPE_FATHER, INNER_TYPE_SON].forEach(v => {\r\n    if (param?.[v]) {\r\n      className += `<${getTypeName(param?.[v])}>`;\r\n    }\r\n  });\r\n\r\n  if (paramType === \"function\" && className === \"anonymous\") {\r\n    return \"(\u533F\u540D)\";\r\n  }\r\n\r\n  return className;\r\n}\r\n\r\n/**\r\n * \u629B\u51FA\u5806\u6808\u4FE1\u606F\r\n * @param {Error} err - \u9519\u8BEF\u5BF9\u8C61\r\n * @param {...any} args - \u53C2\u6570\u5217\u8868\r\n * @throws {Error}\r\n */\r\nfunction throwStackInfo(err, types, args) {\r\n  const stackList = err.stack.split(\"\\n\").splice(3);\r\n  let errorMessage = \"\";\r\n  let formattedStack = \"\\n\";\r\n  let errorMethodName = \"\";\r\n\r\n  stackList.forEach((stackLine, index, arr) => {\r\n    const parts = stackLine.trim().split(\" \");\r\n    const fullMethodName = parts.length === 3 ? parts[1] : `(\u533F\u540D)`;\r\n    const methodName = fullMethodName.split(\".\").pop();\r\n\r\n    arr[index] = {\r\n      fullMethodName,\r\n      methodName,\r\n      link: parts.length === 3 ? parts[2] : parts[1],\r\n    };\r\n\r\n    if (!index) {\r\n      errorMethodName = methodName;\r\n    } else {\r\n      formattedStack += `${methodName}\\t${arr[index].link}\\n`;\r\n    }\r\n  });\r\n\r\n  const matchingTypes = types.find(v => v.length === args.length);\r\n\r\n  if (!matchingTypes) {\r\n    errorMessage += `\u65B9\u6CD5 ${errorMethodName} \u4E0D\u5B58\u5728 ${args.length} \u4E2A\u53C2\u6570\u7684\u91CD\u8F7D\u3002`;\r\n    errorMessage += formattedStack;\r\n    throw new Error(errorMessage);\r\n  }\r\n\r\n  let hasError = false;\r\n  matchingTypes.forEach((expectedType, i) => {\r\n    if (!matchType(args[i], expectedType)) {\r\n      const expectedTypeNames = Array.isArray(expectedType)\r\n        ? expectedType.map(getTypeName).join(\"\u3001\")\r\n        : getTypeName(expectedType);\r\n\r\n      errorMessage += `${hasError ? \"\\n\" : \"\"}\u53C2\u6570${i + 1}\uFF1A\u9884\u671F ${expectedTypeNames} \u4F46\u5F97\u5230 ${getTypeName(args[i])}\u3002`;\r\n\r\n      if (Array.isArray(expectedType)) {\r\n        expectedType.forEach((type, index) => {\r\n          if (typeof type?.[INNER_THROW_FN] === \"function\") {\r\n            errorMessage += `${index === 0 ? \"\\n\u9644\u52A0\u4FE1\u606F\uFF1A\\n\" : \"\"}\u5C1D\u8BD5\u65B9\u6848${i + 1} - ${type[INNER_THROW_FN]?.(args[i])}`;\r\n          }\r\n        });\r\n      } else if (typeof expectedType?.[INNER_THROW_FN] === \"function\") {\r\n        errorMessage += `\\n\u9644\u52A0\u4FE1\u606F\uFF1A\\n\u5C1D\u8BD5\u65B9\u6848${i + 1} - ${expectedType[INNER_THROW_FN]?.(args[i])}`;\r\n      }\r\n\r\n      hasError = true;\r\n    }\r\n  });\r\n\r\n  if (hasError) {\r\n    errorMessage = `\u65B9\u6CD5 ${errorMethodName} \u8C03\u7528\u9519\u8BEF\\n${errorMessage}`;\r\n    errorMessage += formattedStack;\r\n    throw new Error(errorMessage);\r\n  }\r\n}\r\n\r\n/**\r\n * \u8FD4\u56DE\u4E00\u4E2A\u91CD\u8F7D\u51FD\u6570\r\n * @returns {Function} \u91CD\u8F7D\u51FD\u6570\r\n */\r\nfunction createOverload() {\r\n  const TYPES = [];\r\n  const FNS = [];\r\n  const OPTIONS = [];\r\n  let anyFn = null;\r\n\r\n  /**\r\n   * \u8C03\u7528\u515C\u5E95\u51FD\u6570\r\n   * @param  {...any} args - \u53C2\u6570\u5217\u8868\r\n   * @returns {any} \u8FD4\u56DE\u503C\r\n   */\r\n  function runAny(...args) {\r\n    if (anyFn) {\r\n      return anyFn.apply(this, args);\r\n    }\r\n\r\n    throwStackInfo(new Error(), TYPES, args);\r\n  }\r\n\r\n  /**\r\n   * \u91CD\u8F7D\u51FD\u6570\r\n   * @param {...any} params - \u53C2\u6570\u5217\u8868\r\n   * @returns {any} \u8FD4\u56DE\u503C\r\n   */\r\n  function overload(...params) {\r\n    if (!TYPES.length) {\r\n      return runAny.apply(this, params);\r\n    }\r\n\r\n    const paramsLength = params.length;\r\n\r\n    loop: for (let i = 0; i < TYPES.length; i++) {\r\n      const types = TYPES[i];\r\n      const options = OPTIONS[i];\r\n      const typesLength = types.length;\r\n\r\n      if ((options.length !== paramsLength && !options.rest) ||\r\n        (paramsLength === 0 && typesLength && types[0] !== REST_STR)) {\r\n        continue;\r\n      }\r\n\r\n      for (let j = 0; j < paramsLength; j++) {\r\n        const type = types[j] || types[typesLength - 1];\r\n        if (!matchType(params[j], type)) {\r\n          try {\r\n            const convert = type?.[TYPE_CONVERT_STR]?.(params[j]);\r\n            if (matchType(convert, type)) {\r\n              params[j] = convert;\r\n              continue;\r\n            }\r\n          } catch { }\r\n          continue loop;\r\n        }\r\n      }\r\n\r\n      return FNS[i].apply(this, params);\r\n    }\r\n\r\n    return runAny.apply(this, params);\r\n  }\r\n\r\n  /**\r\n   * \u6DFB\u52A0\u51FD\u6570\u91CD\u8F7D\r\n   * @param {Array} types - \u53C2\u6570\u7C7B\u578B\u5217\u8868\r\n   * @param {Function} fn - \u8981\u8C03\u7528\u7684\u51FD\u6570\r\n   * @returns {Function} \u91CD\u8F7D\u51FD\u6570\r\n   * @throws {TypeError}\r\n   * @throws {Error}\r\n   */\r\n  overload.add = function (types, fn) {\r\n    if (!Array.isArray(TYPES)) {\r\n      throw new TypeError(\"types \u5FC5\u987B\u662F\u6570\u7EC4\u3002\");\r\n    }\r\n\r\n    if (typeof fn !== \"function\") {\r\n      throw new TypeError(\"fn \u5FC5\u987B\u662F\u51FD\u6570\u3002\");\r\n    }\r\n\r\n    for (let i = 0; i < types.length; i++) {\r\n      if (types[i] === REST_STR && i !== types.length - 1) {\r\n        throw new SyntaxError(`${REST_STR} \u5FC5\u987B\u662F\u6700\u540E\u4E00\u4E2A\u53C2\u6570\u3002`);\r\n      }\r\n    }\r\n\r\n    TYPES.forEach((key) => {\r\n      if (key.length !== types.length) {\r\n        return;\r\n      }\r\n\r\n      for (let i = 0; i < key.length; i++) {\r\n        if (key[i] !== types[i]) return;\r\n      }\r\n\r\n      throw new Error(\"\u5DF2\u5B58\u5728\u6B64\u7B7E\u540D\u7684\u91CD\u8F7D\u3002\");\r\n    });\r\n\r\n    TYPES.forEach(type => {\r\n      const isArray = Array.isArray(type);\r\n      if (typeof type !== \"function\" && !isArray && type !== ANY_STR && type !== REST_STR) {\r\n        throw new TypeError(`\u671F\u671B\u7C7B\u578B\u4E3A Class\u3001Array\u3001${ANY_STR} \u6216\u672B\u5C3E\u53C2\u6570\u4E5F\u53EF\u4EE5\u662F ${REST_STR}\u3002`);\r\n      }\r\n\r\n      if (isArray) {\r\n        for (let i = 0; i < type.length; i++) {\r\n          const typeofStr = typeof type[i];\r\n          if (\r\n            typeofStr !== \"function\" &&\r\n            !(typeofStr === \"object\" && typeof type[i]?.constructor === \"function\") &&\r\n            type[i] !== null &&\r\n            type[i] !== ANY_STR\r\n          ) {\r\n            throw new TypeError(`\u7C7B\u578B\u5FC5\u987B\u4E3A Class\u3001null \u6216 ${ANY_STR}\u3002`);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    TYPES.push(types);\r\n    FNS.push(fn);\r\n    OPTIONS.push({\r\n      length: types.length,\r\n      rest: types[types.length - 1] === REST_STR,\r\n    });\r\n\r\n    return overload;\r\n  };\r\n\r\n  /**\r\n   * \u8BBE\u7F6E\u515C\u5E95\u51FD\u6570\r\n   * @param {Function} fn - \u515C\u5E95\u51FD\u6570\r\n   * @returns {Function} \u91CD\u8F7D\u51FD\u6570\r\n   * @throws {TypeError}\r\n   * @throws {Error}\r\n   */\r\n  overload.any = function (fn) {\r\n    if (anyFn) {\r\n      throw new Error(\"any \u51FD\u6570\u5DF2\u5B58\u5728\u3002\");\r\n    }\r\n\r\n    if (typeof fn !== \"function\") {\r\n      throw new TypeError(\"fn \u5FC5\u987B\u662F\u51FD\u6570\u3002\");\r\n    }\r\n\r\n    anyFn = fn;\r\n\r\n    return overload;\r\n  };\r\n\r\n  return overload;\r\n}\r\n\r\nexport default createOverload()\r\n  .add([], function () {\r\n    return createOverload();\r\n  })\r\n  .add([Array, Function], function (types, fn) {\r\n    const result = createOverload();\r\n    result.add(types, fn);\r\n    return result;\r\n  });", "// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport abstract class _CodeOrName {\n  abstract readonly str: string\n  abstract readonly names: UsedNames\n  abstract toString(): string\n  abstract emptyStr(): boolean\n}\n\nexport const IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i\n\nexport class Name extends _CodeOrName {\n  readonly str: string\n  constructor(s: string) {\n    super()\n    if (!IDENTIFIER.test(s)) throw new Error(\"CodeGen: name must be a valid identifier\")\n    this.str = s\n  }\n\n  toString(): string {\n    return this.str\n  }\n\n  emptyStr(): boolean {\n    return false\n  }\n\n  get names(): UsedNames {\n    return {[this.str]: 1}\n  }\n}\n\nexport class _Code extends _CodeOrName {\n  readonly _items: readonly CodeItem[]\n  private _str?: string\n  private _names?: UsedNames\n\n  constructor(code: string | readonly CodeItem[]) {\n    super()\n    this._items = typeof code === \"string\" ? [code] : code\n  }\n\n  toString(): string {\n    return this.str\n  }\n\n  emptyStr(): boolean {\n    if (this._items.length > 1) return false\n    const item = this._items[0]\n    return item === \"\" || item === '\"\"'\n  }\n\n  get str(): string {\n    return (this._str ??= this._items.reduce((s: string, c: CodeItem) => `${s}${c}`, \"\"))\n  }\n\n  get names(): UsedNames {\n    return (this._names ??= this._items.reduce((names: UsedNames, c) => {\n      if (c instanceof Name) names[c.str] = (names[c.str] || 0) + 1\n      return names\n    }, {}))\n  }\n}\n\nexport type CodeItem = Name | string | number | boolean | null\n\nexport type UsedNames = Record<string, number | undefined>\n\nexport type Code = _Code | Name\n\nexport type SafeExpr = Code | number | boolean | null\n\nexport const nil = new _Code(\"\")\n\ntype CodeArg = SafeExpr | string | undefined\n\nexport function _(strs: TemplateStringsArray, ...args: CodeArg[]): _Code {\n  const code: CodeItem[] = [strs[0]]\n  let i = 0\n  while (i < args.length) {\n    addCodeArg(code, args[i])\n    code.push(strs[++i])\n  }\n  return new _Code(code)\n}\n\nconst plus = new _Code(\"+\")\n\nexport function str(strs: TemplateStringsArray, ...args: (CodeArg | string[])[]): _Code {\n  const expr: CodeItem[] = [safeStringify(strs[0])]\n  let i = 0\n  while (i < args.length) {\n    expr.push(plus)\n    addCodeArg(expr, args[i])\n    expr.push(plus, safeStringify(strs[++i]))\n  }\n  optimize(expr)\n  return new _Code(expr)\n}\n\nexport function addCodeArg(code: CodeItem[], arg: CodeArg | string[]): void {\n  if (arg instanceof _Code) code.push(...arg._items)\n  else if (arg instanceof Name) code.push(arg)\n  else code.push(interpolate(arg))\n}\n\nfunction optimize(expr: CodeItem[]): void {\n  let i = 1\n  while (i < expr.length - 1) {\n    if (expr[i] === plus) {\n      const res = mergeExprItems(expr[i - 1], expr[i + 1])\n      if (res !== undefined) {\n        expr.splice(i - 1, 3, res)\n        continue\n      }\n      expr[i++] = \"+\"\n    }\n    i++\n  }\n}\n\nfunction mergeExprItems(a: CodeItem, b: CodeItem): CodeItem | undefined {\n  if (b === '\"\"') return a\n  if (a === '\"\"') return b\n  if (typeof a == \"string\") {\n    if (b instanceof Name || a[a.length - 1] !== '\"') return\n    if (typeof b != \"string\") return `${a.slice(0, -1)}${b}\"`\n    if (b[0] === '\"') return a.slice(0, -1) + b.slice(1)\n    return\n  }\n  if (typeof b == \"string\" && b[0] === '\"' && !(a instanceof Name)) return `\"${a}${b.slice(1)}`\n  return\n}\n\nexport function strConcat(c1: Code, c2: Code): Code {\n  return c2.emptyStr() ? c1 : c1.emptyStr() ? c2 : str`${c1}${c2}`\n}\n\n// TODO do not allow arrays here\nfunction interpolate(x?: string | string[] | number | boolean | null): SafeExpr | string {\n  return typeof x == \"number\" || typeof x == \"boolean\" || x === null\n    ? x\n    : safeStringify(Array.isArray(x) ? x.join(\",\") : x)\n}\n\nexport function stringify(x: unknown): Code {\n  return new _Code(safeStringify(x))\n}\n\nexport function safeStringify(x: unknown): string {\n  return JSON.stringify(x)\n    .replace(/\\u2028/g, \"\\\\u2028\")\n    .replace(/\\u2029/g, \"\\\\u2029\")\n}\n\nexport function getProperty(key: Code | string | number): Code {\n  return typeof key == \"string\" && IDENTIFIER.test(key) ? new _Code(`.${key}`) : _`[${key}]`\n}\n\n//Does best effort to format the name properly\nexport function getEsmExportName(key: Code | string | number): Code {\n  if (typeof key == \"string\" && IDENTIFIER.test(key)) {\n    return new _Code(`${key}`)\n  }\n  throw new Error(`CodeGen: invalid export name: ${key}, use explicit $id name mapping`)\n}\n\nexport function regexpCode(rx: RegExp): Code {\n  return new _Code(rx.toString())\n}\n", "import {_, nil, Code, Name} from \"./code\"\n\ninterface NameGroup {\n  prefix: string\n  index: number\n}\n\nexport interface NameValue {\n  ref: ValueReference // this is the reference to any value that can be referred to from generated code via `globals` var in the closure\n  key?: unknown // any key to identify a global to avoid duplicates, if not passed ref is used\n  code?: Code // this is the code creating the value needed for standalone code wit_out closure - can be a primitive value, function or import (`require`)\n}\n\nexport type ValueReference = unknown // possibly make CodeGen parameterized type on this type\n\nclass ValueError extends Error {\n  readonly value?: NameValue\n  constructor(name: ValueScopeName) {\n    super(`CodeGen: \"code\" for ${name} not defined`)\n    this.value = name.value\n  }\n}\n\ninterface ScopeOptions {\n  prefixes?: Set<string>\n  parent?: Scope\n}\n\ninterface ValueScopeOptions extends ScopeOptions {\n  scope: ScopeStore\n  es5?: boolean\n  lines?: boolean\n}\n\nexport type ScopeStore = Record<string, ValueReference[] | undefined>\n\ntype ScopeValues = {\n  [Prefix in string]?: Map<unknown, ValueScopeName>\n}\n\nexport type ScopeValueSets = {\n  [Prefix in string]?: Set<ValueScopeName>\n}\n\nexport enum UsedValueState {\n  Started,\n  Completed,\n}\n\nexport type UsedScopeValues = {\n  [Prefix in string]?: Map<ValueScopeName, UsedValueState | undefined>\n}\n\nexport const varKinds = {\n  const: new Name(\"const\"),\n  let: new Name(\"let\"),\n  var: new Name(\"var\"),\n}\n\nexport class Scope {\n  protected readonly _names: {[Prefix in string]?: NameGroup} = {}\n  protected readonly _prefixes?: Set<string>\n  protected readonly _parent?: Scope\n\n  constructor({prefixes, parent}: ScopeOptions = {}) {\n    this._prefixes = prefixes\n    this._parent = parent\n  }\n\n  toName(nameOrPrefix: Name | string): Name {\n    return nameOrPrefix instanceof Name ? nameOrPrefix : this.name(nameOrPrefix)\n  }\n\n  name(prefix: string): Name {\n    return new Name(this._newName(prefix))\n  }\n\n  protected _newName(prefix: string): string {\n    const ng = this._names[prefix] || this._nameGroup(prefix)\n    return `${prefix}${ng.index++}`\n  }\n\n  private _nameGroup(prefix: string): NameGroup {\n    if (this._parent?._prefixes?.has(prefix) || (this._prefixes && !this._prefixes.has(prefix))) {\n      throw new Error(`CodeGen: prefix \"${prefix}\" is not allowed in this scope`)\n    }\n    return (this._names[prefix] = {prefix, index: 0})\n  }\n}\n\ninterface ScopePath {\n  property: string\n  itemIndex: number\n}\n\nexport class ValueScopeName extends Name {\n  readonly prefix: string\n  value?: NameValue\n  scopePath?: Code\n\n  constructor(prefix: string, nameStr: string) {\n    super(nameStr)\n    this.prefix = prefix\n  }\n\n  setValue(value: NameValue, {property, itemIndex}: ScopePath): void {\n    this.value = value\n    this.scopePath = _`.${new Name(property)}[${itemIndex}]`\n  }\n}\n\ninterface VSOptions extends ValueScopeOptions {\n  _n: Code\n}\n\nconst line = _`\\n`\n\nexport class ValueScope extends Scope {\n  protected readonly _values: ScopeValues = {}\n  protected readonly _scope: ScopeStore\n  readonly opts: VSOptions\n\n  constructor(opts: ValueScopeOptions) {\n    super(opts)\n    this._scope = opts.scope\n    this.opts = {...opts, _n: opts.lines ? line : nil}\n  }\n\n  get(): ScopeStore {\n    return this._scope\n  }\n\n  name(prefix: string): ValueScopeName {\n    return new ValueScopeName(prefix, this._newName(prefix))\n  }\n\n  value(nameOrPrefix: ValueScopeName | string, value: NameValue): ValueScopeName {\n    if (value.ref === undefined) throw new Error(\"CodeGen: ref must be passed in value\")\n    const name = this.toName(nameOrPrefix) as ValueScopeName\n    const {prefix} = name\n    const valueKey = value.key ?? value.ref\n    let vs = this._values[prefix]\n    if (vs) {\n      const _name = vs.get(valueKey)\n      if (_name) return _name\n    } else {\n      vs = this._values[prefix] = new Map()\n    }\n    vs.set(valueKey, name)\n\n    const s = this._scope[prefix] || (this._scope[prefix] = [])\n    const itemIndex = s.length\n    s[itemIndex] = value.ref\n    name.setValue(value, {property: prefix, itemIndex})\n    return name\n  }\n\n  getValue(prefix: string, keyOrRef: unknown): ValueScopeName | undefined {\n    const vs = this._values[prefix]\n    if (!vs) return\n    return vs.get(keyOrRef)\n  }\n\n  scopeRefs(scopeName: Name, values: ScopeValues | ScopeValueSets = this._values): Code {\n    return this._reduceValues(values, (name: ValueScopeName) => {\n      if (name.scopePath === undefined) throw new Error(`CodeGen: name \"${name}\" has no value`)\n      return _`${scopeName}${name.scopePath}`\n    })\n  }\n\n  scopeCode(\n    values: ScopeValues | ScopeValueSets = this._values,\n    usedValues?: UsedScopeValues,\n    getCode?: (n: ValueScopeName) => Code | undefined\n  ): Code {\n    return this._reduceValues(\n      values,\n      (name: ValueScopeName) => {\n        if (name.value === undefined) throw new Error(`CodeGen: name \"${name}\" has no value`)\n        return name.value.code\n      },\n      usedValues,\n      getCode\n    )\n  }\n\n  private _reduceValues(\n    values: ScopeValues | ScopeValueSets,\n    valueCode: (n: ValueScopeName) => Code | undefined,\n    usedValues: UsedScopeValues = {},\n    getCode?: (n: ValueScopeName) => Code | undefined\n  ): Code {\n    let code: Code = nil\n    for (const prefix in values) {\n      const vs = values[prefix]\n      if (!vs) continue\n      const nameSet = (usedValues[prefix] = usedValues[prefix] || new Map())\n      vs.forEach((name: ValueScopeName) => {\n        if (nameSet.has(name)) return\n        nameSet.set(name, UsedValueState.Started)\n        let c = valueCode(name)\n        if (c) {\n          const def = this.opts.es5 ? varKinds.var : varKinds.const\n          code = _`${code}${def} ${name} = ${c};${this.opts._n}`\n        } else if ((c = getCode?.(name))) {\n          code = _`${code}${c}${this.opts._n}`\n        } else {\n          throw new ValueError(name)\n        }\n        nameSet.set(name, UsedValueState.Completed)\n      })\n    }\n    return code\n  }\n}\n", "import type {ScopeValueSets, NameValue, ValueScope, ValueScopeName} from \"./scope\"\nimport {_, nil, _Code, Code, Name, UsedNames, CodeItem, addCodeArg, _CodeOrName} from \"./code\"\nimport {Scope, varKinds} from \"./scope\"\n\nexport {_, str, strConcat, nil, getProperty, stringify, regexpCode, Name, Code} from \"./code\"\nexport {Scope, ScopeStore, ValueScope, ValueScopeName, ScopeValueSets, varKinds} from \"./scope\"\n\n// type for expressions that can be safely inserted in code without quotes\nexport type SafeExpr = Code | number | boolean | null\n\n// type that is either Code of function that adds code to CodeGen instance using its methods\nexport type Block = Code | (() => void)\n\nexport const operators = {\n  GT: new _Code(\">\"),\n  GTE: new _Code(\">=\"),\n  LT: new _Code(\"<\"),\n  LTE: new _Code(\"<=\"),\n  EQ: new _Code(\"===\"),\n  NEQ: new _Code(\"!==\"),\n  NOT: new _Code(\"!\"),\n  OR: new _Code(\"||\"),\n  AND: new _Code(\"&&\"),\n  ADD: new _Code(\"+\"),\n}\n\nabstract class Node {\n  abstract readonly names: UsedNames\n\n  optimizeNodes(): this | ChildNode | ChildNode[] | undefined {\n    return this\n  }\n\n  optimizeNames(_names: UsedNames, _constants: Constants): this | undefined {\n    return this\n  }\n\n  // get count(): number {\n  //   return 1\n  // }\n}\n\nclass Def extends Node {\n  constructor(\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private rhs?: SafeExpr\n  ) {\n    super()\n  }\n\n  render({es5, _n}: CGOptions): string {\n    const varKind = es5 ? varKinds.var : this.varKind\n    const rhs = this.rhs === undefined ? \"\" : ` = ${this.rhs}`\n    return `${varKind} ${this.name}${rhs};` + _n\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!names[this.name.str]) return\n    if (this.rhs) this.rhs = optimizeExpr(this.rhs, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return this.rhs instanceof _CodeOrName ? this.rhs.names : {}\n  }\n}\n\nclass Assign extends Node {\n  constructor(\n    readonly lhs: Code,\n    public rhs: SafeExpr,\n    private readonly sideEffects?: boolean\n  ) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.lhs} = ${this.rhs};` + _n\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (this.lhs instanceof Name && !names[this.lhs.str] && !this.sideEffects) return\n    this.rhs = optimizeExpr(this.rhs, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = this.lhs instanceof Name ? {} : {...this.lhs.names}\n    return addExprNames(names, this.rhs)\n  }\n}\n\nclass AssignOp extends Assign {\n  constructor(\n    lhs: Code,\n    private readonly op: Code,\n    rhs: SafeExpr,\n    sideEffects?: boolean\n  ) {\n    super(lhs, rhs, sideEffects)\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.lhs} ${this.op}= ${this.rhs};` + _n\n  }\n}\n\nclass Label extends Node {\n  readonly names: UsedNames = {}\n  constructor(readonly label: Name) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.label}:` + _n\n  }\n}\n\nclass Break extends Node {\n  readonly names: UsedNames = {}\n  constructor(readonly label?: Code) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    const label = this.label ? ` ${this.label}` : \"\"\n    return `break${label};` + _n\n  }\n}\n\nclass Throw extends Node {\n  constructor(readonly error: Code) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `throw ${this.error};` + _n\n  }\n\n  get names(): UsedNames {\n    return this.error.names\n  }\n}\n\nclass AnyCode extends Node {\n  constructor(private code: SafeExpr) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.code};` + _n\n  }\n\n  optimizeNodes(): this | undefined {\n    return `${this.code}` ? this : undefined\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this {\n    this.code = optimizeExpr(this.code, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return this.code instanceof _CodeOrName ? this.code.names : {}\n  }\n}\n\nabstract class ParentNode extends Node {\n  constructor(readonly nodes: ChildNode[] = []) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return this.nodes.reduce((code, n) => code + n.render(opts), \"\")\n  }\n\n  optimizeNodes(): this | ChildNode | ChildNode[] | undefined {\n    const {nodes} = this\n    let i = nodes.length\n    while (i--) {\n      const n = nodes[i].optimizeNodes()\n      if (Array.isArray(n)) nodes.splice(i, 1, ...n)\n      else if (n) nodes[i] = n\n      else nodes.splice(i, 1)\n    }\n    return nodes.length > 0 ? this : undefined\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    const {nodes} = this\n    let i = nodes.length\n    while (i--) {\n      // iterating backwards improves 1-pass optimization\n      const n = nodes[i]\n      if (n.optimizeNames(names, constants)) continue\n      subtractNames(names, n.names)\n      nodes.splice(i, 1)\n    }\n    return nodes.length > 0 ? this : undefined\n  }\n\n  get names(): UsedNames {\n    return this.nodes.reduce((names: UsedNames, n) => addNames(names, n.names), {})\n  }\n\n  // get count(): number {\n  //   return this.nodes.reduce((c, n) => c + n.count, 1)\n  // }\n}\n\nabstract class BlockNode extends ParentNode {\n  render(opts: CGOptions): string {\n    return \"{\" + opts._n + super.render(opts) + \"}\" + opts._n\n  }\n}\n\nclass Root extends ParentNode {}\n\nclass Else extends BlockNode {\n  static readonly kind = \"else\"\n}\n\nclass If extends BlockNode {\n  static readonly kind = \"if\"\n  else?: If | Else\n  constructor(\n    private condition: Code | boolean,\n    nodes?: ChildNode[]\n  ) {\n    super(nodes)\n  }\n\n  render(opts: CGOptions): string {\n    let code = `if(${this.condition})` + super.render(opts)\n    if (this.else) code += \"else \" + this.else.render(opts)\n    return code\n  }\n\n  optimizeNodes(): If | ChildNode[] | undefined {\n    super.optimizeNodes()\n    const cond = this.condition\n    if (cond === true) return this.nodes // else is ignored here\n    let e = this.else\n    if (e) {\n      const ns = e.optimizeNodes()\n      e = this.else = Array.isArray(ns) ? new Else(ns) : (ns as Else | undefined)\n    }\n    if (e) {\n      if (cond === false) return e instanceof If ? e : e.nodes\n      if (this.nodes.length) return this\n      return new If(not(cond), e instanceof If ? [e] : e.nodes)\n    }\n    if (cond === false || !this.nodes.length) return undefined\n    return this\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    this.else = this.else?.optimizeNames(names, constants)\n    if (!(super.optimizeNames(names, constants) || this.else)) return\n    this.condition = optimizeExpr(this.condition, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = super.names\n    addExprNames(names, this.condition)\n    if (this.else) addNames(names, this.else.names)\n    return names\n  }\n\n  // get count(): number {\n  //   return super.count + (this.else?.count || 0)\n  // }\n}\n\nabstract class For extends BlockNode {\n  static readonly kind = \"for\"\n}\n\nclass ForLoop extends For {\n  constructor(private iteration: Code) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `for(${this.iteration})` + super.render(opts)\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!super.optimizeNames(names, constants)) return\n    this.iteration = optimizeExpr(this.iteration, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return addNames(super.names, this.iteration.names)\n  }\n}\n\nclass ForRange extends For {\n  constructor(\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private readonly from: SafeExpr,\n    private readonly to: SafeExpr\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    const varKind = opts.es5 ? varKinds.var : this.varKind\n    const {name, from, to} = this\n    return `for(${varKind} ${name}=${from}; ${name}<${to}; ${name}++)` + super.render(opts)\n  }\n\n  get names(): UsedNames {\n    const names = addExprNames(super.names, this.from)\n    return addExprNames(names, this.to)\n  }\n}\n\nclass ForIter extends For {\n  constructor(\n    private readonly loop: \"of\" | \"in\",\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private iterable: Code\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `for(${this.varKind} ${this.name} ${this.loop} ${this.iterable})` + super.render(opts)\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!super.optimizeNames(names, constants)) return\n    this.iterable = optimizeExpr(this.iterable, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return addNames(super.names, this.iterable.names)\n  }\n}\n\nclass Func extends BlockNode {\n  static readonly kind = \"func\"\n  constructor(\n    public name: Name,\n    public args: Code,\n    public async?: boolean\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    const _async = this.async ? \"async \" : \"\"\n    return `${_async}function ${this.name}(${this.args})` + super.render(opts)\n  }\n}\n\nclass Return extends ParentNode {\n  static readonly kind = \"return\"\n\n  render(opts: CGOptions): string {\n    return \"return \" + super.render(opts)\n  }\n}\n\nclass Try extends BlockNode {\n  catch?: Catch\n  finally?: Finally\n\n  render(opts: CGOptions): string {\n    let code = \"try\" + super.render(opts)\n    if (this.catch) code += this.catch.render(opts)\n    if (this.finally) code += this.finally.render(opts)\n    return code\n  }\n\n  optimizeNodes(): this {\n    super.optimizeNodes()\n    this.catch?.optimizeNodes() as Catch | undefined\n    this.finally?.optimizeNodes() as Finally | undefined\n    return this\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this {\n    super.optimizeNames(names, constants)\n    this.catch?.optimizeNames(names, constants)\n    this.finally?.optimizeNames(names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = super.names\n    if (this.catch) addNames(names, this.catch.names)\n    if (this.finally) addNames(names, this.finally.names)\n    return names\n  }\n\n  // get count(): number {\n  //   return super.count + (this.catch?.count || 0) + (this.finally?.count || 0)\n  // }\n}\n\nclass Catch extends BlockNode {\n  static readonly kind = \"catch\"\n  constructor(readonly error: Name) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `catch(${this.error})` + super.render(opts)\n  }\n}\n\nclass Finally extends BlockNode {\n  static readonly kind = \"finally\"\n  render(opts: CGOptions): string {\n    return \"finally\" + super.render(opts)\n  }\n}\n\ntype StartBlockNode = If | For | Func | Return | Try\n\ntype LeafNode = Def | Assign | Label | Break | Throw | AnyCode\n\ntype ChildNode = StartBlockNode | LeafNode\n\ntype EndBlockNodeType =\n  | typeof If\n  | typeof Else\n  | typeof For\n  | typeof Func\n  | typeof Return\n  | typeof Catch\n  | typeof Finally\n\ntype Constants = Record<string, SafeExpr | undefined>\n\nexport interface CodeGenOptions {\n  es5?: boolean\n  lines?: boolean\n  ownProperties?: boolean\n}\n\ninterface CGOptions extends CodeGenOptions {\n  _n: \"\\n\" | \"\"\n}\n\nexport class CodeGen {\n  readonly _scope: Scope\n  readonly _extScope: ValueScope\n  readonly _values: ScopeValueSets = {}\n  private readonly _nodes: ParentNode[]\n  private readonly _blockStarts: number[] = []\n  private readonly _constants: Constants = {}\n  private readonly opts: CGOptions\n\n  constructor(extScope: ValueScope, opts: CodeGenOptions = {}) {\n    this.opts = {...opts, _n: opts.lines ? \"\\n\" : \"\"}\n    this._extScope = extScope\n    this._scope = new Scope({parent: extScope})\n    this._nodes = [new Root()]\n  }\n\n  toString(): string {\n    return this._root.render(this.opts)\n  }\n\n  // returns unique name in the internal scope\n  name(prefix: string): Name {\n    return this._scope.name(prefix)\n  }\n\n  // reserves unique name in the external scope\n  scopeName(prefix: string): ValueScopeName {\n    return this._extScope.name(prefix)\n  }\n\n  // reserves unique name in the external scope and assigns value to it\n  scopeValue(prefixOrName: ValueScopeName | string, value: NameValue): Name {\n    const name = this._extScope.value(prefixOrName, value)\n    const vs = this._values[name.prefix] || (this._values[name.prefix] = new Set())\n    vs.add(name)\n    return name\n  }\n\n  getScopeValue(prefix: string, keyOrRef: unknown): ValueScopeName | undefined {\n    return this._extScope.getValue(prefix, keyOrRef)\n  }\n\n  // return code that assigns values in the external scope to the names that are used internally\n  // (same names that were returned by gen.scopeName or gen.scopeValue)\n  scopeRefs(scopeName: Name): Code {\n    return this._extScope.scopeRefs(scopeName, this._values)\n  }\n\n  scopeCode(): Code {\n    return this._extScope.scopeCode(this._values)\n  }\n\n  private _def(\n    varKind: Name,\n    nameOrPrefix: Name | string,\n    rhs?: SafeExpr,\n    constant?: boolean\n  ): Name {\n    const name = this._scope.toName(nameOrPrefix)\n    if (rhs !== undefined && constant) this._constants[name.str] = rhs\n    this._leafNode(new Def(varKind, name, rhs))\n    return name\n  }\n\n  // `const` declaration (`var` in es5 mode)\n  const(nameOrPrefix: Name | string, rhs: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.const, nameOrPrefix, rhs, _constant)\n  }\n\n  // `let` declaration with optional assignment (`var` in es5 mode)\n  let(nameOrPrefix: Name | string, rhs?: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.let, nameOrPrefix, rhs, _constant)\n  }\n\n  // `var` declaration with optional assignment\n  var(nameOrPrefix: Name | string, rhs?: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.var, nameOrPrefix, rhs, _constant)\n  }\n\n  // assignment code\n  assign(lhs: Code, rhs: SafeExpr, sideEffects?: boolean): CodeGen {\n    return this._leafNode(new Assign(lhs, rhs, sideEffects))\n  }\n\n  // `+=` code\n  add(lhs: Code, rhs: SafeExpr): CodeGen {\n    return this._leafNode(new AssignOp(lhs, operators.ADD, rhs))\n  }\n\n  // appends passed SafeExpr to code or executes Block\n  code(c: Block | SafeExpr): CodeGen {\n    if (typeof c == \"function\") c()\n    else if (c !== nil) this._leafNode(new AnyCode(c))\n    return this\n  }\n\n  // returns code for object literal for the passed argument list of key-value pairs\n  object(...keyValues: [Name | string, SafeExpr | string][]): _Code {\n    const code: CodeItem[] = [\"{\"]\n    for (const [key, value] of keyValues) {\n      if (code.length > 1) code.push(\",\")\n      code.push(key)\n      if (key !== value || this.opts.es5) {\n        code.push(\":\")\n        addCodeArg(code, value)\n      }\n    }\n    code.push(\"}\")\n    return new _Code(code)\n  }\n\n  // `if` clause (or statement if `thenBody` and, optionally, `elseBody` are passed)\n  if(condition: Code | boolean, thenBody?: Block, elseBody?: Block): CodeGen {\n    this._blockNode(new If(condition))\n\n    if (thenBody && elseBody) {\n      this.code(thenBody).else().code(elseBody).endIf()\n    } else if (thenBody) {\n      this.code(thenBody).endIf()\n    } else if (elseBody) {\n      throw new Error('CodeGen: \"else\" body without \"then\" body')\n    }\n    return this\n  }\n\n  // `else if` clause - invalid without `if` or after `else` clauses\n  elseIf(condition: Code | boolean): CodeGen {\n    return this._elseNode(new If(condition))\n  }\n\n  // `else` clause - only valid after `if` or `else if` clauses\n  else(): CodeGen {\n    return this._elseNode(new Else())\n  }\n\n  // end `if` statement (needed if gen.if was used only with condition)\n  endIf(): CodeGen {\n    return this._endBlockNode(If, Else)\n  }\n\n  private _for(node: For, forBody?: Block): CodeGen {\n    this._blockNode(node)\n    if (forBody) this.code(forBody).endFor()\n    return this\n  }\n\n  // a generic `for` clause (or statement if `forBody` is passed)\n  for(iteration: Code, forBody?: Block): CodeGen {\n    return this._for(new ForLoop(iteration), forBody)\n  }\n\n  // `for` statement for a range of values\n  forRange(\n    nameOrPrefix: Name | string,\n    from: SafeExpr,\n    to: SafeExpr,\n    forBody: (index: Name) => void,\n    varKind: Code = this.opts.es5 ? varKinds.var : varKinds.let\n  ): CodeGen {\n    const name = this._scope.toName(nameOrPrefix)\n    return this._for(new ForRange(varKind, name, from, to), () => forBody(name))\n  }\n\n  // `for-of` statement (in es5 mode replace with a normal for loop)\n  forOf(\n    nameOrPrefix: Name | string,\n    iterable: Code,\n    forBody: (item: Name) => void,\n    varKind: Code = varKinds.const\n  ): CodeGen {\n    const name = this._scope.toName(nameOrPrefix)\n    if (this.opts.es5) {\n      const arr = iterable instanceof Name ? iterable : this.var(\"_arr\", iterable)\n      return this.forRange(\"_i\", 0, _`${arr}.length`, (i) => {\n        this.var(name, _`${arr}[${i}]`)\n        forBody(name)\n      })\n    }\n    return this._for(new ForIter(\"of\", varKind, name, iterable), () => forBody(name))\n  }\n\n  // `for-in` statement.\n  // With option `ownProperties` replaced with a `for-of` loop for object keys\n  forIn(\n    nameOrPrefix: Name | string,\n    obj: Code,\n    forBody: (item: Name) => void,\n    varKind: Code = this.opts.es5 ? varKinds.var : varKinds.const\n  ): CodeGen {\n    if (this.opts.ownProperties) {\n      return this.forOf(nameOrPrefix, _`Object.keys(${obj})`, forBody)\n    }\n    const name = this._scope.toName(nameOrPrefix)\n    return this._for(new ForIter(\"in\", varKind, name, obj), () => forBody(name))\n  }\n\n  // end `for` loop\n  endFor(): CodeGen {\n    return this._endBlockNode(For)\n  }\n\n  // `label` statement\n  label(label: Name): CodeGen {\n    return this._leafNode(new Label(label))\n  }\n\n  // `break` statement\n  break(label?: Code): CodeGen {\n    return this._leafNode(new Break(label))\n  }\n\n  // `return` statement\n  return(value: Block | SafeExpr): CodeGen {\n    const node = new Return()\n    this._blockNode(node)\n    this.code(value)\n    if (node.nodes.length !== 1) throw new Error('CodeGen: \"return\" should have one node')\n    return this._endBlockNode(Return)\n  }\n\n  // `try` statement\n  try(tryBody: Block, catchCode?: (e: Name) => void, finallyCode?: Block): CodeGen {\n    if (!catchCode && !finallyCode) throw new Error('CodeGen: \"try\" without \"catch\" and \"finally\"')\n    const node = new Try()\n    this._blockNode(node)\n    this.code(tryBody)\n    if (catchCode) {\n      const error = this.name(\"e\")\n      this._currNode = node.catch = new Catch(error)\n      catchCode(error)\n    }\n    if (finallyCode) {\n      this._currNode = node.finally = new Finally()\n      this.code(finallyCode)\n    }\n    return this._endBlockNode(Catch, Finally)\n  }\n\n  // `throw` statement\n  throw(error: Code): CodeGen {\n    return this._leafNode(new Throw(error))\n  }\n\n  // start self-balancing block\n  block(body?: Block, nodeCount?: number): CodeGen {\n    this._blockStarts.push(this._nodes.length)\n    if (body) this.code(body).endBlock(nodeCount)\n    return this\n  }\n\n  // end the current self-balancing block\n  endBlock(nodeCount?: number): CodeGen {\n    const len = this._blockStarts.pop()\n    if (len === undefined) throw new Error(\"CodeGen: not in self-balancing block\")\n    const toClose = this._nodes.length - len\n    if (toClose < 0 || (nodeCount !== undefined && toClose !== nodeCount)) {\n      throw new Error(`CodeGen: wrong number of nodes: ${toClose} vs ${nodeCount} expected`)\n    }\n    this._nodes.length = len\n    return this\n  }\n\n  // `function` heading (or definition if funcBody is passed)\n  func(name: Name, args: Code = nil, async?: boolean, funcBody?: Block): CodeGen {\n    this._blockNode(new Func(name, args, async))\n    if (funcBody) this.code(funcBody).endFunc()\n    return this\n  }\n\n  // end function definition\n  endFunc(): CodeGen {\n    return this._endBlockNode(Func)\n  }\n\n  optimize(n = 1): void {\n    while (n-- > 0) {\n      this._root.optimizeNodes()\n      this._root.optimizeNames(this._root.names, this._constants)\n    }\n  }\n\n  private _leafNode(node: LeafNode): CodeGen {\n    this._currNode.nodes.push(node)\n    return this\n  }\n\n  private _blockNode(node: StartBlockNode): void {\n    this._currNode.nodes.push(node)\n    this._nodes.push(node)\n  }\n\n  private _endBlockNode(N1: EndBlockNodeType, N2?: EndBlockNodeType): CodeGen {\n    const n = this._currNode\n    if (n instanceof N1 || (N2 && n instanceof N2)) {\n      this._nodes.pop()\n      return this\n    }\n    throw new Error(`CodeGen: not in block \"${N2 ? `${N1.kind}/${N2.kind}` : N1.kind}\"`)\n  }\n\n  private _elseNode(node: If | Else): CodeGen {\n    const n = this._currNode\n    if (!(n instanceof If)) {\n      throw new Error('CodeGen: \"else\" without \"if\"')\n    }\n    this._currNode = n.else = node\n    return this\n  }\n\n  private get _root(): Root {\n    return this._nodes[0] as Root\n  }\n\n  private get _currNode(): ParentNode {\n    const ns = this._nodes\n    return ns[ns.length - 1]\n  }\n\n  private set _currNode(node: ParentNode) {\n    const ns = this._nodes\n    ns[ns.length - 1] = node\n  }\n\n  // get nodeCount(): number {\n  //   return this._root.count\n  // }\n}\n\nfunction addNames(names: UsedNames, from: UsedNames): UsedNames {\n  for (const n in from) names[n] = (names[n] || 0) + (from[n] || 0)\n  return names\n}\n\nfunction addExprNames(names: UsedNames, from: SafeExpr): UsedNames {\n  return from instanceof _CodeOrName ? addNames(names, from.names) : names\n}\n\nfunction optimizeExpr<T extends SafeExpr | Code>(expr: T, names: UsedNames, constants: Constants): T\nfunction optimizeExpr(expr: SafeExpr, names: UsedNames, constants: Constants): SafeExpr {\n  if (expr instanceof Name) return replaceName(expr)\n  if (!canOptimize(expr)) return expr\n  return new _Code(\n    expr._items.reduce((items: CodeItem[], c: SafeExpr | string) => {\n      if (c instanceof Name) c = replaceName(c)\n      if (c instanceof _Code) items.push(...c._items)\n      else items.push(c)\n      return items\n    }, [])\n  )\n\n  function replaceName(n: Name): SafeExpr {\n    const c = constants[n.str]\n    if (c === undefined || names[n.str] !== 1) return n\n    delete names[n.str]\n    return c\n  }\n\n  function canOptimize(e: SafeExpr): e is _Code {\n    return (\n      e instanceof _Code &&\n      e._items.some(\n        (c) => c instanceof Name && names[c.str] === 1 && constants[c.str] !== undefined\n      )\n    )\n  }\n}\n\nfunction subtractNames(names: UsedNames, from: UsedNames): void {\n  for (const n in from) names[n] = (names[n] || 0) - (from[n] || 0)\n}\n\nexport function not<T extends Code | SafeExpr>(x: T): T\nexport function not(x: Code | SafeExpr): Code | SafeExpr {\n  return typeof x == \"boolean\" || typeof x == \"number\" || x === null ? !x : _`!${par(x)}`\n}\n\nconst andCode = mappend(operators.AND)\n\n// boolean AND (&&) expression with the passed arguments\nexport function and(...args: Code[]): Code {\n  return args.reduce(andCode)\n}\n\nconst orCode = mappend(operators.OR)\n\n// boolean OR (||) expression with the passed arguments\nexport function or(...args: Code[]): Code {\n  return args.reduce(orCode)\n}\n\ntype MAppend = (x: Code, y: Code) => Code\n\nfunction mappend(op: Code): MAppend {\n  return (x, y) => (x === nil ? y : y === nil ? x : _`${par(x)} ${op} ${par(y)}`)\n}\n\nfunction par(x: Code): Code {\n  return x instanceof Name ? x : _`(${x})`\n}\n", "import type {AnySchema, EvaluatedProperties, EvaluatedItems} from \"../types\"\nimport type {SchemaCxt, SchemaObjCxt} from \".\"\nimport {_, getProperty, Code, Name, CodeGen} from \"./codegen\"\nimport {_Code} from \"./codegen/code\"\nimport type {Rule, ValidationRules} from \"./rules\"\n\n// TODO refactor to use Set\nexport function toHash<T extends string = string>(arr: T[]): {[K in T]?: true} {\n  const hash: {[K in T]?: true} = {}\n  for (const item of arr) hash[item] = true\n  return hash\n}\n\nexport function alwaysValidSchema(it: SchemaCxt, schema: AnySchema): boolean | void {\n  if (typeof schema == \"boolean\") return schema\n  if (Object.keys(schema).length === 0) return true\n  checkUnknownRules(it, schema)\n  return !schemaHasRules(schema, it.self.RULES.all)\n}\n\nexport function checkUnknownRules(it: SchemaCxt, schema: AnySchema = it.schema): void {\n  const {opts, self} = it\n  if (!opts.strictSchema) return\n  if (typeof schema === \"boolean\") return\n  const rules = self.RULES.keywords\n  for (const key in schema) {\n    if (!rules[key]) checkStrictMode(it, `unknown keyword: \"${key}\"`)\n  }\n}\n\nexport function schemaHasRules(\n  schema: AnySchema,\n  rules: {[Key in string]?: boolean | Rule}\n): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (rules[key]) return true\n  return false\n}\n\nexport function schemaHasRulesButRef(schema: AnySchema, RULES: ValidationRules): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (key !== \"$ref\" && RULES.all[key]) return true\n  return false\n}\n\nexport function schemaRefOrVal(\n  {topSchemaRef, schemaPath}: SchemaObjCxt,\n  schema: unknown,\n  keyword: string,\n  $data?: string | false\n): Code | number | boolean {\n  if (!$data) {\n    if (typeof schema == \"number\" || typeof schema == \"boolean\") return schema\n    if (typeof schema == \"string\") return _`${schema}`\n  }\n  return _`${topSchemaRef}${schemaPath}${getProperty(keyword)}`\n}\n\nexport function unescapeFragment(str: string): string {\n  return unescapeJsonPointer(decodeURIComponent(str))\n}\n\nexport function escapeFragment(str: string | number): string {\n  return encodeURIComponent(escapeJsonPointer(str))\n}\n\nexport function escapeJsonPointer(str: string | number): string {\n  if (typeof str == \"number\") return `${str}`\n  return str.replace(/~/g, \"~0\").replace(/\\//g, \"~1\")\n}\n\nexport function unescapeJsonPointer(str: string): string {\n  return str.replace(/~1/g, \"/\").replace(/~0/g, \"~\")\n}\n\nexport function eachItem<T>(xs: T | T[], f: (x: T) => void): void {\n  if (Array.isArray(xs)) {\n    for (const x of xs) f(x)\n  } else {\n    f(xs)\n  }\n}\n\ntype SomeEvaluated = EvaluatedProperties | EvaluatedItems\n\ntype MergeEvaluatedFunc<T extends SomeEvaluated> = (\n  gen: CodeGen,\n  from: Name | T,\n  to: Name | Exclude<T, true> | undefined,\n  toName?: typeof Name\n) => Name | T\n\ninterface MakeMergeFuncArgs<T extends SomeEvaluated> {\n  mergeNames: (gen: CodeGen, from: Name, to: Name) => void\n  mergeToName: (gen: CodeGen, from: T, to: Name) => void\n  mergeValues: (from: T, to: Exclude<T, true>) => T\n  resultToName: (gen: CodeGen, res?: T) => Name\n}\n\nfunction makeMergeEvaluated<T extends SomeEvaluated>({\n  mergeNames,\n  mergeToName,\n  mergeValues,\n  resultToName,\n}: MakeMergeFuncArgs<T>): MergeEvaluatedFunc<T> {\n  return (gen, from, to, toName) => {\n    const res =\n      to === undefined\n        ? from\n        : to instanceof Name\n        ? (from instanceof Name ? mergeNames(gen, from, to) : mergeToName(gen, from, to), to)\n        : from instanceof Name\n        ? (mergeToName(gen, to, from), from)\n        : mergeValues(from, to)\n    return toName === Name && !(res instanceof Name) ? resultToName(gen, res) : res\n  }\n}\n\ninterface MergeEvaluated {\n  props: MergeEvaluatedFunc<EvaluatedProperties>\n  items: MergeEvaluatedFunc<EvaluatedItems>\n}\n\nexport const mergeEvaluated: MergeEvaluated = {\n  props: makeMergeEvaluated({\n    mergeNames: (gen, from, to) =>\n      gen.if(_`${to} !== true && ${from} !== undefined`, () => {\n        gen.if(\n          _`${from} === true`,\n          () => gen.assign(to, true),\n          () => gen.assign(to, _`${to} || {}`).code(_`Object.assign(${to}, ${from})`)\n        )\n      }),\n    mergeToName: (gen, from, to) =>\n      gen.if(_`${to} !== true`, () => {\n        if (from === true) {\n          gen.assign(to, true)\n        } else {\n          gen.assign(to, _`${to} || {}`)\n          setEvaluated(gen, to, from)\n        }\n      }),\n    mergeValues: (from, to) => (from === true ? true : {...from, ...to}),\n    resultToName: evaluatedPropsToName,\n  }),\n  items: makeMergeEvaluated({\n    mergeNames: (gen, from, to) =>\n      gen.if(_`${to} !== true && ${from} !== undefined`, () =>\n        gen.assign(to, _`${from} === true ? true : ${to} > ${from} ? ${to} : ${from}`)\n      ),\n    mergeToName: (gen, from, to) =>\n      gen.if(_`${to} !== true`, () =>\n        gen.assign(to, from === true ? true : _`${to} > ${from} ? ${to} : ${from}`)\n      ),\n    mergeValues: (from, to) => (from === true ? true : Math.max(from, to)),\n    resultToName: (gen, items) => gen.var(\"items\", items),\n  }),\n}\n\nexport function evaluatedPropsToName(gen: CodeGen, ps?: EvaluatedProperties): Name {\n  if (ps === true) return gen.var(\"props\", true)\n  const props = gen.var(\"props\", _`{}`)\n  if (ps !== undefined) setEvaluated(gen, props, ps)\n  return props\n}\n\nexport function setEvaluated(gen: CodeGen, props: Name, ps: {[K in string]?: true}): void {\n  Object.keys(ps).forEach((p) => gen.assign(_`${props}${getProperty(p)}`, true))\n}\n\nconst snippets: {[S in string]?: _Code} = {}\n\nexport function useFunc(gen: CodeGen, f: {code: string}): Name {\n  return gen.scopeValue(\"func\", {\n    ref: f,\n    code: snippets[f.code] || (snippets[f.code] = new _Code(f.code)),\n  })\n}\n\nexport enum Type {\n  Num,\n  Str,\n}\n\nexport function getErrorPath(\n  dataProp: Name | string | number,\n  dataPropType?: Type,\n  jsPropertySyntax?: boolean\n): Code | string {\n  // let path\n  if (dataProp instanceof Name) {\n    const isNumber = dataPropType === Type.Num\n    return jsPropertySyntax\n      ? isNumber\n        ? _`\"[\" + ${dataProp} + \"]\"`\n        : _`\"['\" + ${dataProp} + \"']\"`\n      : isNumber\n      ? _`\"/\" + ${dataProp}`\n      : _`\"/\" + ${dataProp}.replace(/~/g, \"~0\").replace(/\\\\//g, \"~1\")` // TODO maybe use global escapePointer\n  }\n  return jsPropertySyntax ? getProperty(dataProp).toString() : \"/\" + escapeJsonPointer(dataProp)\n}\n\nexport function checkStrictMode(\n  it: SchemaCxt,\n  msg: string,\n  mode: boolean | \"log\" = it.opts.strictSchema\n): void {\n  if (!mode) return\n  msg = `strict mode: ${msg}`\n  if (mode === true) throw new Error(msg)\n  it.self.logger.warn(msg)\n}\n", "import {Name} from \"./codegen\"\n\nconst names = {\n  // validation function arguments\n  data: new Name(\"data\"), // data passed to validation function\n  // args passed from referencing schema\n  valCxt: new Name(\"valCxt\"), // validation/data context - should not be used directly, it is destructured to the names below\n  instancePath: new Name(\"instancePath\"),\n  parentData: new Name(\"parentData\"),\n  parentDataProperty: new Name(\"parentDataProperty\"),\n  rootData: new Name(\"rootData\"), // root data - same as the data passed to the first/top validation function\n  dynamicAnchors: new Name(\"dynamicAnchors\"), // used to support recursiveRef and dynamicRef\n  // function scoped variables\n  vErrors: new Name(\"vErrors\"), // null or array of validation errors\n  errors: new Name(\"errors\"), // counter of validation errors\n  this: new Name(\"this\"),\n  // \"globals\"\n  self: new Name(\"self\"),\n  scope: new Name(\"scope\"),\n  // JTD serialize/parse name for JSON string and position\n  json: new Name(\"json\"),\n  jsonPos: new Name(\"jsonPos\"),\n  jsonLen: new Name(\"jsonLen\"),\n  jsonPart: new Name(\"jsonPart\"),\n}\n\nexport default names\n", "import type {KeywordErrorCxt, KeywordErrorDefinition} from \"../types\"\nimport type {SchemaCxt} from \"./index\"\nimport {CodeGen, _, str, strConcat, Code, Name} from \"./codegen\"\nimport {SafeExpr} from \"./codegen/code\"\nimport {getErrorPath, Type} from \"./util\"\nimport N from \"./names\"\n\nexport const keywordError: KeywordErrorDefinition = {\n  message: ({keyword}) => str`must pass \"${keyword}\" keyword validation`,\n}\n\nexport const keyword$DataError: KeywordErrorDefinition = {\n  message: ({keyword, schemaType}) =>\n    schemaType\n      ? str`\"${keyword}\" keyword must be ${schemaType} ($data)`\n      : str`\"${keyword}\" keyword is invalid ($data)`,\n}\n\nexport interface ErrorPaths {\n  instancePath?: Code\n  schemaPath?: string\n  parentSchema?: boolean\n}\n\nexport function reportError(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition = keywordError,\n  errorPaths?: ErrorPaths,\n  overrideAllErrors?: boolean\n): void {\n  const {it} = cxt\n  const {gen, compositeRule, allErrors} = it\n  const errObj = errorObjectCode(cxt, error, errorPaths)\n  if (overrideAllErrors ?? (compositeRule || allErrors)) {\n    addError(gen, errObj)\n  } else {\n    returnErrors(it, _`[${errObj}]`)\n  }\n}\n\nexport function reportExtraError(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition = keywordError,\n  errorPaths?: ErrorPaths\n): void {\n  const {it} = cxt\n  const {gen, compositeRule, allErrors} = it\n  const errObj = errorObjectCode(cxt, error, errorPaths)\n  addError(gen, errObj)\n  if (!(compositeRule || allErrors)) {\n    returnErrors(it, N.vErrors)\n  }\n}\n\nexport function resetErrorsCount(gen: CodeGen, errsCount: Name): void {\n  gen.assign(N.errors, errsCount)\n  gen.if(_`${N.vErrors} !== null`, () =>\n    gen.if(\n      errsCount,\n      () => gen.assign(_`${N.vErrors}.length`, errsCount),\n      () => gen.assign(N.vErrors, null)\n    )\n  )\n}\n\nexport function extendErrors({\n  gen,\n  keyword,\n  schemaValue,\n  data,\n  errsCount,\n  it,\n}: KeywordErrorCxt): void {\n  /* istanbul ignore if */\n  if (errsCount === undefined) throw new Error(\"ajv implementation error\")\n  const err = gen.name(\"err\")\n  gen.forRange(\"i\", errsCount, N.errors, (i) => {\n    gen.const(err, _`${N.vErrors}[${i}]`)\n    gen.if(_`${err}.instancePath === undefined`, () =>\n      gen.assign(_`${err}.instancePath`, strConcat(N.instancePath, it.errorPath))\n    )\n    gen.assign(_`${err}.schemaPath`, str`${it.errSchemaPath}/${keyword}`)\n    if (it.opts.verbose) {\n      gen.assign(_`${err}.schema`, schemaValue)\n      gen.assign(_`${err}.data`, data)\n    }\n  })\n}\n\nfunction addError(gen: CodeGen, errObj: Code): void {\n  const err = gen.const(\"err\", errObj)\n  gen.if(\n    _`${N.vErrors} === null`,\n    () => gen.assign(N.vErrors, _`[${err}]`),\n    _`${N.vErrors}.push(${err})`\n  )\n  gen.code(_`${N.errors}++`)\n}\n\nfunction returnErrors(it: SchemaCxt, errs: Code): void {\n  const {gen, validateName, schemaEnv} = it\n  if (schemaEnv.$async) {\n    gen.throw(_`new ${it.ValidationError as Name}(${errs})`)\n  } else {\n    gen.assign(_`${validateName}.errors`, errs)\n    gen.return(false)\n  }\n}\n\nconst E = {\n  keyword: new Name(\"keyword\"),\n  schemaPath: new Name(\"schemaPath\"), // also used in JTD errors\n  params: new Name(\"params\"),\n  propertyName: new Name(\"propertyName\"),\n  message: new Name(\"message\"),\n  schema: new Name(\"schema\"),\n  parentSchema: new Name(\"parentSchema\"),\n}\n\nfunction errorObjectCode(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition,\n  errorPaths?: ErrorPaths\n): Code {\n  const {createErrors} = cxt.it\n  if (createErrors === false) return _`{}`\n  return errorObject(cxt, error, errorPaths)\n}\n\nfunction errorObject(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition,\n  errorPaths: ErrorPaths = {}\n): Code {\n  const {gen, it} = cxt\n  const keyValues: [Name, SafeExpr | string][] = [\n    errorInstancePath(it, errorPaths),\n    errorSchemaPath(cxt, errorPaths),\n  ]\n  extraErrorProps(cxt, error, keyValues)\n  return gen.object(...keyValues)\n}\n\nfunction errorInstancePath({errorPath}: SchemaCxt, {instancePath}: ErrorPaths): [Name, Code] {\n  const instPath = instancePath\n    ? str`${errorPath}${getErrorPath(instancePath, Type.Str)}`\n    : errorPath\n  return [N.instancePath, strConcat(N.instancePath, instPath)]\n}\n\nfunction errorSchemaPath(\n  {keyword, it: {errSchemaPath}}: KeywordErrorCxt,\n  {schemaPath, parentSchema}: ErrorPaths\n): [Name, string | Code] {\n  let schPath = parentSchema ? errSchemaPath : str`${errSchemaPath}/${keyword}`\n  if (schemaPath) {\n    schPath = str`${schPath}${getErrorPath(schemaPath, Type.Str)}`\n  }\n  return [E.schemaPath, schPath]\n}\n\nfunction extraErrorProps(\n  cxt: KeywordErrorCxt,\n  {params, message}: KeywordErrorDefinition,\n  keyValues: [Name, SafeExpr | string][]\n): void {\n  const {keyword, data, schemaValue, it} = cxt\n  const {opts, propertyName, topSchemaRef, schemaPath} = it\n  keyValues.push(\n    [E.keyword, keyword],\n    [E.params, typeof params == \"function\" ? params(cxt) : params || _`{}`]\n  )\n  if (opts.messages) {\n    keyValues.push([E.message, typeof message == \"function\" ? message(cxt) : message])\n  }\n  if (opts.verbose) {\n    keyValues.push(\n      [E.schema, schemaValue],\n      [E.parentSchema, _`${topSchemaRef}${schemaPath}`],\n      [N.data, data]\n    )\n  }\n  if (propertyName) keyValues.push([E.propertyName, propertyName])\n}\n", "import type {KeywordErrorDefinition, KeywordErrorCxt} from \"../../types\"\nimport type {SchemaCxt} from \"..\"\nimport {reportError} from \"../errors\"\nimport {_, Name} from \"../codegen\"\nimport N from \"../names\"\n\nconst boolError: KeywordErrorDefinition = {\n  message: \"boolean schema is false\",\n}\n\nexport function topBoolOrEmptySchema(it: SchemaCxt): void {\n  const {gen, schema, validateName} = it\n  if (schema === false) {\n    falseSchemaError(it, false)\n  } else if (typeof schema == \"object\" && schema.$async === true) {\n    gen.return(N.data)\n  } else {\n    gen.assign(_`${validateName}.errors`, null)\n    gen.return(true)\n  }\n}\n\nexport function boolOrEmptySchema(it: SchemaCxt, valid: Name): void {\n  const {gen, schema} = it\n  if (schema === false) {\n    gen.var(valid, false) // TODO var\n    falseSchemaError(it)\n  } else {\n    gen.var(valid, true) // TODO var\n  }\n}\n\nfunction falseSchemaError(it: SchemaCxt, overrideAllErrors?: boolean): void {\n  const {gen, data} = it\n  // TODO maybe some other interface should be used for non-keyword validation errors...\n  const cxt: KeywordErrorCxt = {\n    gen,\n    keyword: \"false schema\",\n    data,\n    schema: false,\n    schemaCode: false,\n    schemaValue: false,\n    params: {},\n    it,\n  }\n  reportError(cxt, boolError, undefined, overrideAllErrors)\n}\n", "import type {AddedKeywordDefinition} from \"../types\"\n\nconst _jsonTypes = [\"string\", \"number\", \"integer\", \"boolean\", \"null\", \"object\", \"array\"] as const\n\nexport type JSONType = (typeof _jsonTypes)[number]\n\nconst jsonTypes: Set<string> = new Set(_jsonTypes)\n\nexport function isJSONType(x: unknown): x is JSONType {\n  return typeof x == \"string\" && jsonTypes.has(x)\n}\n\ntype ValidationTypes = {\n  [K in JSONType]: boolean | RuleGroup | undefined\n}\n\nexport interface ValidationRules {\n  rules: RuleGroup[]\n  post: RuleGroup\n  all: {[Key in string]?: boolean | Rule} // rules that have to be validated\n  keywords: {[Key in string]?: boolean} // all known keywords (superset of \"all\")\n  types: ValidationTypes\n}\n\nexport interface RuleGroup {\n  type?: JSONType\n  rules: Rule[]\n}\n\n// This interface wraps KeywordDefinition because definition can have multiple keywords\nexport interface Rule {\n  keyword: string\n  definition: AddedKeywordDefinition\n}\n\nexport function getRules(): ValidationRules {\n  const groups: Record<\"number\" | \"string\" | \"array\" | \"object\", RuleGroup> = {\n    number: {type: \"number\", rules: []},\n    string: {type: \"string\", rules: []},\n    array: {type: \"array\", rules: []},\n    object: {type: \"object\", rules: []},\n  }\n  return {\n    types: {...groups, integer: true, boolean: true, null: true},\n    rules: [{rules: []}, groups.number, groups.string, groups.array, groups.object],\n    post: {rules: []},\n    all: {},\n    keywords: {},\n  }\n}\n", "import type {AnySchemaObject} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport type {JSONType, RuleGroup, Rule} from \"../rules\"\n\nexport function schemaHasRulesForType(\n  {schema, self}: SchemaObjCxt,\n  type: JSONType\n): boolean | undefined {\n  const group = self.RULES.types[type]\n  return group && group !== true && shouldUseGroup(schema, group)\n}\n\nexport function shouldUseGroup(schema: AnySchemaObject, group: RuleGroup): boolean {\n  return group.rules.some((rule) => shouldUseRule(schema, rule))\n}\n\nexport function shouldUseRule(schema: AnySchemaObject, rule: Rule): boolean | undefined {\n  return (\n    schema[rule.keyword] !== undefined ||\n    rule.definition.implements?.some((kwd) => schema[kwd] !== undefined)\n  )\n}\n", "import type {\n  KeywordErrorDefinition,\n  KeywordErrorCxt,\n  ErrorObject,\n  AnySchemaObject,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {isJSONType, JSONType} from \"../rules\"\nimport {schemaHasRulesForType} from \"./applicability\"\nimport {reportError} from \"../errors\"\nimport {_, nil, and, not, operators, Code, Name} from \"../codegen\"\nimport {toHash, schemaRefOrVal} from \"../util\"\n\nexport enum DataType {\n  Correct,\n  Wrong,\n}\n\nexport function getSchemaTypes(schema: AnySchemaObject): JSONType[] {\n  const types = getJSONTypes(schema.type)\n  const hasNull = types.includes(\"null\")\n  if (hasNull) {\n    if (schema.nullable === false) throw new Error(\"type: null contradicts nullable: false\")\n  } else {\n    if (!types.length && schema.nullable !== undefined) {\n      throw new Error('\"nullable\" cannot be used without \"type\"')\n    }\n    if (schema.nullable === true) types.push(\"null\")\n  }\n  return types\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\nexport function getJSONTypes(ts: unknown | unknown[]): JSONType[] {\n  const types: unknown[] = Array.isArray(ts) ? ts : ts ? [ts] : []\n  if (types.every(isJSONType)) return types\n  throw new Error(\"type must be JSONType or JSONType[]: \" + types.join(\",\"))\n}\n\nexport function coerceAndCheckDataType(it: SchemaObjCxt, types: JSONType[]): boolean {\n  const {gen, data, opts} = it\n  const coerceTo = coerceToTypes(types, opts.coerceTypes)\n  const checkTypes =\n    types.length > 0 &&\n    !(coerceTo.length === 0 && types.length === 1 && schemaHasRulesForType(it, types[0]))\n  if (checkTypes) {\n    const wrongType = checkDataTypes(types, data, opts.strictNumbers, DataType.Wrong)\n    gen.if(wrongType, () => {\n      if (coerceTo.length) coerceData(it, types, coerceTo)\n      else reportTypeError(it)\n    })\n  }\n  return checkTypes\n}\n\nconst COERCIBLE: Set<JSONType> = new Set([\"string\", \"number\", \"integer\", \"boolean\", \"null\"])\nfunction coerceToTypes(types: JSONType[], coerceTypes?: boolean | \"array\"): JSONType[] {\n  return coerceTypes\n    ? types.filter((t) => COERCIBLE.has(t) || (coerceTypes === \"array\" && t === \"array\"))\n    : []\n}\n\nfunction coerceData(it: SchemaObjCxt, types: JSONType[], coerceTo: JSONType[]): void {\n  const {gen, data, opts} = it\n  const dataType = gen.let(\"dataType\", _`typeof ${data}`)\n  const coerced = gen.let(\"coerced\", _`undefined`)\n  if (opts.coerceTypes === \"array\") {\n    gen.if(_`${dataType} == 'object' && Array.isArray(${data}) && ${data}.length == 1`, () =>\n      gen\n        .assign(data, _`${data}[0]`)\n        .assign(dataType, _`typeof ${data}`)\n        .if(checkDataTypes(types, data, opts.strictNumbers), () => gen.assign(coerced, data))\n    )\n  }\n  gen.if(_`${coerced} !== undefined`)\n  for (const t of coerceTo) {\n    if (COERCIBLE.has(t) || (t === \"array\" && opts.coerceTypes === \"array\")) {\n      coerceSpecificType(t)\n    }\n  }\n  gen.else()\n  reportTypeError(it)\n  gen.endIf()\n\n  gen.if(_`${coerced} !== undefined`, () => {\n    gen.assign(data, coerced)\n    assignParentData(it, coerced)\n  })\n\n  function coerceSpecificType(t: string): void {\n    switch (t) {\n      case \"string\":\n        gen\n          .elseIf(_`${dataType} == \"number\" || ${dataType} == \"boolean\"`)\n          .assign(coerced, _`\"\" + ${data}`)\n          .elseIf(_`${data} === null`)\n          .assign(coerced, _`\"\"`)\n        return\n      case \"number\":\n        gen\n          .elseIf(\n            _`${dataType} == \"boolean\" || ${data} === null\n              || (${dataType} == \"string\" && ${data} && ${data} == +${data})`\n          )\n          .assign(coerced, _`+${data}`)\n        return\n      case \"integer\":\n        gen\n          .elseIf(\n            _`${dataType} === \"boolean\" || ${data} === null\n              || (${dataType} === \"string\" && ${data} && ${data} == +${data} && !(${data} % 1))`\n          )\n          .assign(coerced, _`+${data}`)\n        return\n      case \"boolean\":\n        gen\n          .elseIf(_`${data} === \"false\" || ${data} === 0 || ${data} === null`)\n          .assign(coerced, false)\n          .elseIf(_`${data} === \"true\" || ${data} === 1`)\n          .assign(coerced, true)\n        return\n      case \"null\":\n        gen.elseIf(_`${data} === \"\" || ${data} === 0 || ${data} === false`)\n        gen.assign(coerced, null)\n        return\n\n      case \"array\":\n        gen\n          .elseIf(\n            _`${dataType} === \"string\" || ${dataType} === \"number\"\n              || ${dataType} === \"boolean\" || ${data} === null`\n          )\n          .assign(coerced, _`[${data}]`)\n    }\n  }\n}\n\nfunction assignParentData({gen, parentData, parentDataProperty}: SchemaObjCxt, expr: Name): void {\n  // TODO use gen.property\n  gen.if(_`${parentData} !== undefined`, () =>\n    gen.assign(_`${parentData}[${parentDataProperty}]`, expr)\n  )\n}\n\nexport function checkDataType(\n  dataType: JSONType,\n  data: Name,\n  strictNums?: boolean | \"log\",\n  correct = DataType.Correct\n): Code {\n  const EQ = correct === DataType.Correct ? operators.EQ : operators.NEQ\n  let cond: Code\n  switch (dataType) {\n    case \"null\":\n      return _`${data} ${EQ} null`\n    case \"array\":\n      cond = _`Array.isArray(${data})`\n      break\n    case \"object\":\n      cond = _`${data} && typeof ${data} == \"object\" && !Array.isArray(${data})`\n      break\n    case \"integer\":\n      cond = numCond(_`!(${data} % 1) && !isNaN(${data})`)\n      break\n    case \"number\":\n      cond = numCond()\n      break\n    default:\n      return _`typeof ${data} ${EQ} ${dataType}`\n  }\n  return correct === DataType.Correct ? cond : not(cond)\n\n  function numCond(_cond: Code = nil): Code {\n    return and(_`typeof ${data} == \"number\"`, _cond, strictNums ? _`isFinite(${data})` : nil)\n  }\n}\n\nexport function checkDataTypes(\n  dataTypes: JSONType[],\n  data: Name,\n  strictNums?: boolean | \"log\",\n  correct?: DataType\n): Code {\n  if (dataTypes.length === 1) {\n    return checkDataType(dataTypes[0], data, strictNums, correct)\n  }\n  let cond: Code\n  const types = toHash(dataTypes)\n  if (types.array && types.object) {\n    const notObj = _`typeof ${data} != \"object\"`\n    cond = types.null ? notObj : _`!${data} || ${notObj}`\n    delete types.null\n    delete types.array\n    delete types.object\n  } else {\n    cond = nil\n  }\n  if (types.number) delete types.integer\n  for (const t in types) cond = and(cond, checkDataType(t as JSONType, data, strictNums, correct))\n  return cond\n}\n\nexport type TypeError = ErrorObject<\"type\", {type: string}>\n\nconst typeError: KeywordErrorDefinition = {\n  message: ({schema}) => `must be ${schema}`,\n  params: ({schema, schemaValue}) =>\n    typeof schema == \"string\" ? _`{type: ${schema}}` : _`{type: ${schemaValue}}`,\n}\n\nexport function reportTypeError(it: SchemaObjCxt): void {\n  const cxt = getTypeErrorContext(it)\n  reportError(cxt, typeError)\n}\n\nfunction getTypeErrorContext(it: SchemaObjCxt): KeywordErrorCxt {\n  const {gen, data, schema} = it\n  const schemaCode = schemaRefOrVal(it, schema, \"type\")\n  return {\n    gen,\n    keyword: \"type\",\n    data,\n    schema: schema.type,\n    schemaCode,\n    schemaValue: schemaCode,\n    parentSchema: schema,\n    params: {},\n    it,\n  }\n}\n", "import type {SchemaObjCxt} from \"..\"\nimport {_, getProperty, stringify} from \"../codegen\"\nimport {checkStrictMode} from \"../util\"\n\nexport function assignDefaults(it: SchemaObjCxt, ty?: string): void {\n  const {properties, items} = it.schema\n  if (ty === \"object\" && properties) {\n    for (const key in properties) {\n      assignDefault(it, key, properties[key].default)\n    }\n  } else if (ty === \"array\" && Array.isArray(items)) {\n    items.forEach((sch, i: number) => assignDefault(it, i, sch.default))\n  }\n}\n\nfunction assignDefault(it: SchemaObjCxt, prop: string | number, defaultValue: unknown): void {\n  const {gen, compositeRule, data, opts} = it\n  if (defaultValue === undefined) return\n  const childData = _`${data}${getProperty(prop)}`\n  if (compositeRule) {\n    checkStrictMode(it, `default is ignored for: ${childData}`)\n    return\n  }\n\n  let condition = _`${childData} === undefined`\n  if (opts.useDefaults === \"empty\") {\n    condition = _`${condition} || ${childData} === null || ${childData} === \"\"`\n  }\n  // `${childData} === undefined` +\n  // (opts.useDefaults === \"empty\" ? ` || ${childData} === null || ${childData} === \"\"` : \"\")\n  gen.if(condition, _`${childData} = ${stringify(defaultValue)}`)\n}\n", "import type {AnySchema, SchemaMap} from \"../types\"\nimport type {SchemaCxt} from \"../compile\"\nimport type {KeywordCxt} from \"../compile/validate\"\nimport {CodeGen, _, and, or, not, nil, strConcat, getProperty, Code, Name} from \"../compile/codegen\"\nimport {alwaysValidSchema, Type} from \"../compile/util\"\nimport N from \"../compile/names\"\nimport {useFunc} from \"../compile/util\"\nexport function checkReportMissingProp(cxt: KeywordCxt, prop: string): void {\n  const {gen, data, it} = cxt\n  gen.if(noPropertyInData(gen, data, prop, it.opts.ownProperties), () => {\n    cxt.setParams({missingProperty: _`${prop}`}, true)\n    cxt.error()\n  })\n}\n\nexport function checkMissingProp(\n  {gen, data, it: {opts}}: KeywordCxt,\n  properties: string[],\n  missing: Name\n): Code {\n  return or(\n    ...properties.map((prop) =>\n      and(noPropertyInData(gen, data, prop, opts.ownProperties), _`${missing} = ${prop}`)\n    )\n  )\n}\n\nexport function reportMissingProp(cxt: KeywordCxt, missing: Name): void {\n  cxt.setParams({missingProperty: missing}, true)\n  cxt.error()\n}\n\nexport function hasPropFunc(gen: CodeGen): Name {\n  return gen.scopeValue(\"func\", {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    ref: Object.prototype.hasOwnProperty,\n    code: _`Object.prototype.hasOwnProperty`,\n  })\n}\n\nexport function isOwnProperty(gen: CodeGen, data: Name, property: Name | string): Code {\n  return _`${hasPropFunc(gen)}.call(${data}, ${property})`\n}\n\nexport function propertyInData(\n  gen: CodeGen,\n  data: Name,\n  property: Name | string,\n  ownProperties?: boolean\n): Code {\n  const cond = _`${data}${getProperty(property)} !== undefined`\n  return ownProperties ? _`${cond} && ${isOwnProperty(gen, data, property)}` : cond\n}\n\nexport function noPropertyInData(\n  gen: CodeGen,\n  data: Name,\n  property: Name | string,\n  ownProperties?: boolean\n): Code {\n  const cond = _`${data}${getProperty(property)} === undefined`\n  return ownProperties ? or(cond, not(isOwnProperty(gen, data, property))) : cond\n}\n\nexport function allSchemaProperties(schemaMap?: SchemaMap): string[] {\n  return schemaMap ? Object.keys(schemaMap).filter((p) => p !== \"__proto__\") : []\n}\n\nexport function schemaProperties(it: SchemaCxt, schemaMap: SchemaMap): string[] {\n  return allSchemaProperties(schemaMap).filter(\n    (p) => !alwaysValidSchema(it, schemaMap[p] as AnySchema)\n  )\n}\n\nexport function callValidateCode(\n  {schemaCode, data, it: {gen, topSchemaRef, schemaPath, errorPath}, it}: KeywordCxt,\n  func: Code,\n  context: Code,\n  passSchema?: boolean\n): Code {\n  const dataAndSchema = passSchema ? _`${schemaCode}, ${data}, ${topSchemaRef}${schemaPath}` : data\n  const valCxt: [Name, Code | number][] = [\n    [N.instancePath, strConcat(N.instancePath, errorPath)],\n    [N.parentData, it.parentData],\n    [N.parentDataProperty, it.parentDataProperty],\n    [N.rootData, N.rootData],\n  ]\n  if (it.opts.dynamicRef) valCxt.push([N.dynamicAnchors, N.dynamicAnchors])\n  const args = _`${dataAndSchema}, ${gen.object(...valCxt)}`\n  return context !== nil ? _`${func}.call(${context}, ${args})` : _`${func}(${args})`\n}\n\nconst newRegExp = _`new RegExp`\n\nexport function usePattern({gen, it: {opts}}: KeywordCxt, pattern: string): Name {\n  const u = opts.unicodeRegExp ? \"u\" : \"\"\n  const {regExp} = opts.code\n  const rx = regExp(pattern, u)\n\n  return gen.scopeValue(\"pattern\", {\n    key: rx.toString(),\n    ref: rx,\n    code: _`${regExp.code === \"new RegExp\" ? newRegExp : useFunc(gen, regExp)}(${pattern}, ${u})`,\n  })\n}\n\nexport function validateArray(cxt: KeywordCxt): Name {\n  const {gen, data, keyword, it} = cxt\n  const valid = gen.name(\"valid\")\n  if (it.allErrors) {\n    const validArr = gen.let(\"valid\", true)\n    validateItems(() => gen.assign(validArr, false))\n    return validArr\n  }\n  gen.var(valid, true)\n  validateItems(() => gen.break())\n  return valid\n\n  function validateItems(notValid: () => void): void {\n    const len = gen.const(\"len\", _`${data}.length`)\n    gen.forRange(\"i\", 0, len, (i) => {\n      cxt.subschema(\n        {\n          keyword,\n          dataProp: i,\n          dataPropType: Type.Num,\n        },\n        valid\n      )\n      gen.if(not(valid), notValid)\n    })\n  }\n}\n\nexport function validateUnion(cxt: KeywordCxt): void {\n  const {gen, schema, keyword, it} = cxt\n  /* istanbul ignore if */\n  if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n  const alwaysValid = schema.some((sch: AnySchema) => alwaysValidSchema(it, sch))\n  if (alwaysValid && !it.opts.unevaluated) return\n\n  const valid = gen.let(\"valid\", false)\n  const schValid = gen.name(\"_valid\")\n\n  gen.block(() =>\n    schema.forEach((_sch: AnySchema, i: number) => {\n      const schCxt = cxt.subschema(\n        {\n          keyword,\n          schemaProp: i,\n          compositeRule: true,\n        },\n        schValid\n      )\n      gen.assign(valid, _`${valid} || ${schValid}`)\n      const merged = cxt.mergeValidEvaluated(schCxt, schValid)\n      // can short-circuit if `unevaluatedProperties/Items` not supported (opts.unevaluated !== true)\n      // or if all properties and items were evaluated (it.props === true && it.items === true)\n      if (!merged) gen.if(not(valid))\n    })\n  )\n\n  cxt.result(\n    valid,\n    () => cxt.reset(),\n    () => cxt.error(true)\n  )\n}\n", "import type {KeywordCxt} from \".\"\nimport type {\n  AnySchema,\n  SchemaValidateFunction,\n  AnyValidateFunction,\n  AddedKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {_, nil, not, stringify, Code, Name, CodeGen} from \"../codegen\"\nimport N from \"../names\"\nimport type {JSONType} from \"../rules\"\nimport {callValidateCode} from \"../../vocabularies/code\"\nimport {extendErrors} from \"../errors\"\n\ntype KeywordCompilationResult = AnySchema | SchemaValidateFunction | AnyValidateFunction\n\nexport function macroKeywordCode(cxt: KeywordCxt, def: MacroKeywordDefinition): void {\n  const {gen, keyword, schema, parentSchema, it} = cxt\n  const macroSchema = def.macro.call(it.self, schema, parentSchema, it)\n  const schemaRef = useKeyword(gen, keyword, macroSchema)\n  if (it.opts.validateSchema !== false) it.self.validateSchema(macroSchema, true)\n\n  const valid = gen.name(\"valid\")\n  cxt.subschema(\n    {\n      schema: macroSchema,\n      schemaPath: nil,\n      errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n      topSchemaRef: schemaRef,\n      compositeRule: true,\n    },\n    valid\n  )\n  cxt.pass(valid, () => cxt.error(true))\n}\n\nexport function funcKeywordCode(cxt: KeywordCxt, def: FuncKeywordDefinition): void {\n  const {gen, keyword, schema, parentSchema, $data, it} = cxt\n  checkAsyncKeyword(it, def)\n  const validate =\n    !$data && def.compile ? def.compile.call(it.self, schema, parentSchema, it) : def.validate\n  const validateRef = useKeyword(gen, keyword, validate)\n  const valid = gen.let(\"valid\")\n  cxt.block$data(valid, validateKeyword)\n  cxt.ok(def.valid ?? valid)\n\n  function validateKeyword(): void {\n    if (def.errors === false) {\n      assignValid()\n      if (def.modifying) modifyData(cxt)\n      reportErrs(() => cxt.error())\n    } else {\n      const ruleErrs = def.async ? validateAsync() : validateSync()\n      if (def.modifying) modifyData(cxt)\n      reportErrs(() => addErrs(cxt, ruleErrs))\n    }\n  }\n\n  function validateAsync(): Name {\n    const ruleErrs = gen.let(\"ruleErrs\", null)\n    gen.try(\n      () => assignValid(_`await `),\n      (e) =>\n        gen.assign(valid, false).if(\n          _`${e} instanceof ${it.ValidationError as Name}`,\n          () => gen.assign(ruleErrs, _`${e}.errors`),\n          () => gen.throw(e)\n        )\n    )\n    return ruleErrs\n  }\n\n  function validateSync(): Code {\n    const validateErrs = _`${validateRef}.errors`\n    gen.assign(validateErrs, null)\n    assignValid(nil)\n    return validateErrs\n  }\n\n  function assignValid(_await: Code = def.async ? _`await ` : nil): void {\n    const passCxt = it.opts.passContext ? N.this : N.self\n    const passSchema = !((\"compile\" in def && !$data) || def.schema === false)\n    gen.assign(\n      valid,\n      _`${_await}${callValidateCode(cxt, validateRef, passCxt, passSchema)}`,\n      def.modifying\n    )\n  }\n\n  function reportErrs(errors: () => void): void {\n    gen.if(not(def.valid ?? valid), errors)\n  }\n}\n\nfunction modifyData(cxt: KeywordCxt): void {\n  const {gen, data, it} = cxt\n  gen.if(it.parentData, () => gen.assign(data, _`${it.parentData}[${it.parentDataProperty}]`))\n}\n\nfunction addErrs(cxt: KeywordCxt, errs: Code): void {\n  const {gen} = cxt\n  gen.if(\n    _`Array.isArray(${errs})`,\n    () => {\n      gen\n        .assign(N.vErrors, _`${N.vErrors} === null ? ${errs} : ${N.vErrors}.concat(${errs})`)\n        .assign(N.errors, _`${N.vErrors}.length`)\n      extendErrors(cxt)\n    },\n    () => cxt.error()\n  )\n}\n\nfunction checkAsyncKeyword({schemaEnv}: SchemaObjCxt, def: FuncKeywordDefinition): void {\n  if (def.async && !schemaEnv.$async) throw new Error(\"async keyword in sync schema\")\n}\n\nfunction useKeyword(gen: CodeGen, keyword: string, result?: KeywordCompilationResult): Name {\n  if (result === undefined) throw new Error(`keyword \"${keyword}\" failed to compile`)\n  return gen.scopeValue(\n    \"keyword\",\n    typeof result == \"function\" ? {ref: result} : {ref: result, code: stringify(result)}\n  )\n}\n\nexport function validSchemaType(\n  schema: unknown,\n  schemaType: JSONType[],\n  allowUndefined = false\n): boolean {\n  // TODO add tests\n  return (\n    !schemaType.length ||\n    schemaType.some((st) =>\n      st === \"array\"\n        ? Array.isArray(schema)\n        : st === \"object\"\n        ? schema && typeof schema == \"object\" && !Array.isArray(schema)\n        : typeof schema == st || (allowUndefined && typeof schema == \"undefined\")\n    )\n  )\n}\n\nexport function validateKeywordUsage(\n  {schema, opts, self, errSchemaPath}: SchemaObjCxt,\n  def: AddedKeywordDefinition,\n  keyword: string\n): void {\n  /* istanbul ignore if */\n  if (Array.isArray(def.keyword) ? !def.keyword.includes(keyword) : def.keyword !== keyword) {\n    throw new Error(\"ajv implementation error\")\n  }\n\n  const deps = def.dependencies\n  if (deps?.some((kwd) => !Object.prototype.hasOwnProperty.call(schema, kwd))) {\n    throw new Error(`parent schema must have dependencies of ${keyword}: ${deps.join(\",\")}`)\n  }\n\n  if (def.validateSchema) {\n    const valid = def.validateSchema(schema[keyword])\n    if (!valid) {\n      const msg =\n        `keyword \"${keyword}\" value is invalid at path \"${errSchemaPath}\": ` +\n        self.errorsText(def.validateSchema.errors)\n      if (opts.validateSchema === \"log\") self.logger.error(msg)\n      else throw new Error(msg)\n    }\n  }\n}\n", "import type {AnySchema} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {_, str, getProperty, Code, Name} from \"../codegen\"\nimport {escapeFragment, getErrorPath, Type} from \"../util\"\nimport type {JSONType} from \"../rules\"\n\nexport interface SubschemaContext {\n  // TODO use Optional? align with SchemCxt property types\n  schema: AnySchema\n  schemaPath: Code\n  errSchemaPath: string\n  topSchemaRef?: Code\n  errorPath?: Code\n  dataLevel?: number\n  dataTypes?: JSONType[]\n  data?: Name\n  parentData?: Name\n  parentDataProperty?: Code | number\n  dataNames?: Name[]\n  dataPathArr?: (Code | number)[]\n  propertyName?: Name\n  jtdDiscriminator?: string\n  jtdMetadata?: boolean\n  compositeRule?: true\n  createErrors?: boolean\n  allErrors?: boolean\n}\n\nexport type SubschemaArgs = Partial<{\n  keyword: string\n  schemaProp: string | number\n  schema: AnySchema\n  schemaPath: Code\n  errSchemaPath: string\n  topSchemaRef: Code\n  data: Name | Code\n  dataProp: Code | string | number\n  dataTypes: JSONType[]\n  definedProperties: Set<string>\n  propertyName: Name\n  dataPropType: Type\n  jtdDiscriminator: string\n  jtdMetadata: boolean\n  compositeRule: true\n  createErrors: boolean\n  allErrors: boolean\n}>\n\nexport function getSubschema(\n  it: SchemaObjCxt,\n  {keyword, schemaProp, schema, schemaPath, errSchemaPath, topSchemaRef}: SubschemaArgs\n): SubschemaContext {\n  if (keyword !== undefined && schema !== undefined) {\n    throw new Error('both \"keyword\" and \"schema\" passed, only one allowed')\n  }\n\n  if (keyword !== undefined) {\n    const sch = it.schema[keyword]\n    return schemaProp === undefined\n      ? {\n          schema: sch,\n          schemaPath: _`${it.schemaPath}${getProperty(keyword)}`,\n          errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n        }\n      : {\n          schema: sch[schemaProp],\n          schemaPath: _`${it.schemaPath}${getProperty(keyword)}${getProperty(schemaProp)}`,\n          errSchemaPath: `${it.errSchemaPath}/${keyword}/${escapeFragment(schemaProp)}`,\n        }\n  }\n\n  if (schema !== undefined) {\n    if (schemaPath === undefined || errSchemaPath === undefined || topSchemaRef === undefined) {\n      throw new Error('\"schemaPath\", \"errSchemaPath\" and \"topSchemaRef\" are required with \"schema\"')\n    }\n    return {\n      schema,\n      schemaPath,\n      topSchemaRef,\n      errSchemaPath,\n    }\n  }\n\n  throw new Error('either \"keyword\" or \"schema\" must be passed')\n}\n\nexport function extendSubschemaData(\n  subschema: SubschemaContext,\n  it: SchemaObjCxt,\n  {dataProp, dataPropType: dpType, data, dataTypes, propertyName}: SubschemaArgs\n): void {\n  if (data !== undefined && dataProp !== undefined) {\n    throw new Error('both \"data\" and \"dataProp\" passed, only one allowed')\n  }\n\n  const {gen} = it\n\n  if (dataProp !== undefined) {\n    const {errorPath, dataPathArr, opts} = it\n    const nextData = gen.let(\"data\", _`${it.data}${getProperty(dataProp)}`, true)\n    dataContextProps(nextData)\n    subschema.errorPath = str`${errorPath}${getErrorPath(dataProp, dpType, opts.jsPropertySyntax)}`\n    subschema.parentDataProperty = _`${dataProp}`\n    subschema.dataPathArr = [...dataPathArr, subschema.parentDataProperty]\n  }\n\n  if (data !== undefined) {\n    const nextData = data instanceof Name ? data : gen.let(\"data\", data, true) // replaceable if used once?\n    dataContextProps(nextData)\n    if (propertyName !== undefined) subschema.propertyName = propertyName\n    // TODO something is possibly wrong here with not changing parentDataProperty and not appending dataPathArr\n  }\n\n  if (dataTypes) subschema.dataTypes = dataTypes\n\n  function dataContextProps(_nextData: Name): void {\n    subschema.data = _nextData\n    subschema.dataLevel = it.dataLevel + 1\n    subschema.dataTypes = []\n    it.definedProperties = new Set<string>()\n    subschema.parentData = it.data\n    subschema.dataNames = [...it.dataNames, _nextData]\n  }\n}\n\nexport function extendSubschemaMode(\n  subschema: SubschemaContext,\n  {jtdDiscriminator, jtdMetadata, compositeRule, createErrors, allErrors}: SubschemaArgs\n): void {\n  if (compositeRule !== undefined) subschema.compositeRule = compositeRule\n  if (createErrors !== undefined) subschema.createErrors = createErrors\n  if (allErrors !== undefined) subschema.allErrors = allErrors\n  subschema.jtdDiscriminator = jtdDiscriminator // not inherited\n  subschema.jtdMetadata = jtdMetadata // not inherited\n}\n", "'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n", "'use strict';\n\nvar traverse = module.exports = function (schema, opts, cb) {\n  // Legacy support for v0.3.1 and earlier.\n  if (typeof opts == 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  cb = opts.cb || cb;\n  var pre = (typeof cb == 'function') ? cb : cb.pre || function() {};\n  var post = cb.post || function() {};\n\n  _traverse(opts, pre, post, schema, '', schema);\n};\n\n\ntraverse.keywords = {\n  additionalItems: true,\n  items: true,\n  contains: true,\n  additionalProperties: true,\n  propertyNames: true,\n  not: true,\n  if: true,\n  then: true,\n  else: true\n};\n\ntraverse.arrayKeywords = {\n  items: true,\n  allOf: true,\n  anyOf: true,\n  oneOf: true\n};\n\ntraverse.propsKeywords = {\n  $defs: true,\n  definitions: true,\n  properties: true,\n  patternProperties: true,\n  dependencies: true\n};\n\ntraverse.skipKeywords = {\n  default: true,\n  enum: true,\n  const: true,\n  required: true,\n  maximum: true,\n  minimum: true,\n  exclusiveMaximum: true,\n  exclusiveMinimum: true,\n  multipleOf: true,\n  maxLength: true,\n  minLength: true,\n  pattern: true,\n  format: true,\n  maxItems: true,\n  minItems: true,\n  uniqueItems: true,\n  maxProperties: true,\n  minProperties: true\n};\n\n\nfunction _traverse(opts, pre, post, schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n  if (schema && typeof schema == 'object' && !Array.isArray(schema)) {\n    pre(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n    for (var key in schema) {\n      var sch = schema[key];\n      if (Array.isArray(sch)) {\n        if (key in traverse.arrayKeywords) {\n          for (var i=0; i<sch.length; i++)\n            _traverse(opts, pre, post, sch[i], jsonPtr + '/' + key + '/' + i, rootSchema, jsonPtr, key, schema, i);\n        }\n      } else if (key in traverse.propsKeywords) {\n        if (sch && typeof sch == 'object') {\n          for (var prop in sch)\n            _traverse(opts, pre, post, sch[prop], jsonPtr + '/' + key + '/' + escapeJsonPtr(prop), rootSchema, jsonPtr, key, schema, prop);\n        }\n      } else if (key in traverse.keywords || (opts.allKeys && !(key in traverse.skipKeywords))) {\n        _traverse(opts, pre, post, sch, jsonPtr + '/' + key, rootSchema, jsonPtr, key, schema);\n      }\n    }\n    post(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n  }\n}\n\n\nfunction escapeJsonPtr(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n", "import type {AnySchema, AnySchemaObject, UriResolver} from \"../types\"\nimport type Ajv from \"../ajv\"\nimport type {URIComponent} from \"fast-uri\"\nimport {eachItem} from \"./util\"\nimport * as equal from \"fast-deep-equal\"\nimport * as traverse from \"json-schema-traverse\"\n\n// the hash of local references inside the schema (created by getSchemaRefs), used for inline resolution\nexport type LocalRefs = {[Ref in string]?: AnySchemaObject}\n\n// TODO refactor to use keyword definitions\nconst SIMPLE_INLINED = new Set([\n  \"type\",\n  \"format\",\n  \"pattern\",\n  \"maxLength\",\n  \"minLength\",\n  \"maxProperties\",\n  \"minProperties\",\n  \"maxItems\",\n  \"minItems\",\n  \"maximum\",\n  \"minimum\",\n  \"uniqueItems\",\n  \"multipleOf\",\n  \"required\",\n  \"enum\",\n  \"const\",\n])\n\nexport function inlineRef(schema: AnySchema, limit: boolean | number = true): boolean {\n  if (typeof schema == \"boolean\") return true\n  if (limit === true) return !hasRef(schema)\n  if (!limit) return false\n  return countKeys(schema) <= limit\n}\n\nconst REF_KEYWORDS = new Set([\n  \"$ref\",\n  \"$recursiveRef\",\n  \"$recursiveAnchor\",\n  \"$dynamicRef\",\n  \"$dynamicAnchor\",\n])\n\nfunction hasRef(schema: AnySchemaObject): boolean {\n  for (const key in schema) {\n    if (REF_KEYWORDS.has(key)) return true\n    const sch = schema[key]\n    if (Array.isArray(sch) && sch.some(hasRef)) return true\n    if (typeof sch == \"object\" && hasRef(sch)) return true\n  }\n  return false\n}\n\nfunction countKeys(schema: AnySchemaObject): number {\n  let count = 0\n  for (const key in schema) {\n    if (key === \"$ref\") return Infinity\n    count++\n    if (SIMPLE_INLINED.has(key)) continue\n    if (typeof schema[key] == \"object\") {\n      eachItem(schema[key], (sch) => (count += countKeys(sch)))\n    }\n    if (count === Infinity) return Infinity\n  }\n  return count\n}\n\nexport function getFullPath(resolver: UriResolver, id = \"\", normalize?: boolean): string {\n  if (normalize !== false) id = normalizeId(id)\n  const p = resolver.parse(id)\n  return _getFullPath(resolver, p)\n}\n\nexport function _getFullPath(resolver: UriResolver, p: URIComponent): string {\n  const serialized = resolver.serialize(p)\n  return serialized.split(\"#\")[0] + \"#\"\n}\n\nconst TRAILING_SLASH_HASH = /#\\/?$/\nexport function normalizeId(id: string | undefined): string {\n  return id ? id.replace(TRAILING_SLASH_HASH, \"\") : \"\"\n}\n\nexport function resolveUrl(resolver: UriResolver, baseId: string, id: string): string {\n  id = normalizeId(id)\n  return resolver.resolve(baseId, id)\n}\n\nconst ANCHOR = /^[a-z_][-a-z0-9._]*$/i\n\nexport function getSchemaRefs(this: Ajv, schema: AnySchema, baseId: string): LocalRefs {\n  if (typeof schema == \"boolean\") return {}\n  const {schemaId, uriResolver} = this.opts\n  const schId = normalizeId(schema[schemaId] || baseId)\n  const baseIds: {[JsonPtr in string]?: string} = {\"\": schId}\n  const pathPrefix = getFullPath(uriResolver, schId, false)\n  const localRefs: LocalRefs = {}\n  const schemaRefs: Set<string> = new Set()\n\n  traverse(schema, {allKeys: true}, (sch, jsonPtr, _, parentJsonPtr) => {\n    if (parentJsonPtr === undefined) return\n    const fullPath = pathPrefix + jsonPtr\n    let innerBaseId = baseIds[parentJsonPtr]\n    if (typeof sch[schemaId] == \"string\") innerBaseId = addRef.call(this, sch[schemaId])\n    addAnchor.call(this, sch.$anchor)\n    addAnchor.call(this, sch.$dynamicAnchor)\n    baseIds[jsonPtr] = innerBaseId\n\n    function addRef(this: Ajv, ref: string): string {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      const _resolve = this.opts.uriResolver.resolve\n      ref = normalizeId(innerBaseId ? _resolve(innerBaseId, ref) : ref)\n      if (schemaRefs.has(ref)) throw ambiguos(ref)\n      schemaRefs.add(ref)\n      let schOrRef = this.refs[ref]\n      if (typeof schOrRef == \"string\") schOrRef = this.refs[schOrRef]\n      if (typeof schOrRef == \"object\") {\n        checkAmbiguosRef(sch, schOrRef.schema, ref)\n      } else if (ref !== normalizeId(fullPath)) {\n        if (ref[0] === \"#\") {\n          checkAmbiguosRef(sch, localRefs[ref], ref)\n          localRefs[ref] = sch\n        } else {\n          this.refs[ref] = fullPath\n        }\n      }\n      return ref\n    }\n\n    function addAnchor(this: Ajv, anchor: unknown): void {\n      if (typeof anchor == \"string\") {\n        if (!ANCHOR.test(anchor)) throw new Error(`invalid anchor \"${anchor}\"`)\n        addRef.call(this, `#${anchor}`)\n      }\n    }\n  })\n\n  return localRefs\n\n  function checkAmbiguosRef(sch1: AnySchema, sch2: AnySchema | undefined, ref: string): void {\n    if (sch2 !== undefined && !equal(sch1, sch2)) throw ambiguos(ref)\n  }\n\n  function ambiguos(ref: string): Error {\n    return new Error(`reference \"${ref}\" resolves to more than one schema`)\n  }\n}\n", "import type {\n  AddedKeywordDefinition,\n  AnySchema,\n  AnySchemaObject,\n  KeywordErrorCxt,\n  KeywordCxtParams,\n} from \"../../types\"\nimport type {SchemaCxt, SchemaObjCxt} from \"..\"\nimport type {InstanceOptions} from \"../../core\"\nimport {boolOrEmptySchema, topBoolOrEmptySchema} from \"./boolSchema\"\nimport {coerceAndCheckDataType, getSchemaTypes} from \"./dataType\"\nimport {shouldUseGroup, shouldUseRule} from \"./applicability\"\nimport {checkDataType, checkDataTypes, reportTypeError, DataType} from \"./dataType\"\nimport {assignDefaults} from \"./defaults\"\nimport {funcKeywordCode, macroKeywordCode, validateKeywordUsage, validSchemaType} from \"./keyword\"\nimport {getSubschema, extendSubschemaData, SubschemaArgs, extendSubschemaMode} from \"./subschema\"\nimport {_, nil, str, or, not, getProperty, Block, Code, Name, CodeGen} from \"../codegen\"\nimport N from \"../names\"\nimport {resolveUrl} from \"../resolve\"\nimport {\n  schemaRefOrVal,\n  schemaHasRulesButRef,\n  checkUnknownRules,\n  checkStrictMode,\n  unescapeJsonPointer,\n  mergeEvaluated,\n} from \"../util\"\nimport type {JSONType, Rule, RuleGroup} from \"../rules\"\nimport {\n  ErrorPaths,\n  reportError,\n  reportExtraError,\n  resetErrorsCount,\n  keyword$DataError,\n} from \"../errors\"\n\n// schema compilation - generates validation function, subschemaCode (below) is used for subschemas\nexport function validateFunctionCode(it: SchemaCxt): void {\n  if (isSchemaObj(it)) {\n    checkKeywords(it)\n    if (schemaCxtHasRules(it)) {\n      topSchemaObjCode(it)\n      return\n    }\n  }\n  validateFunction(it, () => topBoolOrEmptySchema(it))\n}\n\nfunction validateFunction(\n  {gen, validateName, schema, schemaEnv, opts}: SchemaCxt,\n  body: Block\n): void {\n  if (opts.code.es5) {\n    gen.func(validateName, _`${N.data}, ${N.valCxt}`, schemaEnv.$async, () => {\n      gen.code(_`\"use strict\"; ${funcSourceUrl(schema, opts)}`)\n      destructureValCxtES5(gen, opts)\n      gen.code(body)\n    })\n  } else {\n    gen.func(validateName, _`${N.data}, ${destructureValCxt(opts)}`, schemaEnv.$async, () =>\n      gen.code(funcSourceUrl(schema, opts)).code(body)\n    )\n  }\n}\n\nfunction destructureValCxt(opts: InstanceOptions): Code {\n  return _`{${N.instancePath}=\"\", ${N.parentData}, ${N.parentDataProperty}, ${N.rootData}=${\n    N.data\n  }${opts.dynamicRef ? _`, ${N.dynamicAnchors}={}` : nil}}={}`\n}\n\nfunction destructureValCxtES5(gen: CodeGen, opts: InstanceOptions): void {\n  gen.if(\n    N.valCxt,\n    () => {\n      gen.var(N.instancePath, _`${N.valCxt}.${N.instancePath}`)\n      gen.var(N.parentData, _`${N.valCxt}.${N.parentData}`)\n      gen.var(N.parentDataProperty, _`${N.valCxt}.${N.parentDataProperty}`)\n      gen.var(N.rootData, _`${N.valCxt}.${N.rootData}`)\n      if (opts.dynamicRef) gen.var(N.dynamicAnchors, _`${N.valCxt}.${N.dynamicAnchors}`)\n    },\n    () => {\n      gen.var(N.instancePath, _`\"\"`)\n      gen.var(N.parentData, _`undefined`)\n      gen.var(N.parentDataProperty, _`undefined`)\n      gen.var(N.rootData, N.data)\n      if (opts.dynamicRef) gen.var(N.dynamicAnchors, _`{}`)\n    }\n  )\n}\n\nfunction topSchemaObjCode(it: SchemaObjCxt): void {\n  const {schema, opts, gen} = it\n  validateFunction(it, () => {\n    if (opts.$comment && schema.$comment) commentKeyword(it)\n    checkNoDefault(it)\n    gen.let(N.vErrors, null)\n    gen.let(N.errors, 0)\n    if (opts.unevaluated) resetEvaluated(it)\n    typeAndKeywords(it)\n    returnResults(it)\n  })\n  return\n}\n\nfunction resetEvaluated(it: SchemaObjCxt): void {\n  // TODO maybe some hook to execute it in the end to check whether props/items are Name, as in assignEvaluated\n  const {gen, validateName} = it\n  it.evaluated = gen.const(\"evaluated\", _`${validateName}.evaluated`)\n  gen.if(_`${it.evaluated}.dynamicProps`, () => gen.assign(_`${it.evaluated}.props`, _`undefined`))\n  gen.if(_`${it.evaluated}.dynamicItems`, () => gen.assign(_`${it.evaluated}.items`, _`undefined`))\n}\n\nfunction funcSourceUrl(schema: AnySchema, opts: InstanceOptions): Code {\n  const schId = typeof schema == \"object\" && schema[opts.schemaId]\n  return schId && (opts.code.source || opts.code.process) ? _`/*# sourceURL=${schId} */` : nil\n}\n\n// schema compilation - this function is used recursively to generate code for sub-schemas\nfunction subschemaCode(it: SchemaCxt, valid: Name): void {\n  if (isSchemaObj(it)) {\n    checkKeywords(it)\n    if (schemaCxtHasRules(it)) {\n      subSchemaObjCode(it, valid)\n      return\n    }\n  }\n  boolOrEmptySchema(it, valid)\n}\n\nfunction schemaCxtHasRules({schema, self}: SchemaCxt): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (self.RULES.all[key]) return true\n  return false\n}\n\nfunction isSchemaObj(it: SchemaCxt): it is SchemaObjCxt {\n  return typeof it.schema != \"boolean\"\n}\n\nfunction subSchemaObjCode(it: SchemaObjCxt, valid: Name): void {\n  const {schema, gen, opts} = it\n  if (opts.$comment && schema.$comment) commentKeyword(it)\n  updateContext(it)\n  checkAsyncSchema(it)\n  const errsCount = gen.const(\"_errs\", N.errors)\n  typeAndKeywords(it, errsCount)\n  // TODO var\n  gen.var(valid, _`${errsCount} === ${N.errors}`)\n}\n\nfunction checkKeywords(it: SchemaObjCxt): void {\n  checkUnknownRules(it)\n  checkRefsAndKeywords(it)\n}\n\nfunction typeAndKeywords(it: SchemaObjCxt, errsCount?: Name): void {\n  if (it.opts.jtd) return schemaKeywords(it, [], false, errsCount)\n  const types = getSchemaTypes(it.schema)\n  const checkedTypes = coerceAndCheckDataType(it, types)\n  schemaKeywords(it, types, !checkedTypes, errsCount)\n}\n\nfunction checkRefsAndKeywords(it: SchemaObjCxt): void {\n  const {schema, errSchemaPath, opts, self} = it\n  if (schema.$ref && opts.ignoreKeywordsWithRef && schemaHasRulesButRef(schema, self.RULES)) {\n    self.logger.warn(`$ref: keywords ignored in schema at path \"${errSchemaPath}\"`)\n  }\n}\n\nfunction checkNoDefault(it: SchemaObjCxt): void {\n  const {schema, opts} = it\n  if (schema.default !== undefined && opts.useDefaults && opts.strictSchema) {\n    checkStrictMode(it, \"default is ignored in the schema root\")\n  }\n}\n\nfunction updateContext(it: SchemaObjCxt): void {\n  const schId = it.schema[it.opts.schemaId]\n  if (schId) it.baseId = resolveUrl(it.opts.uriResolver, it.baseId, schId)\n}\n\nfunction checkAsyncSchema(it: SchemaObjCxt): void {\n  if (it.schema.$async && !it.schemaEnv.$async) throw new Error(\"async schema in sync schema\")\n}\n\nfunction commentKeyword({gen, schemaEnv, schema, errSchemaPath, opts}: SchemaObjCxt): void {\n  const msg = schema.$comment\n  if (opts.$comment === true) {\n    gen.code(_`${N.self}.logger.log(${msg})`)\n  } else if (typeof opts.$comment == \"function\") {\n    const schemaPath = str`${errSchemaPath}/$comment`\n    const rootName = gen.scopeValue(\"root\", {ref: schemaEnv.root})\n    gen.code(_`${N.self}.opts.$comment(${msg}, ${schemaPath}, ${rootName}.schema)`)\n  }\n}\n\nfunction returnResults(it: SchemaCxt): void {\n  const {gen, schemaEnv, validateName, ValidationError, opts} = it\n  if (schemaEnv.$async) {\n    // TODO assign unevaluated\n    gen.if(\n      _`${N.errors} === 0`,\n      () => gen.return(N.data),\n      () => gen.throw(_`new ${ValidationError as Name}(${N.vErrors})`)\n    )\n  } else {\n    gen.assign(_`${validateName}.errors`, N.vErrors)\n    if (opts.unevaluated) assignEvaluated(it)\n    gen.return(_`${N.errors} === 0`)\n  }\n}\n\nfunction assignEvaluated({gen, evaluated, props, items}: SchemaCxt): void {\n  if (props instanceof Name) gen.assign(_`${evaluated}.props`, props)\n  if (items instanceof Name) gen.assign(_`${evaluated}.items`, items)\n}\n\nfunction schemaKeywords(\n  it: SchemaObjCxt,\n  types: JSONType[],\n  typeErrors: boolean,\n  errsCount?: Name\n): void {\n  const {gen, schema, data, allErrors, opts, self} = it\n  const {RULES} = self\n  if (schema.$ref && (opts.ignoreKeywordsWithRef || !schemaHasRulesButRef(schema, RULES))) {\n    gen.block(() => keywordCode(it, \"$ref\", (RULES.all.$ref as Rule).definition)) // TODO typecast\n    return\n  }\n  if (!opts.jtd) checkStrictTypes(it, types)\n  gen.block(() => {\n    for (const group of RULES.rules) groupKeywords(group)\n    groupKeywords(RULES.post)\n  })\n\n  function groupKeywords(group: RuleGroup): void {\n    if (!shouldUseGroup(schema, group)) return\n    if (group.type) {\n      gen.if(checkDataType(group.type, data, opts.strictNumbers))\n      iterateKeywords(it, group)\n      if (types.length === 1 && types[0] === group.type && typeErrors) {\n        gen.else()\n        reportTypeError(it)\n      }\n      gen.endIf()\n    } else {\n      iterateKeywords(it, group)\n    }\n    // TODO make it \"ok\" call?\n    if (!allErrors) gen.if(_`${N.errors} === ${errsCount || 0}`)\n  }\n}\n\nfunction iterateKeywords(it: SchemaObjCxt, group: RuleGroup): void {\n  const {\n    gen,\n    schema,\n    opts: {useDefaults},\n  } = it\n  if (useDefaults) assignDefaults(it, group.type)\n  gen.block(() => {\n    for (const rule of group.rules) {\n      if (shouldUseRule(schema, rule)) {\n        keywordCode(it, rule.keyword, rule.definition, group.type)\n      }\n    }\n  })\n}\n\nfunction checkStrictTypes(it: SchemaObjCxt, types: JSONType[]): void {\n  if (it.schemaEnv.meta || !it.opts.strictTypes) return\n  checkContextTypes(it, types)\n  if (!it.opts.allowUnionTypes) checkMultipleTypes(it, types)\n  checkKeywordTypes(it, it.dataTypes)\n}\n\nfunction checkContextTypes(it: SchemaObjCxt, types: JSONType[]): void {\n  if (!types.length) return\n  if (!it.dataTypes.length) {\n    it.dataTypes = types\n    return\n  }\n  types.forEach((t) => {\n    if (!includesType(it.dataTypes, t)) {\n      strictTypesError(it, `type \"${t}\" not allowed by context \"${it.dataTypes.join(\",\")}\"`)\n    }\n  })\n  narrowSchemaTypes(it, types)\n}\n\nfunction checkMultipleTypes(it: SchemaObjCxt, ts: JSONType[]): void {\n  if (ts.length > 1 && !(ts.length === 2 && ts.includes(\"null\"))) {\n    strictTypesError(it, \"use allowUnionTypes to allow union type keyword\")\n  }\n}\n\nfunction checkKeywordTypes(it: SchemaObjCxt, ts: JSONType[]): void {\n  const rules = it.self.RULES.all\n  for (const keyword in rules) {\n    const rule = rules[keyword]\n    if (typeof rule == \"object\" && shouldUseRule(it.schema, rule)) {\n      const {type} = rule.definition\n      if (type.length && !type.some((t) => hasApplicableType(ts, t))) {\n        strictTypesError(it, `missing type \"${type.join(\",\")}\" for keyword \"${keyword}\"`)\n      }\n    }\n  }\n}\n\nfunction hasApplicableType(schTs: JSONType[], kwdT: JSONType): boolean {\n  return schTs.includes(kwdT) || (kwdT === \"number\" && schTs.includes(\"integer\"))\n}\n\nfunction includesType(ts: JSONType[], t: JSONType): boolean {\n  return ts.includes(t) || (t === \"integer\" && ts.includes(\"number\"))\n}\n\nfunction narrowSchemaTypes(it: SchemaObjCxt, withTypes: JSONType[]): void {\n  const ts: JSONType[] = []\n  for (const t of it.dataTypes) {\n    if (includesType(withTypes, t)) ts.push(t)\n    else if (withTypes.includes(\"integer\") && t === \"number\") ts.push(\"integer\")\n  }\n  it.dataTypes = ts\n}\n\nfunction strictTypesError(it: SchemaObjCxt, msg: string): void {\n  const schemaPath = it.schemaEnv.baseId + it.errSchemaPath\n  msg += ` at \"${schemaPath}\" (strictTypes)`\n  checkStrictMode(it, msg, it.opts.strictTypes)\n}\n\nexport class KeywordCxt implements KeywordErrorCxt {\n  readonly gen: CodeGen\n  readonly allErrors?: boolean\n  readonly keyword: string\n  readonly data: Name // Name referencing the current level of the data instance\n  readonly $data?: string | false\n  schema: any // keyword value in the schema\n  readonly schemaValue: Code | number | boolean // Code reference to keyword schema value or primitive value\n  readonly schemaCode: Code | number | boolean // Code reference to resolved schema value (different if schema is $data)\n  readonly schemaType: JSONType[] // allowed type(s) of keyword value in the schema\n  readonly parentSchema: AnySchemaObject\n  readonly errsCount?: Name // Name reference to the number of validation errors collected before this keyword,\n  // requires option trackErrors in keyword definition\n  params: KeywordCxtParams // object to pass parameters to error messages from keyword code\n  readonly it: SchemaObjCxt // schema compilation context (schema is guaranteed to be an object, not boolean)\n  readonly def: AddedKeywordDefinition\n\n  constructor(it: SchemaObjCxt, def: AddedKeywordDefinition, keyword: string) {\n    validateKeywordUsage(it, def, keyword)\n    this.gen = it.gen\n    this.allErrors = it.allErrors\n    this.keyword = keyword\n    this.data = it.data\n    this.schema = it.schema[keyword]\n    this.$data = def.$data && it.opts.$data && this.schema && this.schema.$data\n    this.schemaValue = schemaRefOrVal(it, this.schema, keyword, this.$data)\n    this.schemaType = def.schemaType\n    this.parentSchema = it.schema\n    this.params = {}\n    this.it = it\n    this.def = def\n\n    if (this.$data) {\n      this.schemaCode = it.gen.const(\"vSchema\", getData(this.$data, it))\n    } else {\n      this.schemaCode = this.schemaValue\n      if (!validSchemaType(this.schema, def.schemaType, def.allowUndefined)) {\n        throw new Error(`${keyword} value must be ${JSON.stringify(def.schemaType)}`)\n      }\n    }\n\n    if (\"code\" in def ? def.trackErrors : def.errors !== false) {\n      this.errsCount = it.gen.const(\"_errs\", N.errors)\n    }\n  }\n\n  result(condition: Code, successAction?: () => void, failAction?: () => void): void {\n    this.failResult(not(condition), successAction, failAction)\n  }\n\n  failResult(condition: Code, successAction?: () => void, failAction?: () => void): void {\n    this.gen.if(condition)\n    if (failAction) failAction()\n    else this.error()\n    if (successAction) {\n      this.gen.else()\n      successAction()\n      if (this.allErrors) this.gen.endIf()\n    } else {\n      if (this.allErrors) this.gen.endIf()\n      else this.gen.else()\n    }\n  }\n\n  pass(condition: Code, failAction?: () => void): void {\n    this.failResult(not(condition), undefined, failAction)\n  }\n\n  fail(condition?: Code): void {\n    if (condition === undefined) {\n      this.error()\n      if (!this.allErrors) this.gen.if(false) // this branch will be removed by gen.optimize\n      return\n    }\n    this.gen.if(condition)\n    this.error()\n    if (this.allErrors) this.gen.endIf()\n    else this.gen.else()\n  }\n\n  fail$data(condition: Code): void {\n    if (!this.$data) return this.fail(condition)\n    const {schemaCode} = this\n    this.fail(_`${schemaCode} !== undefined && (${or(this.invalid$data(), condition)})`)\n  }\n\n  error(append?: boolean, errorParams?: KeywordCxtParams, errorPaths?: ErrorPaths): void {\n    if (errorParams) {\n      this.setParams(errorParams)\n      this._error(append, errorPaths)\n      this.setParams({})\n      return\n    }\n    this._error(append, errorPaths)\n  }\n\n  private _error(append?: boolean, errorPaths?: ErrorPaths): void {\n    ;(append ? reportExtraError : reportError)(this, this.def.error, errorPaths)\n  }\n\n  $dataError(): void {\n    reportError(this, this.def.$dataError || keyword$DataError)\n  }\n\n  reset(): void {\n    if (this.errsCount === undefined) throw new Error('add \"trackErrors\" to keyword definition')\n    resetErrorsCount(this.gen, this.errsCount)\n  }\n\n  ok(cond: Code | boolean): void {\n    if (!this.allErrors) this.gen.if(cond)\n  }\n\n  setParams(obj: KeywordCxtParams, assign?: true): void {\n    if (assign) Object.assign(this.params, obj)\n    else this.params = obj\n  }\n\n  block$data(valid: Name, codeBlock: () => void, $dataValid: Code = nil): void {\n    this.gen.block(() => {\n      this.check$data(valid, $dataValid)\n      codeBlock()\n    })\n  }\n\n  check$data(valid: Name = nil, $dataValid: Code = nil): void {\n    if (!this.$data) return\n    const {gen, schemaCode, schemaType, def} = this\n    gen.if(or(_`${schemaCode} === undefined`, $dataValid))\n    if (valid !== nil) gen.assign(valid, true)\n    if (schemaType.length || def.validateSchema) {\n      gen.elseIf(this.invalid$data())\n      this.$dataError()\n      if (valid !== nil) gen.assign(valid, false)\n    }\n    gen.else()\n  }\n\n  invalid$data(): Code {\n    const {gen, schemaCode, schemaType, def, it} = this\n    return or(wrong$DataType(), invalid$DataSchema())\n\n    function wrong$DataType(): Code {\n      if (schemaType.length) {\n        /* istanbul ignore if */\n        if (!(schemaCode instanceof Name)) throw new Error(\"ajv implementation error\")\n        const st = Array.isArray(schemaType) ? schemaType : [schemaType]\n        return _`${checkDataTypes(st, schemaCode, it.opts.strictNumbers, DataType.Wrong)}`\n      }\n      return nil\n    }\n\n    function invalid$DataSchema(): Code {\n      if (def.validateSchema) {\n        const validateSchemaRef = gen.scopeValue(\"validate$data\", {ref: def.validateSchema}) // TODO value.code for standalone\n        return _`!${validateSchemaRef}(${schemaCode})`\n      }\n      return nil\n    }\n  }\n\n  subschema(appl: SubschemaArgs, valid: Name): SchemaCxt {\n    const subschema = getSubschema(this.it, appl)\n    extendSubschemaData(subschema, this.it, appl)\n    extendSubschemaMode(subschema, appl)\n    const nextContext = {...this.it, ...subschema, items: undefined, props: undefined}\n    subschemaCode(nextContext, valid)\n    return nextContext\n  }\n\n  mergeEvaluated(schemaCxt: SchemaCxt, toName?: typeof Name): void {\n    const {it, gen} = this\n    if (!it.opts.unevaluated) return\n    if (it.props !== true && schemaCxt.props !== undefined) {\n      it.props = mergeEvaluated.props(gen, schemaCxt.props, it.props, toName)\n    }\n    if (it.items !== true && schemaCxt.items !== undefined) {\n      it.items = mergeEvaluated.items(gen, schemaCxt.items, it.items, toName)\n    }\n  }\n\n  mergeValidEvaluated(schemaCxt: SchemaCxt, valid: Name): boolean | void {\n    const {it, gen} = this\n    if (it.opts.unevaluated && (it.props !== true || it.items !== true)) {\n      gen.if(valid, () => this.mergeEvaluated(schemaCxt, Name))\n      return true\n    }\n  }\n}\n\nfunction keywordCode(\n  it: SchemaObjCxt,\n  keyword: string,\n  def: AddedKeywordDefinition,\n  ruleType?: JSONType\n): void {\n  const cxt = new KeywordCxt(it, def, keyword)\n  if (\"code\" in def) {\n    def.code(cxt, ruleType)\n  } else if (cxt.$data && def.validate) {\n    funcKeywordCode(cxt, def)\n  } else if (\"macro\" in def) {\n    macroKeywordCode(cxt, def)\n  } else if (def.compile || def.validate) {\n    funcKeywordCode(cxt, def)\n  }\n}\n\nconst JSON_POINTER = /^\\/(?:[^~]|~0|~1)*$/\nconst RELATIVE_JSON_POINTER = /^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/\nexport function getData(\n  $data: string,\n  {dataLevel, dataNames, dataPathArr}: SchemaCxt\n): Code | number {\n  let jsonPointer\n  let data: Code\n  if ($data === \"\") return N.rootData\n  if ($data[0] === \"/\") {\n    if (!JSON_POINTER.test($data)) throw new Error(`Invalid JSON-pointer: ${$data}`)\n    jsonPointer = $data\n    data = N.rootData\n  } else {\n    const matches = RELATIVE_JSON_POINTER.exec($data)\n    if (!matches) throw new Error(`Invalid JSON-pointer: ${$data}`)\n    const up: number = +matches[1]\n    jsonPointer = matches[2]\n    if (jsonPointer === \"#\") {\n      if (up >= dataLevel) throw new Error(errorMsg(\"property/index\", up))\n      return dataPathArr[dataLevel - up]\n    }\n    if (up > dataLevel) throw new Error(errorMsg(\"data\", up))\n    data = dataNames[dataLevel - up]\n    if (!jsonPointer) return data\n  }\n\n  let expr = data\n  const segments = jsonPointer.split(\"/\")\n  for (const segment of segments) {\n    if (segment) {\n      data = _`${data}${getProperty(unescapeJsonPointer(segment))}`\n      expr = _`${expr} && ${data}`\n    }\n  }\n  return expr\n\n  function errorMsg(pointerType: string, up: number): string {\n    return `Cannot access ${pointerType} ${up} levels up, current level is ${dataLevel}`\n  }\n}\n", "import type {ErrorObject} from \"../types\"\n\nexport default class ValidationError extends Error {\n  readonly errors: Partial<ErrorObject>[]\n  readonly ajv: true\n  readonly validation: true\n\n  constructor(errors: Partial<ErrorObject>[]) {\n    super(\"validation failed\")\n    this.errors = errors\n    this.ajv = this.validation = true\n  }\n}\n", "import {resolveUrl, normalizeId, getFullPath} from \"./resolve\"\nimport type {UriResolver} from \"../types\"\n\nexport default class MissingRefError extends Error {\n  readonly missingRef: string\n  readonly missingSchema: string\n\n  constructor(resolver: UriResolver, baseId: string, ref: string, msg?: string) {\n    super(msg || `can't resolve reference ${ref} from id ${baseId}`)\n    this.missingRef = resolveUrl(resolver, baseId, ref)\n    this.missingSchema = normalizeId(getFullPath(resolver, this.missingRef))\n  }\n}\n", "import type {\n  AnySchema,\n  AnySchemaObject,\n  AnyValidateFunction,\n  AsyncValidateFunction,\n  EvaluatedProperties,\n  EvaluatedItems,\n} from \"../types\"\nimport type Ajv from \"../core\"\nimport type {InstanceOptions} from \"../core\"\nimport {CodeGen, _, nil, stringify, Name, Code, ValueScopeName} from \"./codegen\"\nimport ValidationError from \"../runtime/validation_error\"\nimport N from \"./names\"\nimport {LocalRefs, getFullPath, _getFullPath, inlineRef, normalizeId, resolveUrl} from \"./resolve\"\nimport {schemaHasRulesButRef, unescapeFragment} from \"./util\"\nimport {validateFunctionCode} from \"./validate\"\nimport {URIComponent} from \"fast-uri\"\nimport {JSONType} from \"./rules\"\n\nexport type SchemaRefs = {\n  [Ref in string]?: SchemaEnv | AnySchema\n}\n\nexport interface SchemaCxt {\n  readonly gen: CodeGen\n  readonly allErrors?: boolean // validation mode - whether to collect all errors or break on error\n  readonly data: Name // Name with reference to the current part of data instance\n  readonly parentData: Name // should be used in keywords modifying data\n  readonly parentDataProperty: Code | number // should be used in keywords modifying data\n  readonly dataNames: Name[]\n  readonly dataPathArr: (Code | number)[]\n  readonly dataLevel: number // the level of the currently validated data,\n  // it can be used to access both the property names and the data on all levels from the top.\n  dataTypes: JSONType[] // data types applied to the current part of data instance\n  definedProperties: Set<string> // set of properties to keep track of for required checks\n  readonly topSchemaRef: Code\n  readonly validateName: Name\n  evaluated?: Name\n  readonly ValidationError?: Name\n  readonly schema: AnySchema // current schema object - equal to parentSchema passed via KeywordCxt\n  readonly schemaEnv: SchemaEnv\n  readonly rootId: string\n  baseId: string // the current schema base URI that should be used as the base for resolving URIs in references (\\$ref)\n  readonly schemaPath: Code // the run-time expression that evaluates to the property name of the current schema\n  readonly errSchemaPath: string // this is actual string, should not be changed to Code\n  readonly errorPath: Code\n  readonly propertyName?: Name\n  readonly compositeRule?: boolean // true indicates that the current schema is inside the compound keyword,\n  // where failing some rule doesn't mean validation failure (`anyOf`, `oneOf`, `not`, `if`).\n  // This flag is used to determine whether you can return validation result immediately after any error in case the option `allErrors` is not `true.\n  // You only need to use it if you have many steps in your keywords and potentially can define multiple errors.\n  props?: EvaluatedProperties | Name // properties evaluated by this schema - used by parent schema or assigned to validation function\n  items?: EvaluatedItems | Name // last item evaluated by this schema - used by parent schema or assigned to validation function\n  jtdDiscriminator?: string\n  jtdMetadata?: boolean\n  readonly createErrors?: boolean\n  readonly opts: InstanceOptions // Ajv instance option.\n  readonly self: Ajv // current Ajv instance\n}\n\nexport interface SchemaObjCxt extends SchemaCxt {\n  readonly schema: AnySchemaObject\n}\ninterface SchemaEnvArgs {\n  readonly schema: AnySchema\n  readonly schemaId?: \"$id\" | \"id\"\n  readonly root?: SchemaEnv\n  readonly baseId?: string\n  readonly schemaPath?: string\n  readonly localRefs?: LocalRefs\n  readonly meta?: boolean\n}\n\nexport class SchemaEnv implements SchemaEnvArgs {\n  readonly schema: AnySchema\n  readonly schemaId?: \"$id\" | \"id\"\n  readonly root: SchemaEnv\n  baseId: string // TODO possibly, it should be readonly\n  schemaPath?: string\n  localRefs?: LocalRefs\n  readonly meta?: boolean\n  readonly $async?: boolean // true if the current schema is asynchronous.\n  readonly refs: SchemaRefs = {}\n  readonly dynamicAnchors: {[Ref in string]?: true} = {}\n  validate?: AnyValidateFunction\n  validateName?: ValueScopeName\n  serialize?: (data: unknown) => string\n  serializeName?: ValueScopeName\n  parse?: (data: string) => unknown\n  parseName?: ValueScopeName\n\n  constructor(env: SchemaEnvArgs) {\n    let schema: AnySchemaObject | undefined\n    if (typeof env.schema == \"object\") schema = env.schema\n    this.schema = env.schema\n    this.schemaId = env.schemaId\n    this.root = env.root || this\n    this.baseId = env.baseId ?? normalizeId(schema?.[env.schemaId || \"$id\"])\n    this.schemaPath = env.schemaPath\n    this.localRefs = env.localRefs\n    this.meta = env.meta\n    this.$async = schema?.$async\n    this.refs = {}\n  }\n}\n\n// let codeSize = 0\n// let nodeCount = 0\n\n// Compiles schema in SchemaEnv\nexport function compileSchema(this: Ajv, sch: SchemaEnv): SchemaEnv {\n  // TODO refactor - remove compilations\n  const _sch = getCompilingSchema.call(this, sch)\n  if (_sch) return _sch\n  const rootId = getFullPath(this.opts.uriResolver, sch.root.baseId) // TODO if getFullPath removed 1 tests fails\n  const {es5, lines} = this.opts.code\n  const {ownProperties} = this.opts\n  const gen = new CodeGen(this.scope, {es5, lines, ownProperties})\n  let _ValidationError\n  if (sch.$async) {\n    _ValidationError = gen.scopeValue(\"Error\", {\n      ref: ValidationError,\n      code: _`require(\"ajv/dist/runtime/validation_error\").default`,\n    })\n  }\n\n  const validateName = gen.scopeName(\"validate\")\n  sch.validateName = validateName\n\n  const schemaCxt: SchemaCxt = {\n    gen,\n    allErrors: this.opts.allErrors,\n    data: N.data,\n    parentData: N.parentData,\n    parentDataProperty: N.parentDataProperty,\n    dataNames: [N.data],\n    dataPathArr: [nil], // TODO can its length be used as dataLevel if nil is removed?\n    dataLevel: 0,\n    dataTypes: [],\n    definedProperties: new Set<string>(),\n    topSchemaRef: gen.scopeValue(\n      \"schema\",\n      this.opts.code.source === true\n        ? {ref: sch.schema, code: stringify(sch.schema)}\n        : {ref: sch.schema}\n    ),\n    validateName,\n    ValidationError: _ValidationError,\n    schema: sch.schema,\n    schemaEnv: sch,\n    rootId,\n    baseId: sch.baseId || rootId,\n    schemaPath: nil,\n    errSchemaPath: sch.schemaPath || (this.opts.jtd ? \"\" : \"#\"),\n    errorPath: _`\"\"`,\n    opts: this.opts,\n    self: this,\n  }\n\n  let sourceCode: string | undefined\n  try {\n    this._compilations.add(sch)\n    validateFunctionCode(schemaCxt)\n    gen.optimize(this.opts.code.optimize)\n    // gen.optimize(1)\n    const validateCode = gen.toString()\n    sourceCode = `${gen.scopeRefs(N.scope)}return ${validateCode}`\n    // console.log((codeSize += sourceCode.length), (nodeCount += gen.nodeCount))\n    if (this.opts.code.process) sourceCode = this.opts.code.process(sourceCode, sch)\n    // console.log(\"\\n\\n\\n *** \\n\", sourceCode)\n    const makeValidate = new Function(`${N.self}`, `${N.scope}`, sourceCode)\n    const validate: AnyValidateFunction = makeValidate(this, this.scope.get())\n    this.scope.value(validateName, {ref: validate})\n\n    validate.errors = null\n    validate.schema = sch.schema\n    validate.schemaEnv = sch\n    if (sch.$async) (validate as AsyncValidateFunction).$async = true\n    if (this.opts.code.source === true) {\n      validate.source = {validateName, validateCode, scopeValues: gen._values}\n    }\n    if (this.opts.unevaluated) {\n      const {props, items} = schemaCxt\n      validate.evaluated = {\n        props: props instanceof Name ? undefined : props,\n        items: items instanceof Name ? undefined : items,\n        dynamicProps: props instanceof Name,\n        dynamicItems: items instanceof Name,\n      }\n      if (validate.source) validate.source.evaluated = stringify(validate.evaluated)\n    }\n    sch.validate = validate\n    return sch\n  } catch (e) {\n    delete sch.validate\n    delete sch.validateName\n    if (sourceCode) this.logger.error(\"Error compiling schema, function code:\", sourceCode)\n    // console.log(\"\\n\\n\\n *** \\n\", sourceCode, this.opts)\n    throw e\n  } finally {\n    this._compilations.delete(sch)\n  }\n}\n\nexport function resolveRef(\n  this: Ajv,\n  root: SchemaEnv,\n  baseId: string,\n  ref: string\n): AnySchema | SchemaEnv | undefined {\n  ref = resolveUrl(this.opts.uriResolver, baseId, ref)\n  const schOrFunc = root.refs[ref]\n  if (schOrFunc) return schOrFunc\n\n  let _sch = resolve.call(this, root, ref)\n  if (_sch === undefined) {\n    const schema = root.localRefs?.[ref] // TODO maybe localRefs should hold SchemaEnv\n    const {schemaId} = this.opts\n    if (schema) _sch = new SchemaEnv({schema, schemaId, root, baseId})\n  }\n\n  if (_sch === undefined) return\n  return (root.refs[ref] = inlineOrCompile.call(this, _sch))\n}\n\nfunction inlineOrCompile(this: Ajv, sch: SchemaEnv): AnySchema | SchemaEnv {\n  if (inlineRef(sch.schema, this.opts.inlineRefs)) return sch.schema\n  return sch.validate ? sch : compileSchema.call(this, sch)\n}\n\n// Index of schema compilation in the currently compiled list\nexport function getCompilingSchema(this: Ajv, schEnv: SchemaEnv): SchemaEnv | void {\n  for (const sch of this._compilations) {\n    if (sameSchemaEnv(sch, schEnv)) return sch\n  }\n}\n\nfunction sameSchemaEnv(s1: SchemaEnv, s2: SchemaEnv): boolean {\n  return s1.schema === s2.schema && s1.root === s2.root && s1.baseId === s2.baseId\n}\n\n// resolve and compile the references ($ref)\n// TODO returns AnySchemaObject (if the schema can be inlined) or validation function\nfunction resolve(\n  this: Ajv,\n  root: SchemaEnv, // information about the root schema for the current schema\n  ref: string // reference to resolve\n): SchemaEnv | undefined {\n  let sch\n  while (typeof (sch = this.refs[ref]) == \"string\") ref = sch\n  return sch || this.schemas[ref] || resolveSchema.call(this, root, ref)\n}\n\n// Resolve schema, its root and baseId\nexport function resolveSchema(\n  this: Ajv,\n  root: SchemaEnv, // root object with properties schema, refs TODO below SchemaEnv is assigned to it\n  ref: string // reference to resolve\n): SchemaEnv | undefined {\n  const p = this.opts.uriResolver.parse(ref)\n  const refPath = _getFullPath(this.opts.uriResolver, p)\n  let baseId = getFullPath(this.opts.uriResolver, root.baseId, undefined)\n  // TODO `Object.keys(root.schema).length > 0` should not be needed - but removing breaks 2 tests\n  if (Object.keys(root.schema).length > 0 && refPath === baseId) {\n    return getJsonPointer.call(this, p, root)\n  }\n\n  const id = normalizeId(refPath)\n  const schOrRef = this.refs[id] || this.schemas[id]\n  if (typeof schOrRef == \"string\") {\n    const sch = resolveSchema.call(this, root, schOrRef)\n    if (typeof sch?.schema !== \"object\") return\n    return getJsonPointer.call(this, p, sch)\n  }\n\n  if (typeof schOrRef?.schema !== \"object\") return\n  if (!schOrRef.validate) compileSchema.call(this, schOrRef)\n  if (id === normalizeId(ref)) {\n    const {schema} = schOrRef\n    const {schemaId} = this.opts\n    const schId = schema[schemaId]\n    if (schId) baseId = resolveUrl(this.opts.uriResolver, baseId, schId)\n    return new SchemaEnv({schema, schemaId, root, baseId})\n  }\n  return getJsonPointer.call(this, p, schOrRef)\n}\n\nconst PREVENT_SCOPE_CHANGE = new Set([\n  \"properties\",\n  \"patternProperties\",\n  \"enum\",\n  \"dependencies\",\n  \"definitions\",\n])\n\nfunction getJsonPointer(\n  this: Ajv,\n  parsedRef: URIComponent,\n  {baseId, schema, root}: SchemaEnv\n): SchemaEnv | undefined {\n  if (parsedRef.fragment?.[0] !== \"/\") return\n  for (const part of parsedRef.fragment.slice(1).split(\"/\")) {\n    if (typeof schema === \"boolean\") return\n    const partSchema = schema[unescapeFragment(part)]\n    if (partSchema === undefined) return\n    schema = partSchema\n    // TODO PREVENT_SCOPE_CHANGE could be defined in keyword def?\n    const schId = typeof schema === \"object\" && schema[this.opts.schemaId]\n    if (!PREVENT_SCOPE_CHANGE.has(part) && schId) {\n      baseId = resolveUrl(this.opts.uriResolver, baseId, schId)\n    }\n  }\n  let env: SchemaEnv | undefined\n  if (typeof schema != \"boolean\" && schema.$ref && !schemaHasRulesButRef(schema, this.RULES)) {\n    const $ref = resolveUrl(this.opts.uriResolver, baseId, schema.$ref)\n    env = resolveSchema.call(this, root, $ref)\n  }\n  // even though resolution failed we need to return SchemaEnv to throw exception\n  // so that compileAsync loads missing schema.\n  const {schemaId} = this.opts\n  env = env || new SchemaEnv({schema, schemaId, root, baseId})\n  if (env.schema !== env.root.schema) return env\n  return undefined\n}\n", "{\n  \"$id\": \"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#\",\n  \"description\": \"Meta-schema for $data reference (JSON AnySchema extension proposal)\",\n  \"type\": \"object\",\n  \"required\": [\"$data\"],\n  \"properties\": {\n    \"$data\": {\n      \"type\": \"string\",\n      \"anyOf\": [{\"format\": \"relative-json-pointer\"}, {\"format\": \"json-pointer\"}]\n    }\n  },\n  \"additionalProperties\": false\n}\n", "'use strict'\n\nconst HEX = {\n  0: 0,\n  1: 1,\n  2: 2,\n  3: 3,\n  4: 4,\n  5: 5,\n  6: 6,\n  7: 7,\n  8: 8,\n  9: 9,\n  a: 10,\n  A: 10,\n  b: 11,\n  B: 11,\n  c: 12,\n  C: 12,\n  d: 13,\n  D: 13,\n  e: 14,\n  E: 14,\n  f: 15,\n  F: 15\n}\n\nmodule.exports = {\n  HEX\n}\n", "'use strict'\n\nconst { HEX } = require('./scopedChars')\n\nfunction normalizeIPv4 (host) {\n  if (findToken(host, '.') < 3) { return { host, isIPV4: false } }\n  const matches = host.match(/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/u) || []\n  const [address] = matches\n  if (address) {\n    return { host: stripLeadingZeros(address, '.'), isIPV4: true }\n  } else {\n    return { host, isIPV4: false }\n  }\n}\n\n/**\n * @param {string[]} input\n * @param {boolean} [keepZero=false]\n * @returns {string|undefined}\n */\nfunction stringArrayToHexStripped (input, keepZero = false) {\n  let acc = ''\n  let strip = true\n  for (const c of input) {\n    if (HEX[c] === undefined) return undefined\n    if (c !== '0' && strip === true) strip = false\n    if (!strip) acc += c\n  }\n  if (keepZero && acc.length === 0) acc = '0'\n  return acc\n}\n\nfunction getIPV6 (input) {\n  let tokenCount = 0\n  const output = { error: false, address: '', zone: '' }\n  const address = []\n  const buffer = []\n  let isZone = false\n  let endipv6Encountered = false\n  let endIpv6 = false\n\n  function consume () {\n    if (buffer.length) {\n      if (isZone === false) {\n        const hex = stringArrayToHexStripped(buffer)\n        if (hex !== undefined) {\n          address.push(hex)\n        } else {\n          output.error = true\n          return false\n        }\n      }\n      buffer.length = 0\n    }\n    return true\n  }\n\n  for (let i = 0; i < input.length; i++) {\n    const cursor = input[i]\n    if (cursor === '[' || cursor === ']') { continue }\n    if (cursor === ':') {\n      if (endipv6Encountered === true) {\n        endIpv6 = true\n      }\n      if (!consume()) { break }\n      tokenCount++\n      address.push(':')\n      if (tokenCount > 7) {\n        // not valid\n        output.error = true\n        break\n      }\n      if (i - 1 >= 0 && input[i - 1] === ':') {\n        endipv6Encountered = true\n      }\n      continue\n    } else if (cursor === '%') {\n      if (!consume()) { break }\n      // switch to zone detection\n      isZone = true\n    } else {\n      buffer.push(cursor)\n      continue\n    }\n  }\n  if (buffer.length) {\n    if (isZone) {\n      output.zone = buffer.join('')\n    } else if (endIpv6) {\n      address.push(buffer.join(''))\n    } else {\n      address.push(stringArrayToHexStripped(buffer))\n    }\n  }\n  output.address = address.join('')\n  return output\n}\n\nfunction normalizeIPv6 (host, opts = {}) {\n  if (findToken(host, ':') < 2) { return { host, isIPV6: false } }\n  const ipv6 = getIPV6(host)\n\n  if (!ipv6.error) {\n    let newHost = ipv6.address\n    let escapedHost = ipv6.address\n    if (ipv6.zone) {\n      newHost += '%' + ipv6.zone\n      escapedHost += '%25' + ipv6.zone\n    }\n    return { host: newHost, escapedHost, isIPV6: true }\n  } else {\n    return { host, isIPV6: false }\n  }\n}\n\nfunction stripLeadingZeros (str, token) {\n  let out = ''\n  let skip = true\n  const l = str.length\n  for (let i = 0; i < l; i++) {\n    const c = str[i]\n    if (c === '0' && skip) {\n      if ((i + 1 <= l && str[i + 1] === token) || i + 1 === l) {\n        out += c\n        skip = false\n      }\n    } else {\n      if (c === token) {\n        skip = true\n      } else {\n        skip = false\n      }\n      out += c\n    }\n  }\n  return out\n}\n\nfunction findToken (str, token) {\n  let ind = 0\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] === token) ind++\n  }\n  return ind\n}\n\nconst RDS1 = /^\\.\\.?\\//u\nconst RDS2 = /^\\/\\.(?:\\/|$)/u\nconst RDS3 = /^\\/\\.\\.(?:\\/|$)/u\nconst RDS5 = /^\\/?(?:.|\\n)*?(?=\\/|$)/u\n\nfunction removeDotSegments (input) {\n  const output = []\n\n  while (input.length) {\n    if (input.match(RDS1)) {\n      input = input.replace(RDS1, '')\n    } else if (input.match(RDS2)) {\n      input = input.replace(RDS2, '/')\n    } else if (input.match(RDS3)) {\n      input = input.replace(RDS3, '/')\n      output.pop()\n    } else if (input === '.' || input === '..') {\n      input = ''\n    } else {\n      const im = input.match(RDS5)\n      if (im) {\n        const s = im[0]\n        input = input.slice(s.length)\n        output.push(s)\n      } else {\n        throw new Error('Unexpected dot segment condition')\n      }\n    }\n  }\n  return output.join('')\n}\n\nfunction normalizeComponentEncoding (components, esc) {\n  const func = esc !== true ? escape : unescape\n  if (components.scheme !== undefined) {\n    components.scheme = func(components.scheme)\n  }\n  if (components.userinfo !== undefined) {\n    components.userinfo = func(components.userinfo)\n  }\n  if (components.host !== undefined) {\n    components.host = func(components.host)\n  }\n  if (components.path !== undefined) {\n    components.path = func(components.path)\n  }\n  if (components.query !== undefined) {\n    components.query = func(components.query)\n  }\n  if (components.fragment !== undefined) {\n    components.fragment = func(components.fragment)\n  }\n  return components\n}\n\nfunction recomposeAuthority (components, options) {\n  const uriTokens = []\n\n  if (components.userinfo !== undefined) {\n    uriTokens.push(components.userinfo)\n    uriTokens.push('@')\n  }\n\n  if (components.host !== undefined) {\n    let host = unescape(components.host)\n    const ipV4res = normalizeIPv4(host)\n\n    if (ipV4res.isIPV4) {\n      host = ipV4res.host\n    } else {\n      const ipV6res = normalizeIPv6(ipV4res.host, { isIPV4: false })\n      if (ipV6res.isIPV6 === true) {\n        host = `[${ipV6res.escapedHost}]`\n      } else {\n        host = components.host\n      }\n    }\n    uriTokens.push(host)\n  }\n\n  if (typeof components.port === 'number' || typeof components.port === 'string') {\n    uriTokens.push(':')\n    uriTokens.push(String(components.port))\n  }\n\n  return uriTokens.length ? uriTokens.join('') : undefined\n};\n\nmodule.exports = {\n  recomposeAuthority,\n  normalizeComponentEncoding,\n  removeDotSegments,\n  normalizeIPv4,\n  normalizeIPv6,\n  stringArrayToHexStripped\n}\n", "'use strict'\n\nconst UUID_REG = /^[\\da-f]{8}\\b-[\\da-f]{4}\\b-[\\da-f]{4}\\b-[\\da-f]{4}\\b-[\\da-f]{12}$/iu\nconst URN_REG = /([\\da-z][\\d\\-a-z]{0,31}):((?:[\\w!$'()*+,\\-.:;=@]|%[\\da-f]{2})+)/iu\n\nfunction isSecure (wsComponents) {\n  return typeof wsComponents.secure === 'boolean' ? wsComponents.secure : String(wsComponents.scheme).toLowerCase() === 'wss'\n}\n\nfunction httpParse (components) {\n  if (!components.host) {\n    components.error = components.error || 'HTTP URIs must have a host.'\n  }\n\n  return components\n}\n\nfunction httpSerialize (components) {\n  const secure = String(components.scheme).toLowerCase() === 'https'\n\n  // normalize the default port\n  if (components.port === (secure ? 443 : 80) || components.port === '') {\n    components.port = undefined\n  }\n\n  // normalize the empty path\n  if (!components.path) {\n    components.path = '/'\n  }\n\n  // NOTE: We do not parse query strings for HTTP URIs\n  // as WWW Form Url Encoded query strings are part of the HTML4+ spec,\n  // and not the HTTP spec.\n\n  return components\n}\n\nfunction wsParse (wsComponents) {\n// indicate if the secure flag is set\n  wsComponents.secure = isSecure(wsComponents)\n\n  // construct resouce name\n  wsComponents.resourceName = (wsComponents.path || '/') + (wsComponents.query ? '?' + wsComponents.query : '')\n  wsComponents.path = undefined\n  wsComponents.query = undefined\n\n  return wsComponents\n}\n\nfunction wsSerialize (wsComponents) {\n// normalize the default port\n  if (wsComponents.port === (isSecure(wsComponents) ? 443 : 80) || wsComponents.port === '') {\n    wsComponents.port = undefined\n  }\n\n  // ensure scheme matches secure flag\n  if (typeof wsComponents.secure === 'boolean') {\n    wsComponents.scheme = (wsComponents.secure ? 'wss' : 'ws')\n    wsComponents.secure = undefined\n  }\n\n  // reconstruct path from resource name\n  if (wsComponents.resourceName) {\n    const [path, query] = wsComponents.resourceName.split('?')\n    wsComponents.path = (path && path !== '/' ? path : undefined)\n    wsComponents.query = query\n    wsComponents.resourceName = undefined\n  }\n\n  // forbid fragment component\n  wsComponents.fragment = undefined\n\n  return wsComponents\n}\n\nfunction urnParse (urnComponents, options) {\n  if (!urnComponents.path) {\n    urnComponents.error = 'URN can not be parsed'\n    return urnComponents\n  }\n  const matches = urnComponents.path.match(URN_REG)\n  if (matches) {\n    const scheme = options.scheme || urnComponents.scheme || 'urn'\n    urnComponents.nid = matches[1].toLowerCase()\n    urnComponents.nss = matches[2]\n    const urnScheme = `${scheme}:${options.nid || urnComponents.nid}`\n    const schemeHandler = SCHEMES[urnScheme]\n    urnComponents.path = undefined\n\n    if (schemeHandler) {\n      urnComponents = schemeHandler.parse(urnComponents, options)\n    }\n  } else {\n    urnComponents.error = urnComponents.error || 'URN can not be parsed.'\n  }\n\n  return urnComponents\n}\n\nfunction urnSerialize (urnComponents, options) {\n  const scheme = options.scheme || urnComponents.scheme || 'urn'\n  const nid = urnComponents.nid.toLowerCase()\n  const urnScheme = `${scheme}:${options.nid || nid}`\n  const schemeHandler = SCHEMES[urnScheme]\n\n  if (schemeHandler) {\n    urnComponents = schemeHandler.serialize(urnComponents, options)\n  }\n\n  const uriComponents = urnComponents\n  const nss = urnComponents.nss\n  uriComponents.path = `${nid || options.nid}:${nss}`\n\n  options.skipEscape = true\n  return uriComponents\n}\n\nfunction urnuuidParse (urnComponents, options) {\n  const uuidComponents = urnComponents\n  uuidComponents.uuid = uuidComponents.nss\n  uuidComponents.nss = undefined\n\n  if (!options.tolerant && (!uuidComponents.uuid || !UUID_REG.test(uuidComponents.uuid))) {\n    uuidComponents.error = uuidComponents.error || 'UUID is not valid.'\n  }\n\n  return uuidComponents\n}\n\nfunction urnuuidSerialize (uuidComponents) {\n  const urnComponents = uuidComponents\n  // normalize UUID\n  urnComponents.nss = (uuidComponents.uuid || '').toLowerCase()\n  return urnComponents\n}\n\nconst http = {\n  scheme: 'http',\n  domainHost: true,\n  parse: httpParse,\n  serialize: httpSerialize\n}\n\nconst https = {\n  scheme: 'https',\n  domainHost: http.domainHost,\n  parse: httpParse,\n  serialize: httpSerialize\n}\n\nconst ws = {\n  scheme: 'ws',\n  domainHost: true,\n  parse: wsParse,\n  serialize: wsSerialize\n}\n\nconst wss = {\n  scheme: 'wss',\n  domainHost: ws.domainHost,\n  parse: ws.parse,\n  serialize: ws.serialize\n}\n\nconst urn = {\n  scheme: 'urn',\n  parse: urnParse,\n  serialize: urnSerialize,\n  skipNormalize: true\n}\n\nconst urnuuid = {\n  scheme: 'urn:uuid',\n  parse: urnuuidParse,\n  serialize: urnuuidSerialize,\n  skipNormalize: true\n}\n\nconst SCHEMES = {\n  http,\n  https,\n  ws,\n  wss,\n  urn,\n  'urn:uuid': urnuuid\n}\n\nmodule.exports = SCHEMES\n", "'use strict'\n\nconst { normalizeIPv6, normalizeIPv4, removeDotSegments, recomposeAuthority, normalizeComponentEncoding } = require('./lib/utils')\nconst SCHEMES = require('./lib/schemes')\n\nfunction normalize (uri, options) {\n  if (typeof uri === 'string') {\n    uri = serialize(parse(uri, options), options)\n  } else if (typeof uri === 'object') {\n    uri = parse(serialize(uri, options), options)\n  }\n  return uri\n}\n\nfunction resolve (baseURI, relativeURI, options) {\n  const schemelessOptions = Object.assign({ scheme: 'null' }, options)\n  const resolved = resolveComponents(parse(baseURI, schemelessOptions), parse(relativeURI, schemelessOptions), schemelessOptions, true)\n  return serialize(resolved, { ...schemelessOptions, skipEscape: true })\n}\n\nfunction resolveComponents (base, relative, options, skipNormalization) {\n  const target = {}\n  if (!skipNormalization) {\n    base = parse(serialize(base, options), options) // normalize base components\n    relative = parse(serialize(relative, options), options) // normalize relative components\n  }\n  options = options || {}\n\n  if (!options.tolerant && relative.scheme) {\n    target.scheme = relative.scheme\n    // target.authority = relative.authority;\n    target.userinfo = relative.userinfo\n    target.host = relative.host\n    target.port = relative.port\n    target.path = removeDotSegments(relative.path || '')\n    target.query = relative.query\n  } else {\n    if (relative.userinfo !== undefined || relative.host !== undefined || relative.port !== undefined) {\n      // target.authority = relative.authority;\n      target.userinfo = relative.userinfo\n      target.host = relative.host\n      target.port = relative.port\n      target.path = removeDotSegments(relative.path || '')\n      target.query = relative.query\n    } else {\n      if (!relative.path) {\n        target.path = base.path\n        if (relative.query !== undefined) {\n          target.query = relative.query\n        } else {\n          target.query = base.query\n        }\n      } else {\n        if (relative.path.charAt(0) === '/') {\n          target.path = removeDotSegments(relative.path)\n        } else {\n          if ((base.userinfo !== undefined || base.host !== undefined || base.port !== undefined) && !base.path) {\n            target.path = '/' + relative.path\n          } else if (!base.path) {\n            target.path = relative.path\n          } else {\n            target.path = base.path.slice(0, base.path.lastIndexOf('/') + 1) + relative.path\n          }\n          target.path = removeDotSegments(target.path)\n        }\n        target.query = relative.query\n      }\n      // target.authority = base.authority;\n      target.userinfo = base.userinfo\n      target.host = base.host\n      target.port = base.port\n    }\n    target.scheme = base.scheme\n  }\n\n  target.fragment = relative.fragment\n\n  return target\n}\n\nfunction equal (uriA, uriB, options) {\n  if (typeof uriA === 'string') {\n    uriA = unescape(uriA)\n    uriA = serialize(normalizeComponentEncoding(parse(uriA, options), true), { ...options, skipEscape: true })\n  } else if (typeof uriA === 'object') {\n    uriA = serialize(normalizeComponentEncoding(uriA, true), { ...options, skipEscape: true })\n  }\n\n  if (typeof uriB === 'string') {\n    uriB = unescape(uriB)\n    uriB = serialize(normalizeComponentEncoding(parse(uriB, options), true), { ...options, skipEscape: true })\n  } else if (typeof uriB === 'object') {\n    uriB = serialize(normalizeComponentEncoding(uriB, true), { ...options, skipEscape: true })\n  }\n\n  return uriA.toLowerCase() === uriB.toLowerCase()\n}\n\nfunction serialize (cmpts, opts) {\n  const components = {\n    host: cmpts.host,\n    scheme: cmpts.scheme,\n    userinfo: cmpts.userinfo,\n    port: cmpts.port,\n    path: cmpts.path,\n    query: cmpts.query,\n    nid: cmpts.nid,\n    nss: cmpts.nss,\n    uuid: cmpts.uuid,\n    fragment: cmpts.fragment,\n    reference: cmpts.reference,\n    resourceName: cmpts.resourceName,\n    secure: cmpts.secure,\n    error: ''\n  }\n  const options = Object.assign({}, opts)\n  const uriTokens = []\n\n  // find scheme handler\n  const schemeHandler = SCHEMES[(options.scheme || components.scheme || '').toLowerCase()]\n\n  // perform scheme specific serialization\n  if (schemeHandler && schemeHandler.serialize) schemeHandler.serialize(components, options)\n\n  if (components.path !== undefined) {\n    if (!options.skipEscape) {\n      components.path = escape(components.path)\n\n      if (components.scheme !== undefined) {\n        components.path = components.path.split('%3A').join(':')\n      }\n    } else {\n      components.path = unescape(components.path)\n    }\n  }\n\n  if (options.reference !== 'suffix' && components.scheme) {\n    uriTokens.push(components.scheme, ':')\n  }\n\n  const authority = recomposeAuthority(components, options)\n  if (authority !== undefined) {\n    if (options.reference !== 'suffix') {\n      uriTokens.push('//')\n    }\n\n    uriTokens.push(authority)\n\n    if (components.path && components.path.charAt(0) !== '/') {\n      uriTokens.push('/')\n    }\n  }\n  if (components.path !== undefined) {\n    let s = components.path\n\n    if (!options.absolutePath && (!schemeHandler || !schemeHandler.absolutePath)) {\n      s = removeDotSegments(s)\n    }\n\n    if (authority === undefined) {\n      s = s.replace(/^\\/\\//u, '/%2F') // don't allow the path to start with \"//\"\n    }\n\n    uriTokens.push(s)\n  }\n\n  if (components.query !== undefined) {\n    uriTokens.push('?', components.query)\n  }\n\n  if (components.fragment !== undefined) {\n    uriTokens.push('#', components.fragment)\n  }\n  return uriTokens.join('')\n}\n\nconst hexLookUp = Array.from({ length: 127 }, (v, k) => /[^!\"$&'()*+,\\-.;=_`a-z{}~]/u.test(String.fromCharCode(k)))\n\nfunction nonSimpleDomain (value) {\n  let code = 0\n  for (let i = 0, len = value.length; i < len; ++i) {\n    code = value.charCodeAt(i)\n    if (code > 126 || hexLookUp[code]) {\n      return true\n    }\n  }\n  return false\n}\n\nconst URI_PARSE = /^(?:([^#/:?]+):)?(?:\\/\\/((?:([^#/?@]*)@)?(\\[[^#/?\\]]+\\]|[^#/:?]*)(?::(\\d*))?))?([^#?]*)(?:\\?([^#]*))?(?:#((?:.|[\\n\\r])*))?/u\n\nfunction parse (uri, opts) {\n  const options = Object.assign({}, opts)\n  const parsed = {\n    scheme: undefined,\n    userinfo: undefined,\n    host: '',\n    port: undefined,\n    path: '',\n    query: undefined,\n    fragment: undefined\n  }\n  const gotEncoding = uri.indexOf('%') !== -1\n  let isIP = false\n  if (options.reference === 'suffix') uri = (options.scheme ? options.scheme + ':' : '') + '//' + uri\n\n  const matches = uri.match(URI_PARSE)\n\n  if (matches) {\n    // store each component\n    parsed.scheme = matches[1]\n    parsed.userinfo = matches[3]\n    parsed.host = matches[4]\n    parsed.port = parseInt(matches[5], 10)\n    parsed.path = matches[6] || ''\n    parsed.query = matches[7]\n    parsed.fragment = matches[8]\n\n    // fix port number\n    if (isNaN(parsed.port)) {\n      parsed.port = matches[5]\n    }\n    if (parsed.host) {\n      const ipv4result = normalizeIPv4(parsed.host)\n      if (ipv4result.isIPV4 === false) {\n        const ipv6result = normalizeIPv6(ipv4result.host, { isIPV4: false })\n        parsed.host = ipv6result.host.toLowerCase()\n        isIP = ipv6result.isIPV6\n      } else {\n        parsed.host = ipv4result.host\n        isIP = true\n      }\n    }\n    if (parsed.scheme === undefined && parsed.userinfo === undefined && parsed.host === undefined && parsed.port === undefined && !parsed.path && parsed.query === undefined) {\n      parsed.reference = 'same-document'\n    } else if (parsed.scheme === undefined) {\n      parsed.reference = 'relative'\n    } else if (parsed.fragment === undefined) {\n      parsed.reference = 'absolute'\n    } else {\n      parsed.reference = 'uri'\n    }\n\n    // check for reference errors\n    if (options.reference && options.reference !== 'suffix' && options.reference !== parsed.reference) {\n      parsed.error = parsed.error || 'URI is not a ' + options.reference + ' reference.'\n    }\n\n    // find scheme handler\n    const schemeHandler = SCHEMES[(options.scheme || parsed.scheme || '').toLowerCase()]\n\n    // check if scheme can't handle IRIs\n    if (!options.unicodeSupport && (!schemeHandler || !schemeHandler.unicodeSupport)) {\n      // if host component is a domain name\n      if (parsed.host && (options.domainHost || (schemeHandler && schemeHandler.domainHost)) && isIP === false && nonSimpleDomain(parsed.host)) {\n        // convert Unicode IDN -> ASCII IDN\n        try {\n          parsed.host = URL.domainToASCII(parsed.host.toLowerCase())\n        } catch (e) {\n          parsed.error = parsed.error || \"Host's domain name can not be converted to ASCII: \" + e\n        }\n      }\n      // convert IRI -> URI\n    }\n\n    if (!schemeHandler || (schemeHandler && !schemeHandler.skipNormalize)) {\n      if (gotEncoding && parsed.scheme !== undefined) {\n        parsed.scheme = unescape(parsed.scheme)\n      }\n      if (gotEncoding && parsed.host !== undefined) {\n        parsed.host = unescape(parsed.host)\n      }\n      if (parsed.path !== undefined && parsed.path.length) {\n        parsed.path = escape(unescape(parsed.path))\n      }\n      if (parsed.fragment !== undefined && parsed.fragment.length) {\n        parsed.fragment = encodeURI(decodeURIComponent(parsed.fragment))\n      }\n    }\n\n    // perform scheme specific parsing\n    if (schemeHandler && schemeHandler.parse) {\n      schemeHandler.parse(parsed, options)\n    }\n  } else {\n    parsed.error = parsed.error || 'URI can not be parsed.'\n  }\n  return parsed\n}\n\nconst fastUri = {\n  SCHEMES,\n  normalize,\n  resolve,\n  resolveComponents,\n  equal,\n  serialize,\n  parse\n}\n\nmodule.exports = fastUri\nmodule.exports.default = fastUri\nmodule.exports.fastUri = fastUri\n", "import * as uri from \"fast-uri\"\n\ntype URI = typeof uri & {code: string}\n;(uri as URI).code = 'require(\"ajv/dist/runtime/uri\").default'\n\nexport default uri as URI\n", "export {\n  Format,\n  FormatDefinition,\n  AsyncFormatDefinition,\n  KeywordDefinition,\n  KeywordErrorDefinition,\n  CodeKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n  Vocabulary,\n  Schema,\n  SchemaObject,\n  AnySchemaObject,\n  AsyncSchema,\n  AnySchema,\n  ValidateFunction,\n  AsyncValidateFunction,\n  AnyValidateFunction,\n  ErrorObject,\n  ErrorNoParams,\n} from \"./types\"\n\nexport {SchemaCxt, SchemaObjCxt} from \"./compile\"\nexport interface Plugin<Opts> {\n  (ajv: Ajv, options?: Opts): Ajv\n  [prop: string]: any\n}\n\nexport {KeywordCxt} from \"./compile/validate\"\nexport {DefinedError} from \"./vocabularies/errors\"\nexport {JSONType} from \"./compile/rules\"\nexport {JSONSchemaType} from \"./types/json-schema\"\nexport {JTDSchemaType, SomeJTDSchemaType, JTDDataType} from \"./types/jtd-schema\"\nexport {_, str, stringify, nil, Name, Code, CodeGen, CodeGenOptions} from \"./compile/codegen\"\n\nimport type {\n  Schema,\n  AnySchema,\n  AnySchemaObject,\n  SchemaObject,\n  AsyncSchema,\n  Vocabulary,\n  KeywordDefinition,\n  AddedKeywordDefinition,\n  AnyValidateFunction,\n  ValidateFunction,\n  AsyncValidateFunction,\n  ErrorObject,\n  Format,\n  AddedFormat,\n  RegExpEngine,\n  UriResolver,\n} from \"./types\"\nimport type {JSONSchemaType} from \"./types/json-schema\"\nimport type {JTDSchemaType, SomeJTDSchemaType, JTDDataType} from \"./types/jtd-schema\"\nimport ValidationError from \"./runtime/validation_error\"\nimport MissingRefError from \"./compile/ref_error\"\nimport {getRules, ValidationRules, Rule, RuleGroup, JSONType} from \"./compile/rules\"\nimport {SchemaEnv, compileSchema, resolveSchema} from \"./compile\"\nimport {Code, ValueScope} from \"./compile/codegen\"\nimport {normalizeId, getSchemaRefs} from \"./compile/resolve\"\nimport {getJSONTypes} from \"./compile/validate/dataType\"\nimport {eachItem} from \"./compile/util\"\nimport * as $dataRefSchema from \"./refs/data.json\"\n\nimport DefaultUriResolver from \"./runtime/uri\"\n\nconst defaultRegExp: RegExpEngine = (str, flags) => new RegExp(str, flags)\ndefaultRegExp.code = \"new RegExp\"\n\nconst META_IGNORE_OPTIONS: (keyof Options)[] = [\"removeAdditional\", \"useDefaults\", \"coerceTypes\"]\nconst EXT_SCOPE_NAMES = new Set([\n  \"validate\",\n  \"serialize\",\n  \"parse\",\n  \"wrapper\",\n  \"root\",\n  \"schema\",\n  \"keyword\",\n  \"pattern\",\n  \"formats\",\n  \"validate$data\",\n  \"func\",\n  \"obj\",\n  \"Error\",\n])\n\nexport type Options = CurrentOptions & DeprecatedOptions\n\nexport interface CurrentOptions {\n  // strict mode options (NEW)\n  strict?: boolean | \"log\"\n  strictSchema?: boolean | \"log\"\n  strictNumbers?: boolean | \"log\"\n  strictTypes?: boolean | \"log\"\n  strictTuples?: boolean | \"log\"\n  strictRequired?: boolean | \"log\"\n  allowMatchingProperties?: boolean // disables a strict mode restriction\n  allowUnionTypes?: boolean\n  validateFormats?: boolean\n  // validation and reporting options:\n  $data?: boolean\n  allErrors?: boolean\n  verbose?: boolean\n  discriminator?: boolean\n  unicodeRegExp?: boolean\n  timestamp?: \"string\" | \"date\" // JTD only\n  parseDate?: boolean // JTD only\n  allowDate?: boolean // JTD only\n  $comment?:\n    | true\n    | ((comment: string, schemaPath?: string, rootSchema?: AnySchemaObject) => unknown)\n  formats?: {[Name in string]?: Format}\n  keywords?: Vocabulary\n  schemas?: AnySchema[] | {[Key in string]?: AnySchema}\n  logger?: Logger | false\n  loadSchema?: (uri: string) => Promise<AnySchemaObject>\n  // options to modify validated data:\n  removeAdditional?: boolean | \"all\" | \"failing\"\n  useDefaults?: boolean | \"empty\"\n  coerceTypes?: boolean | \"array\"\n  // advanced options:\n  next?: boolean // NEW\n  unevaluated?: boolean // NEW\n  dynamicRef?: boolean // NEW\n  schemaId?: \"id\" | \"$id\"\n  jtd?: boolean // NEW\n  meta?: SchemaObject | boolean\n  defaultMeta?: string | AnySchemaObject\n  validateSchema?: boolean | \"log\"\n  addUsedSchema?: boolean\n  inlineRefs?: boolean | number\n  passContext?: boolean\n  loopRequired?: number\n  loopEnum?: number // NEW\n  ownProperties?: boolean\n  multipleOfPrecision?: number\n  int32range?: boolean // JTD only\n  messages?: boolean\n  code?: CodeOptions // NEW\n  uriResolver?: UriResolver\n}\n\nexport interface CodeOptions {\n  es5?: boolean\n  esm?: boolean\n  lines?: boolean\n  optimize?: boolean | number\n  formats?: Code // code to require (or construct) map of available formats - for standalone code\n  source?: boolean\n  process?: (code: string, schema?: SchemaEnv) => string\n  regExp?: RegExpEngine\n}\n\ninterface InstanceCodeOptions extends CodeOptions {\n  regExp: RegExpEngine\n  optimize: number\n}\n\ninterface DeprecatedOptions {\n  /** @deprecated */\n  ignoreKeywordsWithRef?: boolean\n  /** @deprecated */\n  jsPropertySyntax?: boolean // added instead of jsonPointers\n  /** @deprecated */\n  unicode?: boolean\n}\n\ninterface RemovedOptions {\n  format?: boolean\n  errorDataPath?: \"object\" | \"property\"\n  nullable?: boolean // \"nullable\" keyword is supported by default\n  jsonPointers?: boolean\n  extendRefs?: true | \"ignore\" | \"fail\"\n  missingRefs?: true | \"ignore\" | \"fail\"\n  processCode?: (code: string, schema?: SchemaEnv) => string\n  sourceCode?: boolean\n  strictDefaults?: boolean\n  strictKeywords?: boolean\n  uniqueItems?: boolean\n  unknownFormats?: true | string[] | \"ignore\"\n  cache?: any\n  serialize?: (schema: AnySchema) => unknown\n  ajvErrors?: boolean\n}\n\ntype OptionsInfo<T extends RemovedOptions | DeprecatedOptions> = {\n  [K in keyof T]-?: string | undefined\n}\n\nconst removedOptions: OptionsInfo<RemovedOptions> = {\n  errorDataPath: \"\",\n  format: \"`validateFormats: false` can be used instead.\",\n  nullable: '\"nullable\" keyword is supported by default.',\n  jsonPointers: \"Deprecated jsPropertySyntax can be used instead.\",\n  extendRefs: \"Deprecated ignoreKeywordsWithRef can be used instead.\",\n  missingRefs: \"Pass empty schema with $id that should be ignored to ajv.addSchema.\",\n  processCode: \"Use option `code: {process: (code, schemaEnv: object) => string}`\",\n  sourceCode: \"Use option `code: {source: true}`\",\n  strictDefaults: \"It is default now, see option `strict`.\",\n  strictKeywords: \"It is default now, see option `strict`.\",\n  uniqueItems: '\"uniqueItems\" keyword is always validated.',\n  unknownFormats: \"Disable strict mode or pass `true` to `ajv.addFormat` (or `formats` option).\",\n  cache: \"Map is used as cache, schema object as key.\",\n  serialize: \"Map is used as cache, schema object as key.\",\n  ajvErrors: \"It is default now.\",\n}\n\nconst deprecatedOptions: OptionsInfo<DeprecatedOptions> = {\n  ignoreKeywordsWithRef: \"\",\n  jsPropertySyntax: \"\",\n  unicode: '\"minLength\"/\"maxLength\" account for unicode characters by default.',\n}\n\ntype RequiredInstanceOptions = {\n  [K in\n    | \"strictSchema\"\n    | \"strictNumbers\"\n    | \"strictTypes\"\n    | \"strictTuples\"\n    | \"strictRequired\"\n    | \"inlineRefs\"\n    | \"loopRequired\"\n    | \"loopEnum\"\n    | \"meta\"\n    | \"messages\"\n    | \"schemaId\"\n    | \"addUsedSchema\"\n    | \"validateSchema\"\n    | \"validateFormats\"\n    | \"int32range\"\n    | \"unicodeRegExp\"\n    | \"uriResolver\"]: NonNullable<Options[K]>\n} & {code: InstanceCodeOptions}\n\nexport type InstanceOptions = Options & RequiredInstanceOptions\n\nconst MAX_EXPRESSION = 200\n\n// eslint-disable-next-line complexity\nfunction requiredOptions(o: Options): RequiredInstanceOptions {\n  const s = o.strict\n  const _optz = o.code?.optimize\n  const optimize = _optz === true || _optz === undefined ? 1 : _optz || 0\n  const regExp = o.code?.regExp ?? defaultRegExp\n  const uriResolver = o.uriResolver ?? DefaultUriResolver\n  return {\n    strictSchema: o.strictSchema ?? s ?? true,\n    strictNumbers: o.strictNumbers ?? s ?? true,\n    strictTypes: o.strictTypes ?? s ?? \"log\",\n    strictTuples: o.strictTuples ?? s ?? \"log\",\n    strictRequired: o.strictRequired ?? s ?? false,\n    code: o.code ? {...o.code, optimize, regExp} : {optimize, regExp},\n    loopRequired: o.loopRequired ?? MAX_EXPRESSION,\n    loopEnum: o.loopEnum ?? MAX_EXPRESSION,\n    meta: o.meta ?? true,\n    messages: o.messages ?? true,\n    inlineRefs: o.inlineRefs ?? true,\n    schemaId: o.schemaId ?? \"$id\",\n    addUsedSchema: o.addUsedSchema ?? true,\n    validateSchema: o.validateSchema ?? true,\n    validateFormats: o.validateFormats ?? true,\n    unicodeRegExp: o.unicodeRegExp ?? true,\n    int32range: o.int32range ?? true,\n    uriResolver: uriResolver,\n  }\n}\n\nexport interface Logger {\n  log(...args: unknown[]): unknown\n  warn(...args: unknown[]): unknown\n  error(...args: unknown[]): unknown\n}\n\nexport default class Ajv {\n  opts: InstanceOptions\n  errors?: ErrorObject[] | null // errors from the last validation\n  logger: Logger\n  // shared external scope values for compiled functions\n  readonly scope: ValueScope\n  readonly schemas: {[Key in string]?: SchemaEnv} = {}\n  readonly refs: {[Ref in string]?: SchemaEnv | string} = {}\n  readonly formats: {[Name in string]?: AddedFormat} = {}\n  readonly RULES: ValidationRules\n  readonly _compilations: Set<SchemaEnv> = new Set()\n  private readonly _loading: {[Ref in string]?: Promise<AnySchemaObject>} = {}\n  private readonly _cache: Map<AnySchema, SchemaEnv> = new Map()\n  private readonly _metaOpts: InstanceOptions\n\n  static ValidationError = ValidationError\n  static MissingRefError = MissingRefError\n\n  constructor(opts: Options = {}) {\n    opts = this.opts = {...opts, ...requiredOptions(opts)}\n    const {es5, lines} = this.opts.code\n\n    this.scope = new ValueScope({scope: {}, prefixes: EXT_SCOPE_NAMES, es5, lines})\n    this.logger = getLogger(opts.logger)\n    const formatOpt = opts.validateFormats\n    opts.validateFormats = false\n\n    this.RULES = getRules()\n    checkOptions.call(this, removedOptions, opts, \"NOT SUPPORTED\")\n    checkOptions.call(this, deprecatedOptions, opts, \"DEPRECATED\", \"warn\")\n    this._metaOpts = getMetaSchemaOptions.call(this)\n\n    if (opts.formats) addInitialFormats.call(this)\n    this._addVocabularies()\n    this._addDefaultMetaSchema()\n    if (opts.keywords) addInitialKeywords.call(this, opts.keywords)\n    if (typeof opts.meta == \"object\") this.addMetaSchema(opts.meta)\n    addInitialSchemas.call(this)\n    opts.validateFormats = formatOpt\n  }\n\n  _addVocabularies(): void {\n    this.addKeyword(\"$async\")\n  }\n\n  _addDefaultMetaSchema(): void {\n    const {$data, meta, schemaId} = this.opts\n    let _dataRefSchema: SchemaObject = $dataRefSchema\n    if (schemaId === \"id\") {\n      _dataRefSchema = {...$dataRefSchema}\n      _dataRefSchema.id = _dataRefSchema.$id\n      delete _dataRefSchema.$id\n    }\n    if (meta && $data) this.addMetaSchema(_dataRefSchema, _dataRefSchema[schemaId], false)\n  }\n\n  defaultMeta(): string | AnySchemaObject | undefined {\n    const {meta, schemaId} = this.opts\n    return (this.opts.defaultMeta = typeof meta == \"object\" ? meta[schemaId] || meta : undefined)\n  }\n\n  // Validate data using schema\n  // AnySchema will be compiled and cached using schema itself as a key for Map\n  validate(schema: Schema | string, data: unknown): boolean\n  validate(schemaKeyRef: AnySchema | string, data: unknown): boolean | Promise<unknown>\n  validate<T>(schema: Schema | JSONSchemaType<T> | string, data: unknown): data is T\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  validate<T>(schema: JTDSchemaType<T>, data: unknown): data is T\n  // This overload is only intended for typescript inference, the first\n  // argument prevents manual type annotation from matching this overload\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  validate<N extends never, T extends SomeJTDSchemaType>(\n    schema: T,\n    data: unknown\n  ): data is JTDDataType<T>\n  // eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\n  validate<T>(schema: AsyncSchema, data: unknown | T): Promise<T>\n  validate<T>(schemaKeyRef: AnySchema | string, data: unknown): data is T | Promise<T>\n  validate<T>(\n    schemaKeyRef: AnySchema | string, // key, ref or schema object\n    // eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\n    data: unknown | T // to be validated\n  ): boolean | Promise<T> {\n    let v: AnyValidateFunction | undefined\n    if (typeof schemaKeyRef == \"string\") {\n      v = this.getSchema<T>(schemaKeyRef)\n      if (!v) throw new Error(`no schema with key or ref \"${schemaKeyRef}\"`)\n    } else {\n      v = this.compile<T>(schemaKeyRef)\n    }\n\n    const valid = v(data)\n    if (!(\"$async\" in v)) this.errors = v.errors\n    return valid\n  }\n\n  // Create validation function for passed schema\n  // _meta: true if schema is a meta-schema. Used internally to compile meta schemas of user-defined keywords.\n  compile<T = unknown>(schema: Schema | JSONSchemaType<T>, _meta?: boolean): ValidateFunction<T>\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compile<T = unknown>(schema: JTDSchemaType<T>, _meta?: boolean): ValidateFunction<T>\n  // This overload is only intended for typescript inference, the first\n  // argument prevents manual type annotation from matching this overload\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  compile<N extends never, T extends SomeJTDSchemaType>(\n    schema: T,\n    _meta?: boolean\n  ): ValidateFunction<JTDDataType<T>>\n  compile<T = unknown>(schema: AsyncSchema, _meta?: boolean): AsyncValidateFunction<T>\n  compile<T = unknown>(schema: AnySchema, _meta?: boolean): AnyValidateFunction<T>\n  compile<T = unknown>(schema: AnySchema, _meta?: boolean): AnyValidateFunction<T> {\n    const sch = this._addSchema(schema, _meta)\n    return (sch.validate || this._compileSchemaEnv(sch)) as AnyValidateFunction<T>\n  }\n\n  // Creates validating function for passed schema with asynchronous loading of missing schemas.\n  // `loadSchema` option should be a function that accepts schema uri and returns promise that resolves with the schema.\n  // TODO allow passing schema URI\n  // meta - optional true to compile meta-schema\n  compileAsync<T = unknown>(\n    schema: SchemaObject | JSONSchemaType<T>,\n    _meta?: boolean\n  ): Promise<ValidateFunction<T>>\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compileAsync<T = unknown>(schema: JTDSchemaType<T>, _meta?: boolean): Promise<ValidateFunction<T>>\n  compileAsync<T = unknown>(schema: AsyncSchema, meta?: boolean): Promise<AsyncValidateFunction<T>>\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compileAsync<T = unknown>(\n    schema: AnySchemaObject,\n    meta?: boolean\n  ): Promise<AnyValidateFunction<T>>\n  compileAsync<T = unknown>(\n    schema: AnySchemaObject,\n    meta?: boolean\n  ): Promise<AnyValidateFunction<T>> {\n    if (typeof this.opts.loadSchema != \"function\") {\n      throw new Error(\"options.loadSchema should be a function\")\n    }\n    const {loadSchema} = this.opts\n    return runCompileAsync.call(this, schema, meta)\n\n    async function runCompileAsync(\n      this: Ajv,\n      _schema: AnySchemaObject,\n      _meta?: boolean\n    ): Promise<AnyValidateFunction> {\n      await loadMetaSchema.call(this, _schema.$schema)\n      const sch = this._addSchema(_schema, _meta)\n      return sch.validate || _compileAsync.call(this, sch)\n    }\n\n    async function loadMetaSchema(this: Ajv, $ref?: string): Promise<void> {\n      if ($ref && !this.getSchema($ref)) {\n        await runCompileAsync.call(this, {$ref}, true)\n      }\n    }\n\n    async function _compileAsync(this: Ajv, sch: SchemaEnv): Promise<AnyValidateFunction> {\n      try {\n        return this._compileSchemaEnv(sch)\n      } catch (e) {\n        if (!(e instanceof MissingRefError)) throw e\n        checkLoaded.call(this, e)\n        await loadMissingSchema.call(this, e.missingSchema)\n        return _compileAsync.call(this, sch)\n      }\n    }\n\n    function checkLoaded(this: Ajv, {missingSchema: ref, missingRef}: MissingRefError): void {\n      if (this.refs[ref]) {\n        throw new Error(`AnySchema ${ref} is loaded but ${missingRef} cannot be resolved`)\n      }\n    }\n\n    async function loadMissingSchema(this: Ajv, ref: string): Promise<void> {\n      const _schema = await _loadSchema.call(this, ref)\n      if (!this.refs[ref]) await loadMetaSchema.call(this, _schema.$schema)\n      if (!this.refs[ref]) this.addSchema(_schema, ref, meta)\n    }\n\n    async function _loadSchema(this: Ajv, ref: string): Promise<AnySchemaObject> {\n      const p = this._loading[ref]\n      if (p) return p\n      try {\n        return await (this._loading[ref] = loadSchema(ref))\n      } finally {\n        delete this._loading[ref]\n      }\n    }\n  }\n\n  // Adds schema to the instance\n  addSchema(\n    schema: AnySchema | AnySchema[], // If array is passed, `key` will be ignored\n    key?: string, // Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.\n    _meta?: boolean, // true if schema is a meta-schema. Used internally, addMetaSchema should be used instead.\n    _validateSchema = this.opts.validateSchema // false to skip schema validation. Used internally, option validateSchema should be used instead.\n  ): Ajv {\n    if (Array.isArray(schema)) {\n      for (const sch of schema) this.addSchema(sch, undefined, _meta, _validateSchema)\n      return this\n    }\n    let id: string | undefined\n    if (typeof schema === \"object\") {\n      const {schemaId} = this.opts\n      id = schema[schemaId]\n      if (id !== undefined && typeof id != \"string\") {\n        throw new Error(`schema ${schemaId} must be string`)\n      }\n    }\n    key = normalizeId(key || id)\n    this._checkUnique(key)\n    this.schemas[key] = this._addSchema(schema, _meta, key, _validateSchema, true)\n    return this\n  }\n\n  // Add schema that will be used to validate other schemas\n  // options in META_IGNORE_OPTIONS are alway set to false\n  addMetaSchema(\n    schema: AnySchemaObject,\n    key?: string, // schema key\n    _validateSchema = this.opts.validateSchema // false to skip schema validation, can be used to override validateSchema option for meta-schema\n  ): Ajv {\n    this.addSchema(schema, key, true, _validateSchema)\n    return this\n  }\n\n  //  Validate schema against its meta-schema\n  validateSchema(schema: AnySchema, throwOrLogError?: boolean): boolean | Promise<unknown> {\n    if (typeof schema == \"boolean\") return true\n    let $schema: string | AnySchemaObject | undefined\n    $schema = schema.$schema\n    if ($schema !== undefined && typeof $schema != \"string\") {\n      throw new Error(\"$schema must be a string\")\n    }\n    $schema = $schema || this.opts.defaultMeta || this.defaultMeta()\n    if (!$schema) {\n      this.logger.warn(\"meta-schema not available\")\n      this.errors = null\n      return true\n    }\n    const valid = this.validate($schema, schema)\n    if (!valid && throwOrLogError) {\n      const message = \"schema is invalid: \" + this.errorsText()\n      if (this.opts.validateSchema === \"log\") this.logger.error(message)\n      else throw new Error(message)\n    }\n    return valid\n  }\n\n  // Get compiled schema by `key` or `ref`.\n  // (`key` that was passed to `addSchema` or full schema reference - `schema.$id` or resolved id)\n  getSchema<T = unknown>(keyRef: string): AnyValidateFunction<T> | undefined {\n    let sch\n    while (typeof (sch = getSchEnv.call(this, keyRef)) == \"string\") keyRef = sch\n    if (sch === undefined) {\n      const {schemaId} = this.opts\n      const root = new SchemaEnv({schema: {}, schemaId})\n      sch = resolveSchema.call(this, root, keyRef)\n      if (!sch) return\n      this.refs[keyRef] = sch\n    }\n    return (sch.validate || this._compileSchemaEnv(sch)) as AnyValidateFunction<T> | undefined\n  }\n\n  // Remove cached schema(s).\n  // If no parameter is passed all schemas but meta-schemas are removed.\n  // If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.\n  // Even if schema is referenced by other schemas it still can be removed as other schemas have local references.\n  removeSchema(schemaKeyRef?: AnySchema | string | RegExp): Ajv {\n    if (schemaKeyRef instanceof RegExp) {\n      this._removeAllSchemas(this.schemas, schemaKeyRef)\n      this._removeAllSchemas(this.refs, schemaKeyRef)\n      return this\n    }\n    switch (typeof schemaKeyRef) {\n      case \"undefined\":\n        this._removeAllSchemas(this.schemas)\n        this._removeAllSchemas(this.refs)\n        this._cache.clear()\n        return this\n      case \"string\": {\n        const sch = getSchEnv.call(this, schemaKeyRef)\n        if (typeof sch == \"object\") this._cache.delete(sch.schema)\n        delete this.schemas[schemaKeyRef]\n        delete this.refs[schemaKeyRef]\n        return this\n      }\n      case \"object\": {\n        const cacheKey = schemaKeyRef\n        this._cache.delete(cacheKey)\n        let id = schemaKeyRef[this.opts.schemaId]\n        if (id) {\n          id = normalizeId(id)\n          delete this.schemas[id]\n          delete this.refs[id]\n        }\n        return this\n      }\n      default:\n        throw new Error(\"ajv.removeSchema: invalid parameter\")\n    }\n  }\n\n  // add \"vocabulary\" - a collection of keywords\n  addVocabulary(definitions: Vocabulary): Ajv {\n    for (const def of definitions) this.addKeyword(def)\n    return this\n  }\n\n  addKeyword(\n    kwdOrDef: string | KeywordDefinition,\n    def?: KeywordDefinition // deprecated\n  ): Ajv {\n    let keyword: string | string[]\n    if (typeof kwdOrDef == \"string\") {\n      keyword = kwdOrDef\n      if (typeof def == \"object\") {\n        this.logger.warn(\"these parameters are deprecated, see docs for addKeyword\")\n        def.keyword = keyword\n      }\n    } else if (typeof kwdOrDef == \"object\" && def === undefined) {\n      def = kwdOrDef\n      keyword = def.keyword\n      if (Array.isArray(keyword) && !keyword.length) {\n        throw new Error(\"addKeywords: keyword must be string or non-empty array\")\n      }\n    } else {\n      throw new Error(\"invalid addKeywords parameters\")\n    }\n\n    checkKeyword.call(this, keyword, def)\n    if (!def) {\n      eachItem(keyword, (kwd) => addRule.call(this, kwd))\n      return this\n    }\n    keywordMetaschema.call(this, def)\n    const definition: AddedKeywordDefinition = {\n      ...def,\n      type: getJSONTypes(def.type),\n      schemaType: getJSONTypes(def.schemaType),\n    }\n    eachItem(\n      keyword,\n      definition.type.length === 0\n        ? (k) => addRule.call(this, k, definition)\n        : (k) => definition.type.forEach((t) => addRule.call(this, k, definition, t))\n    )\n    return this\n  }\n\n  getKeyword(keyword: string): AddedKeywordDefinition | boolean {\n    const rule = this.RULES.all[keyword]\n    return typeof rule == \"object\" ? rule.definition : !!rule\n  }\n\n  // Remove keyword\n  removeKeyword(keyword: string): Ajv {\n    // TODO return type should be Ajv\n    const {RULES} = this\n    delete RULES.keywords[keyword]\n    delete RULES.all[keyword]\n    for (const group of RULES.rules) {\n      const i = group.rules.findIndex((rule) => rule.keyword === keyword)\n      if (i >= 0) group.rules.splice(i, 1)\n    }\n    return this\n  }\n\n  // Add format\n  addFormat(name: string, format: Format): Ajv {\n    if (typeof format == \"string\") format = new RegExp(format)\n    this.formats[name] = format\n    return this\n  }\n\n  errorsText(\n    errors: ErrorObject[] | null | undefined = this.errors, // optional array of validation errors\n    {separator = \", \", dataVar = \"data\"}: ErrorsTextOptions = {} // optional options with properties `separator` and `dataVar`\n  ): string {\n    if (!errors || errors.length === 0) return \"No errors\"\n    return errors\n      .map((e) => `${dataVar}${e.instancePath} ${e.message}`)\n      .reduce((text, msg) => text + separator + msg)\n  }\n\n  $dataMetaSchema(metaSchema: AnySchemaObject, keywordsJsonPointers: string[]): AnySchemaObject {\n    const rules = this.RULES.all\n    metaSchema = JSON.parse(JSON.stringify(metaSchema))\n    for (const jsonPointer of keywordsJsonPointers) {\n      const segments = jsonPointer.split(\"/\").slice(1) // first segment is an empty string\n      let keywords = metaSchema\n      for (const seg of segments) keywords = keywords[seg] as AnySchemaObject\n\n      for (const key in rules) {\n        const rule = rules[key]\n        if (typeof rule != \"object\") continue\n        const {$data} = rule.definition\n        const schema = keywords[key] as AnySchemaObject | undefined\n        if ($data && schema) keywords[key] = schemaOrData(schema)\n      }\n    }\n\n    return metaSchema\n  }\n\n  private _removeAllSchemas(schemas: {[Ref in string]?: SchemaEnv | string}, regex?: RegExp): void {\n    for (const keyRef in schemas) {\n      const sch = schemas[keyRef]\n      if (!regex || regex.test(keyRef)) {\n        if (typeof sch == \"string\") {\n          delete schemas[keyRef]\n        } else if (sch && !sch.meta) {\n          this._cache.delete(sch.schema)\n          delete schemas[keyRef]\n        }\n      }\n    }\n  }\n\n  _addSchema(\n    schema: AnySchema,\n    meta?: boolean,\n    baseId?: string,\n    validateSchema = this.opts.validateSchema,\n    addSchema = this.opts.addUsedSchema\n  ): SchemaEnv {\n    let id: string | undefined\n    const {schemaId} = this.opts\n    if (typeof schema == \"object\") {\n      id = schema[schemaId]\n    } else {\n      if (this.opts.jtd) throw new Error(\"schema must be object\")\n      else if (typeof schema != \"boolean\") throw new Error(\"schema must be object or boolean\")\n    }\n    let sch = this._cache.get(schema)\n    if (sch !== undefined) return sch\n\n    baseId = normalizeId(id || baseId)\n    const localRefs = getSchemaRefs.call(this, schema, baseId)\n    sch = new SchemaEnv({schema, schemaId, meta, baseId, localRefs})\n    this._cache.set(sch.schema, sch)\n    if (addSchema && !baseId.startsWith(\"#\")) {\n      // TODO atm it is allowed to overwrite schemas without id (instead of not adding them)\n      if (baseId) this._checkUnique(baseId)\n      this.refs[baseId] = sch\n    }\n    if (validateSchema) this.validateSchema(schema, true)\n    return sch\n  }\n\n  private _checkUnique(id: string): void {\n    if (this.schemas[id] || this.refs[id]) {\n      throw new Error(`schema with key or id \"${id}\" already exists`)\n    }\n  }\n\n  private _compileSchemaEnv(sch: SchemaEnv): AnyValidateFunction {\n    if (sch.meta) this._compileMetaSchema(sch)\n    else compileSchema.call(this, sch)\n\n    /* istanbul ignore if */\n    if (!sch.validate) throw new Error(\"ajv implementation error\")\n    return sch.validate\n  }\n\n  private _compileMetaSchema(sch: SchemaEnv): void {\n    const currentOpts = this.opts\n    this.opts = this._metaOpts\n    try {\n      compileSchema.call(this, sch)\n    } finally {\n      this.opts = currentOpts\n    }\n  }\n}\n\nexport interface ErrorsTextOptions {\n  separator?: string\n  dataVar?: string\n}\n\nfunction checkOptions(\n  this: Ajv,\n  checkOpts: OptionsInfo<RemovedOptions | DeprecatedOptions>,\n  options: Options & RemovedOptions,\n  msg: string,\n  log: \"warn\" | \"error\" = \"error\"\n): void {\n  for (const key in checkOpts) {\n    const opt = key as keyof typeof checkOpts\n    if (opt in options) this.logger[log](`${msg}: option ${key}. ${checkOpts[opt]}`)\n  }\n}\n\nfunction getSchEnv(this: Ajv, keyRef: string): SchemaEnv | string | undefined {\n  keyRef = normalizeId(keyRef) // TODO tests fail without this line\n  return this.schemas[keyRef] || this.refs[keyRef]\n}\n\nfunction addInitialSchemas(this: Ajv): void {\n  const optsSchemas = this.opts.schemas\n  if (!optsSchemas) return\n  if (Array.isArray(optsSchemas)) this.addSchema(optsSchemas)\n  else for (const key in optsSchemas) this.addSchema(optsSchemas[key] as AnySchema, key)\n}\n\nfunction addInitialFormats(this: Ajv): void {\n  for (const name in this.opts.formats) {\n    const format = this.opts.formats[name]\n    if (format) this.addFormat(name, format)\n  }\n}\n\nfunction addInitialKeywords(\n  this: Ajv,\n  defs: Vocabulary | {[K in string]?: KeywordDefinition}\n): void {\n  if (Array.isArray(defs)) {\n    this.addVocabulary(defs)\n    return\n  }\n  this.logger.warn(\"keywords option as map is deprecated, pass array\")\n  for (const keyword in defs) {\n    const def = defs[keyword] as KeywordDefinition\n    if (!def.keyword) def.keyword = keyword\n    this.addKeyword(def)\n  }\n}\n\nfunction getMetaSchemaOptions(this: Ajv): InstanceOptions {\n  const metaOpts = {...this.opts}\n  for (const opt of META_IGNORE_OPTIONS) delete metaOpts[opt]\n  return metaOpts\n}\n\nconst noLogs = {log() {}, warn() {}, error() {}}\n\nfunction getLogger(logger?: Partial<Logger> | false): Logger {\n  if (logger === false) return noLogs\n  if (logger === undefined) return console\n  if (logger.log && logger.warn && logger.error) return logger as Logger\n  throw new Error(\"logger must implement log, warn and error methods\")\n}\n\nconst KEYWORD_NAME = /^[a-z_$][a-z0-9_$:-]*$/i\n\nfunction checkKeyword(this: Ajv, keyword: string | string[], def?: KeywordDefinition): void {\n  const {RULES} = this\n  eachItem(keyword, (kwd) => {\n    if (RULES.keywords[kwd]) throw new Error(`Keyword ${kwd} is already defined`)\n    if (!KEYWORD_NAME.test(kwd)) throw new Error(`Keyword ${kwd} has invalid name`)\n  })\n  if (!def) return\n  if (def.$data && !(\"code\" in def || \"validate\" in def)) {\n    throw new Error('$data keyword must have \"code\" or \"validate\" function')\n  }\n}\n\nfunction addRule(\n  this: Ajv,\n  keyword: string,\n  definition?: AddedKeywordDefinition,\n  dataType?: JSONType\n): void {\n  const post = definition?.post\n  if (dataType && post) throw new Error('keyword with \"post\" flag cannot have \"type\"')\n  const {RULES} = this\n  let ruleGroup = post ? RULES.post : RULES.rules.find(({type: t}) => t === dataType)\n  if (!ruleGroup) {\n    ruleGroup = {type: dataType, rules: []}\n    RULES.rules.push(ruleGroup)\n  }\n  RULES.keywords[keyword] = true\n  if (!definition) return\n\n  const rule: Rule = {\n    keyword,\n    definition: {\n      ...definition,\n      type: getJSONTypes(definition.type),\n      schemaType: getJSONTypes(definition.schemaType),\n    },\n  }\n  if (definition.before) addBeforeRule.call(this, ruleGroup, rule, definition.before)\n  else ruleGroup.rules.push(rule)\n  RULES.all[keyword] = rule\n  definition.implements?.forEach((kwd) => this.addKeyword(kwd))\n}\n\nfunction addBeforeRule(this: Ajv, ruleGroup: RuleGroup, rule: Rule, before: string): void {\n  const i = ruleGroup.rules.findIndex((_rule) => _rule.keyword === before)\n  if (i >= 0) {\n    ruleGroup.rules.splice(i, 0, rule)\n  } else {\n    ruleGroup.rules.push(rule)\n    this.logger.warn(`rule ${before} is not defined`)\n  }\n}\n\nfunction keywordMetaschema(this: Ajv, def: KeywordDefinition): void {\n  let {metaSchema} = def\n  if (metaSchema === undefined) return\n  if (def.$data && this.opts.$data) metaSchema = schemaOrData(metaSchema)\n  def.validateSchema = this.compile(metaSchema, true)\n}\n\nconst $dataRef = {\n  $ref: \"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#\",\n}\n\nfunction schemaOrData(schema: AnySchema): AnySchemaObject {\n  return {anyOf: [schema, $dataRef]}\n}\n", "import type {CodeKeywordDefinition} from \"../../types\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"id\",\n  code() {\n    throw new Error('NOT SUPPORTED: keyword \"id\", use \"$id\" for schema ID')\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport MissingRefError from \"../../compile/ref_error\"\nimport {callValidateCode} from \"../code\"\nimport {_, nil, stringify, Code, Name} from \"../../compile/codegen\"\nimport N from \"../../compile/names\"\nimport {SchemaEnv, resolveRef} from \"../../compile\"\nimport {mergeEvaluated} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"$ref\",\n  schemaType: \"string\",\n  code(cxt: KeywordCxt): void {\n    const {gen, schema: $ref, it} = cxt\n    const {baseId, schemaEnv: env, validateName, opts, self} = it\n    const {root} = env\n    if (($ref === \"#\" || $ref === \"#/\") && baseId === root.baseId) return callRootRef()\n    const schOrEnv = resolveRef.call(self, root, baseId, $ref)\n    if (schOrEnv === undefined) throw new MissingRefError(it.opts.uriResolver, baseId, $ref)\n    if (schOrEnv instanceof SchemaEnv) return callValidate(schOrEnv)\n    return inlineRefSchema(schOrEnv)\n\n    function callRootRef(): void {\n      if (env === root) return callRef(cxt, validateName, env, env.$async)\n      const rootName = gen.scopeValue(\"root\", {ref: root})\n      return callRef(cxt, _`${rootName}.validate`, root, root.$async)\n    }\n\n    function callValidate(sch: SchemaEnv): void {\n      const v = getValidate(cxt, sch)\n      callRef(cxt, v, sch, sch.$async)\n    }\n\n    function inlineRefSchema(sch: AnySchema): void {\n      const schName = gen.scopeValue(\n        \"schema\",\n        opts.code.source === true ? {ref: sch, code: stringify(sch)} : {ref: sch}\n      )\n      const valid = gen.name(\"valid\")\n      const schCxt = cxt.subschema(\n        {\n          schema: sch,\n          dataTypes: [],\n          schemaPath: nil,\n          topSchemaRef: schName,\n          errSchemaPath: $ref,\n        },\n        valid\n      )\n      cxt.mergeEvaluated(schCxt)\n      cxt.ok(valid)\n    }\n  },\n}\n\nexport function getValidate(cxt: KeywordCxt, sch: SchemaEnv): Code {\n  const {gen} = cxt\n  return sch.validate\n    ? gen.scopeValue(\"validate\", {ref: sch.validate})\n    : _`${gen.scopeValue(\"wrapper\", {ref: sch})}.validate`\n}\n\nexport function callRef(cxt: KeywordCxt, v: Code, sch?: SchemaEnv, $async?: boolean): void {\n  const {gen, it} = cxt\n  const {allErrors, schemaEnv: env, opts} = it\n  const passCxt = opts.passContext ? N.this : nil\n  if ($async) callAsyncRef()\n  else callSyncRef()\n\n  function callAsyncRef(): void {\n    if (!env.$async) throw new Error(\"async schema referenced by sync schema\")\n    const valid = gen.let(\"valid\")\n    gen.try(\n      () => {\n        gen.code(_`await ${callValidateCode(cxt, v, passCxt)}`)\n        addEvaluatedFrom(v) // TODO will not work with async, it has to be returned with the result\n        if (!allErrors) gen.assign(valid, true)\n      },\n      (e) => {\n        gen.if(_`!(${e} instanceof ${it.ValidationError as Name})`, () => gen.throw(e))\n        addErrorsFrom(e)\n        if (!allErrors) gen.assign(valid, false)\n      }\n    )\n    cxt.ok(valid)\n  }\n\n  function callSyncRef(): void {\n    cxt.result(\n      callValidateCode(cxt, v, passCxt),\n      () => addEvaluatedFrom(v),\n      () => addErrorsFrom(v)\n    )\n  }\n\n  function addErrorsFrom(source: Code): void {\n    const errs = _`${source}.errors`\n    gen.assign(N.vErrors, _`${N.vErrors} === null ? ${errs} : ${N.vErrors}.concat(${errs})`) // TODO tagged\n    gen.assign(N.errors, _`${N.vErrors}.length`)\n  }\n\n  function addEvaluatedFrom(source: Code): void {\n    if (!it.opts.unevaluated) return\n    const schEvaluated = sch?.validate?.evaluated\n    // TODO refactor\n    if (it.props !== true) {\n      if (schEvaluated && !schEvaluated.dynamicProps) {\n        if (schEvaluated.props !== undefined) {\n          it.props = mergeEvaluated.props(gen, schEvaluated.props, it.props)\n        }\n      } else {\n        const props = gen.var(\"props\", _`${source}.evaluated.props`)\n        it.props = mergeEvaluated.props(gen, props, it.props, Name)\n      }\n    }\n    if (it.items !== true) {\n      if (schEvaluated && !schEvaluated.dynamicItems) {\n        if (schEvaluated.items !== undefined) {\n          it.items = mergeEvaluated.items(gen, schEvaluated.items, it.items)\n        }\n      } else {\n        const items = gen.var(\"items\", _`${source}.evaluated.items`)\n        it.items = mergeEvaluated.items(gen, items, it.items, Name)\n      }\n    }\n  }\n}\n\nexport default def\n", "import type {Vocabulary} from \"../../types\"\nimport idKeyword from \"./id\"\nimport refKeyword from \"./ref\"\n\nconst core: Vocabulary = [\n  \"$schema\",\n  \"$id\",\n  \"$defs\",\n  \"$vocabulary\",\n  {keyword: \"$comment\"},\n  \"definitions\",\n  idKeyword,\n  refKeyword,\n]\n\nexport default core\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators, Code} from \"../../compile/codegen\"\n\nconst ops = operators\n\ntype Kwd = \"maximum\" | \"minimum\" | \"exclusiveMaximum\" | \"exclusiveMinimum\"\n\ntype Comparison = \"<=\" | \">=\" | \"<\" | \">\"\n\nconst KWDs: {[K in Kwd]: {okStr: Comparison; ok: Code; fail: Code}} = {\n  maximum: {okStr: \"<=\", ok: ops.LTE, fail: ops.GT},\n  minimum: {okStr: \">=\", ok: ops.GTE, fail: ops.LT},\n  exclusiveMaximum: {okStr: \"<\", ok: ops.LT, fail: ops.GTE},\n  exclusiveMinimum: {okStr: \">\", ok: ops.GT, fail: ops.LTE},\n}\n\nexport type LimitNumberError = ErrorObject<\n  Kwd,\n  {limit: number; comparison: Comparison},\n  number | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({keyword, schemaCode}) => str`must be ${KWDs[keyword as Kwd].okStr} ${schemaCode}`,\n  params: ({keyword, schemaCode}) =>\n    _`{comparison: ${KWDs[keyword as Kwd].okStr}, limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: Object.keys(KWDs),\n  type: \"number\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    cxt.fail$data(_`${data} ${KWDs[keyword as Kwd].fail} ${schemaCode} || isNaN(${data})`)\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\n\nexport type MultipleOfError = ErrorObject<\n  \"multipleOf\",\n  {multipleOf: number},\n  number | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must be multiple of ${schemaCode}`,\n  params: ({schemaCode}) => _`{multipleOf: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"multipleOf\",\n  type: \"number\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, schemaCode, it} = cxt\n    // const bdt = bad$DataType(schemaCode, <string>def.schemaType, $data)\n    const prec = it.opts.multipleOfPrecision\n    const res = gen.let(\"res\")\n    const invalid = prec\n      ? _`Math.abs(Math.round(${res}) - ${res}) > 1e-${prec}`\n      : _`${res} !== parseInt(${res})`\n    cxt.fail$data(_`(${schemaCode} === 0 || (${res} = ${data}/${schemaCode}, ${invalid}))`)\n  },\n}\n\nexport default def\n", "// https://mathiasbynens.be/notes/javascript-encoding\n// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode\nexport default function ucs2length(str: string): number {\n  const len = str.length\n  let length = 0\n  let pos = 0\n  let value: number\n  while (pos < len) {\n    length++\n    value = str.charCodeAt(pos++)\n    if (value >= 0xd800 && value <= 0xdbff && pos < len) {\n      // high surrogate, and there is a next character\n      value = str.charCodeAt(pos)\n      if ((value & 0xfc00) === 0xdc00) pos++ // low surrogate\n    }\n  }\n  return length\n}\n\nucs2length.code = 'require(\"ajv/dist/runtime/ucs2length\").default'\n", "import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport ucs2length from \"../../runtime/ucs2length\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxLength\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} characters`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxLength\", \"minLength\"],\n  type: \"string\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode, it} = cxt\n    const op = keyword === \"maxLength\" ? operators.GT : operators.LT\n    const len =\n      it.opts.unicode === false ? _`${data}.length` : _`${useFunc(cxt.gen, ucs2length)}(${data})`\n    cxt.fail$data(_`${len} ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {usePattern} from \"../code\"\nimport {_, str} from \"../../compile/codegen\"\n\nexport type PatternError = ErrorObject<\"pattern\", {pattern: string}, string | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must match pattern \"${schemaCode}\"`,\n  params: ({schemaCode}) => _`{pattern: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"pattern\",\n  type: \"string\",\n  schemaType: \"string\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {data, $data, schema, schemaCode, it} = cxt\n    // TODO regexp should be wrapped in try/catchs\n    const u = it.opts.unicodeRegExp ? \"u\" : \"\"\n    const regExp = $data ? _`(new RegExp(${schemaCode}, ${u}))` : usePattern(cxt, schema)\n    cxt.fail$data(_`!${regExp}.test(${data})`)\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxProperties\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} properties`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxProperties\", \"minProperties\"],\n  type: \"object\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    const op = keyword === \"maxProperties\" ? operators.GT : operators.LT\n    cxt.fail$data(_`Object.keys(${data}).length ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {\n  checkReportMissingProp,\n  checkMissingProp,\n  reportMissingProp,\n  propertyInData,\n  noPropertyInData,\n} from \"../code\"\nimport {_, str, nil, not, Name, Code} from \"../../compile/codegen\"\nimport {checkStrictMode} from \"../../compile/util\"\n\nexport type RequiredError = ErrorObject<\n  \"required\",\n  {missingProperty: string},\n  string[] | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {missingProperty}}) => str`must have required property '${missingProperty}'`,\n  params: ({params: {missingProperty}}) => _`{missingProperty: ${missingProperty}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"required\",\n  type: \"object\",\n  schemaType: \"array\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, schemaCode, data, $data, it} = cxt\n    const {opts} = it\n    if (!$data && schema.length === 0) return\n    const useLoop = schema.length >= opts.loopRequired\n    if (it.allErrors) allErrorsMode()\n    else exitOnErrorMode()\n\n    if (opts.strictRequired) {\n      const props = cxt.parentSchema.properties\n      const {definedProperties} = cxt.it\n      for (const requiredKey of schema) {\n        if (props?.[requiredKey] === undefined && !definedProperties.has(requiredKey)) {\n          const schemaPath = it.schemaEnv.baseId + it.errSchemaPath\n          const msg = `required property \"${requiredKey}\" is not defined at \"${schemaPath}\" (strictRequired)`\n          checkStrictMode(it, msg, it.opts.strictRequired)\n        }\n      }\n    }\n\n    function allErrorsMode(): void {\n      if (useLoop || $data) {\n        cxt.block$data(nil, loopAllRequired)\n      } else {\n        for (const prop of schema) {\n          checkReportMissingProp(cxt, prop)\n        }\n      }\n    }\n\n    function exitOnErrorMode(): void {\n      const missing = gen.let(\"missing\")\n      if (useLoop || $data) {\n        const valid = gen.let(\"valid\", true)\n        cxt.block$data(valid, () => loopUntilMissing(missing, valid))\n        cxt.ok(valid)\n      } else {\n        gen.if(checkMissingProp(cxt, schema, missing))\n        reportMissingProp(cxt, missing)\n        gen.else()\n      }\n    }\n\n    function loopAllRequired(): void {\n      gen.forOf(\"prop\", schemaCode as Code, (prop) => {\n        cxt.setParams({missingProperty: prop})\n        gen.if(noPropertyInData(gen, data, prop, opts.ownProperties), () => cxt.error())\n      })\n    }\n\n    function loopUntilMissing(missing: Name, valid: Name): void {\n      cxt.setParams({missingProperty: missing})\n      gen.forOf(\n        missing,\n        schemaCode as Code,\n        () => {\n          gen.assign(valid, propertyInData(gen, data, missing, opts.ownProperties))\n          gen.if(not(valid), () => {\n            cxt.error()\n            gen.break()\n          })\n        },\n        nil\n      )\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxItems\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} items`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxItems\", \"minItems\"],\n  type: \"array\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    const op = keyword === \"maxItems\" ? operators.GT : operators.LT\n    cxt.fail$data(_`${data}.length ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n", "// https://github.com/ajv-validator/ajv/issues/889\nimport * as equal from \"fast-deep-equal\"\n\ntype Equal = typeof equal & {code: string}\n;(equal as Equal).code = 'require(\"ajv/dist/runtime/equal\").default'\n\nexport default equal as Equal\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {checkDataTypes, getSchemaTypes, DataType} from \"../../compile/validate/dataType\"\nimport {_, str, Name} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type UniqueItemsError = ErrorObject<\n  \"uniqueItems\",\n  {i: number; j: number},\n  boolean | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {i, j}}) =>\n    str`must NOT have duplicate items (items ## ${j} and ${i} are identical)`,\n  params: ({params: {i, j}}) => _`{i: ${i}, j: ${j}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"uniqueItems\",\n  type: \"array\",\n  schemaType: \"boolean\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schema, parentSchema, schemaCode, it} = cxt\n    if (!$data && !schema) return\n    const valid = gen.let(\"valid\")\n    const itemTypes = parentSchema.items ? getSchemaTypes(parentSchema.items) : []\n    cxt.block$data(valid, validateUniqueItems, _`${schemaCode} === false`)\n    cxt.ok(valid)\n\n    function validateUniqueItems(): void {\n      const i = gen.let(\"i\", _`${data}.length`)\n      const j = gen.let(\"j\")\n      cxt.setParams({i, j})\n      gen.assign(valid, true)\n      gen.if(_`${i} > 1`, () => (canOptimize() ? loopN : loopN2)(i, j))\n    }\n\n    function canOptimize(): boolean {\n      return itemTypes.length > 0 && !itemTypes.some((t) => t === \"object\" || t === \"array\")\n    }\n\n    function loopN(i: Name, j: Name): void {\n      const item = gen.name(\"item\")\n      const wrongType = checkDataTypes(itemTypes, item, it.opts.strictNumbers, DataType.Wrong)\n      const indices = gen.const(\"indices\", _`{}`)\n      gen.for(_`;${i}--;`, () => {\n        gen.let(item, _`${data}[${i}]`)\n        gen.if(wrongType, _`continue`)\n        if (itemTypes.length > 1) gen.if(_`typeof ${item} == \"string\"`, _`${item} += \"_\"`)\n        gen\n          .if(_`typeof ${indices}[${item}] == \"number\"`, () => {\n            gen.assign(j, _`${indices}[${item}]`)\n            cxt.error()\n            gen.assign(valid, false).break()\n          })\n          .code(_`${indices}[${item}] = ${i}`)\n      })\n    }\n\n    function loopN2(i: Name, j: Name): void {\n      const eql = useFunc(gen, equal)\n      const outer = gen.name(\"outer\")\n      gen.label(outer).for(_`;${i}--;`, () =>\n        gen.for(_`${j} = ${i}; ${j}--;`, () =>\n          gen.if(_`${eql}(${data}[${i}], ${data}[${j}])`, () => {\n            cxt.error()\n            gen.assign(valid, false).break(outer)\n          })\n        )\n      )\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type ConstError = ErrorObject<\"const\", {allowedValue: any}>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must be equal to constant\",\n  params: ({schemaCode}) => _`{allowedValue: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"const\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schemaCode, schema} = cxt\n    if ($data || (schema && typeof schema == \"object\")) {\n      cxt.fail$data(_`!${useFunc(gen, equal)}(${data}, ${schemaCode})`)\n    } else {\n      cxt.fail(_`${schema} !== ${data}`)\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, or, Name, Code} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type EnumError = ErrorObject<\"enum\", {allowedValues: any[]}, any[] | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must be equal to one of the allowed values\",\n  params: ({schemaCode}) => _`{allowedValues: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"enum\",\n  schemaType: \"array\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schema, schemaCode, it} = cxt\n    if (!$data && schema.length === 0) throw new Error(\"enum must have non-empty array\")\n    const useLoop = schema.length >= it.opts.loopEnum\n    let eql: Name | undefined\n    const getEql = (): Name => (eql ??= useFunc(gen, equal))\n\n    let valid: Code\n    if (useLoop || $data) {\n      valid = gen.let(\"valid\")\n      cxt.block$data(valid, loopEnum)\n    } else {\n      /* istanbul ignore if */\n      if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n      const vSchema = gen.const(\"vSchema\", schemaCode)\n      valid = or(...schema.map((_x: unknown, i: number) => equalCode(vSchema, i)))\n    }\n    cxt.pass(valid)\n\n    function loopEnum(): void {\n      gen.assign(valid, false)\n      gen.forOf(\"v\", schemaCode as Code, (v) =>\n        gen.if(_`${getEql()}(${data}, ${v})`, () => gen.assign(valid, true).break())\n      )\n    }\n\n    function equalCode(vSchema: Name, i: number): Code {\n      const sch = schema[i]\n      return typeof sch === \"object\" && sch !== null\n        ? _`${getEql()}(${data}, ${vSchema}[${i}])`\n        : _`${data} === ${sch}`\n    }\n  },\n}\n\nexport default def\n", "import type {ErrorObject, Vocabulary} from \"../../types\"\nimport limitNumber, {LimitNumberError} from \"./limitNumber\"\nimport multipleOf, {MultipleOfError} from \"./multipleOf\"\nimport limitLength from \"./limitLength\"\nimport pattern, {PatternError} from \"./pattern\"\nimport limitProperties from \"./limitProperties\"\nimport required, {RequiredError} from \"./required\"\nimport limitItems from \"./limitItems\"\nimport uniqueItems, {UniqueItemsError} from \"./uniqueItems\"\nimport constKeyword, {ConstError} from \"./const\"\nimport enumKeyword, {EnumError} from \"./enum\"\n\nconst validation: Vocabulary = [\n  // number\n  limitNumber,\n  multipleOf,\n  // string\n  limitLength,\n  pattern,\n  // object\n  limitProperties,\n  required,\n  // array\n  limitItems,\n  uniqueItems,\n  // any\n  {keyword: \"type\", schemaType: [\"string\", \"array\"]},\n  {keyword: \"nullable\", schemaType: \"boolean\"},\n  constKeyword,\n  enumKeyword,\n]\n\nexport default validation\n\ntype LimitError = ErrorObject<\n  \"maxItems\" | \"minItems\" | \"minProperties\" | \"maxProperties\" | \"minLength\" | \"maxLength\",\n  {limit: number},\n  number | {$data: string}\n>\n\nexport type ValidationKeywordError =\n  | LimitError\n  | LimitNumberError\n  | MultipleOfError\n  | PatternError\n  | RequiredError\n  | UniqueItemsError\n  | ConstError\n  | EnumError\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode, Type} from \"../../compile/util\"\n\nexport type AdditionalItemsError = ErrorObject<\"additionalItems\", {limit: number}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {len}}) => str`must NOT have more than ${len} items`,\n  params: ({params: {len}}) => _`{limit: ${len}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"additionalItems\" as const,\n  type: \"array\",\n  schemaType: [\"boolean\", \"object\"],\n  before: \"uniqueItems\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {parentSchema, it} = cxt\n    const {items} = parentSchema\n    if (!Array.isArray(items)) {\n      checkStrictMode(it, '\"additionalItems\" is ignored when \"items\" is not an array of schemas')\n      return\n    }\n    validateAdditionalItems(cxt, items)\n  },\n}\n\nexport function validateAdditionalItems(cxt: KeywordCxt, items: AnySchema[]): void {\n  const {gen, schema, data, keyword, it} = cxt\n  it.items = true\n  const len = gen.const(\"len\", _`${data}.length`)\n  if (schema === false) {\n    cxt.setParams({len: items.length})\n    cxt.pass(_`${len} <= ${items.length}`)\n  } else if (typeof schema == \"object\" && !alwaysValidSchema(it, schema)) {\n    const valid = gen.var(\"valid\", _`${len} <= ${items.length}`) // TODO var\n    gen.if(not(valid), () => validateItems(valid))\n    cxt.ok(valid)\n  }\n\n  function validateItems(valid: Name): void {\n    gen.forRange(\"i\", items.length, len, (i) => {\n      cxt.subschema({keyword, dataProp: i, dataPropType: Type.Num}, valid)\n      if (!it.allErrors) gen.if(not(valid), () => gen.break())\n    })\n  }\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, AnySchema, AnySchemaObject} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_} from \"../../compile/codegen\"\nimport {alwaysValidSchema, mergeEvaluated, checkStrictMode} from \"../../compile/util\"\nimport {validateArray} from \"../code\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"items\",\n  type: \"array\",\n  schemaType: [\"object\", \"array\", \"boolean\"],\n  before: \"uniqueItems\",\n  code(cxt: KeywordCxt) {\n    const {schema, it} = cxt\n    if (Array.isArray(schema)) return validateTuple(cxt, \"additionalItems\", schema)\n    it.items = true\n    if (alwaysValidSchema(it, schema)) return\n    cxt.ok(validateArray(cxt))\n  },\n}\n\nexport function validateTuple(\n  cxt: KeywordCxt,\n  extraItems: string,\n  schArr: AnySchema[] = cxt.schema\n): void {\n  const {gen, parentSchema, data, keyword, it} = cxt\n  checkStrictTuple(parentSchema)\n  if (it.opts.unevaluated && schArr.length && it.items !== true) {\n    it.items = mergeEvaluated.items(gen, schArr.length, it.items)\n  }\n  const valid = gen.name(\"valid\")\n  const len = gen.const(\"len\", _`${data}.length`)\n  schArr.forEach((sch: AnySchema, i: number) => {\n    if (alwaysValidSchema(it, sch)) return\n    gen.if(_`${len} > ${i}`, () =>\n      cxt.subschema(\n        {\n          keyword,\n          schemaProp: i,\n          dataProp: i,\n        },\n        valid\n      )\n    )\n    cxt.ok(valid)\n  })\n\n  function checkStrictTuple(sch: AnySchemaObject): void {\n    const {opts, errSchemaPath} = it\n    const l = schArr.length\n    const fullTuple = l === sch.minItems && (l === sch.maxItems || sch[extraItems] === false)\n    if (opts.strictTuples && !fullTuple) {\n      const msg = `\"${keyword}\" is ${l}-tuple, but minItems or maxItems/${extraItems} are not specified or different at path \"${errSchemaPath}\"`\n      checkStrictMode(it, msg, opts.strictTuples)\n    }\n  }\n}\n\nexport default def\n", "import type {CodeKeywordDefinition} from \"../../types\"\nimport {validateTuple} from \"./items\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"prefixItems\",\n  type: \"array\",\n  schemaType: [\"array\"],\n  before: \"uniqueItems\",\n  code: (cxt) => validateTuple(cxt, \"items\"),\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {validateArray} from \"../code\"\nimport {validateAdditionalItems} from \"./additionalItems\"\n\nexport type ItemsError = ErrorObject<\"items\", {limit: number}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {len}}) => str`must NOT have more than ${len} items`,\n  params: ({params: {len}}) => _`{limit: ${len}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"items\",\n  type: \"array\",\n  schemaType: [\"object\", \"boolean\"],\n  before: \"uniqueItems\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {schema, parentSchema, it} = cxt\n    const {prefixItems} = parentSchema\n    it.items = true\n    if (alwaysValidSchema(it, schema)) return\n    if (prefixItems) validateAdditionalItems(cxt, prefixItems)\n    else cxt.ok(validateArray(cxt))\n  },\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode, Type} from \"../../compile/util\"\n\nexport type ContainsError = ErrorObject<\n  \"contains\",\n  {minContains: number; maxContains?: number},\n  AnySchema\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {min, max}}) =>\n    max === undefined\n      ? str`must contain at least ${min} valid item(s)`\n      : str`must contain at least ${min} and no more than ${max} valid item(s)`,\n  params: ({params: {min, max}}) =>\n    max === undefined ? _`{minContains: ${min}}` : _`{minContains: ${min}, maxContains: ${max}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"contains\",\n  type: \"array\",\n  schemaType: [\"object\", \"boolean\"],\n  before: \"uniqueItems\",\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, data, it} = cxt\n    let min: number\n    let max: number | undefined\n    const {minContains, maxContains} = parentSchema\n    if (it.opts.next) {\n      min = minContains === undefined ? 1 : minContains\n      max = maxContains\n    } else {\n      min = 1\n    }\n    const len = gen.const(\"len\", _`${data}.length`)\n    cxt.setParams({min, max})\n    if (max === undefined && min === 0) {\n      checkStrictMode(it, `\"minContains\" == 0 without \"maxContains\": \"contains\" keyword ignored`)\n      return\n    }\n    if (max !== undefined && min > max) {\n      checkStrictMode(it, `\"minContains\" > \"maxContains\" is always invalid`)\n      cxt.fail()\n      return\n    }\n    if (alwaysValidSchema(it, schema)) {\n      let cond = _`${len} >= ${min}`\n      if (max !== undefined) cond = _`${cond} && ${len} <= ${max}`\n      cxt.pass(cond)\n      return\n    }\n\n    it.items = true\n    const valid = gen.name(\"valid\")\n    if (max === undefined && min === 1) {\n      validateItems(valid, () => gen.if(valid, () => gen.break()))\n    } else if (min === 0) {\n      gen.let(valid, true)\n      if (max !== undefined) gen.if(_`${data}.length > 0`, validateItemsWithCount)\n    } else {\n      gen.let(valid, false)\n      validateItemsWithCount()\n    }\n    cxt.result(valid, () => cxt.reset())\n\n    function validateItemsWithCount(): void {\n      const schValid = gen.name(\"_valid\")\n      const count = gen.let(\"count\", 0)\n      validateItems(schValid, () => gen.if(schValid, () => checkLimits(count)))\n    }\n\n    function validateItems(_valid: Name, block: () => void): void {\n      gen.forRange(\"i\", 0, len, (i) => {\n        cxt.subschema(\n          {\n            keyword: \"contains\",\n            dataProp: i,\n            dataPropType: Type.Num,\n            compositeRule: true,\n          },\n          _valid\n        )\n        block()\n      })\n    }\n\n    function checkLimits(count: Name): void {\n      gen.code(_`${count}++`)\n      if (max === undefined) {\n        gen.if(_`${count} >= ${min}`, () => gen.assign(valid, true).break())\n      } else {\n        gen.if(_`${count} > ${max}`, () => gen.assign(valid, false).break())\n        if (min === 1) gen.assign(valid, true)\n        else gen.if(_`${count} >= ${min}`, () => gen.assign(valid, true))\n      }\n    }\n  },\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  SchemaMap,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {checkReportMissingProp, checkMissingProp, reportMissingProp, propertyInData} from \"../code\"\n\nexport type PropertyDependencies = {[K in string]?: string[]}\n\nexport interface DependenciesErrorParams {\n  property: string\n  missingProperty: string\n  depsCount: number\n  deps: string // TODO change to string[]\n}\n\ntype SchemaDependencies = SchemaMap\n\nexport type DependenciesError = ErrorObject<\n  \"dependencies\",\n  DependenciesErrorParams,\n  {[K in string]?: string[] | AnySchema}\n>\n\nexport const error: KeywordErrorDefinition = {\n  message: ({params: {property, depsCount, deps}}) => {\n    const property_ies = depsCount === 1 ? \"property\" : \"properties\"\n    return str`must have ${property_ies} ${deps} when property ${property} is present`\n  },\n  params: ({params: {property, depsCount, deps, missingProperty}}) =>\n    _`{property: ${property},\n    missingProperty: ${missingProperty},\n    depsCount: ${depsCount},\n    deps: ${deps}}`, // TODO change to reference\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"dependencies\",\n  type: \"object\",\n  schemaType: \"object\",\n  error,\n  code(cxt: KeywordCxt) {\n    const [propDeps, schDeps] = splitDependencies(cxt)\n    validatePropertyDeps(cxt, propDeps)\n    validateSchemaDeps(cxt, schDeps)\n  },\n}\n\nfunction splitDependencies({schema}: KeywordCxt): [PropertyDependencies, SchemaDependencies] {\n  const propertyDeps: PropertyDependencies = {}\n  const schemaDeps: SchemaDependencies = {}\n  for (const key in schema) {\n    if (key === \"__proto__\") continue\n    const deps = Array.isArray(schema[key]) ? propertyDeps : schemaDeps\n    deps[key] = schema[key]\n  }\n  return [propertyDeps, schemaDeps]\n}\n\nexport function validatePropertyDeps(\n  cxt: KeywordCxt,\n  propertyDeps: {[K in string]?: string[]} = cxt.schema\n): void {\n  const {gen, data, it} = cxt\n  if (Object.keys(propertyDeps).length === 0) return\n  const missing = gen.let(\"missing\")\n  for (const prop in propertyDeps) {\n    const deps = propertyDeps[prop] as string[]\n    if (deps.length === 0) continue\n    const hasProperty = propertyInData(gen, data, prop, it.opts.ownProperties)\n    cxt.setParams({\n      property: prop,\n      depsCount: deps.length,\n      deps: deps.join(\", \"),\n    })\n    if (it.allErrors) {\n      gen.if(hasProperty, () => {\n        for (const depProp of deps) {\n          checkReportMissingProp(cxt, depProp)\n        }\n      })\n    } else {\n      gen.if(_`${hasProperty} && (${checkMissingProp(cxt, deps, missing)})`)\n      reportMissingProp(cxt, missing)\n      gen.else()\n    }\n  }\n}\n\nexport function validateSchemaDeps(cxt: KeywordCxt, schemaDeps: SchemaMap = cxt.schema): void {\n  const {gen, data, keyword, it} = cxt\n  const valid = gen.name(\"valid\")\n  for (const prop in schemaDeps) {\n    if (alwaysValidSchema(it, schemaDeps[prop] as AnySchema)) continue\n    gen.if(\n      propertyInData(gen, data, prop, it.opts.ownProperties),\n      () => {\n        const schCxt = cxt.subschema({keyword, schemaProp: prop}, valid)\n        cxt.mergeValidEvaluated(schCxt, valid)\n      },\n      () => gen.var(valid, true) // TODO var\n    )\n    cxt.ok(valid)\n  }\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, not} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nexport type PropertyNamesError = ErrorObject<\"propertyNames\", {propertyName: string}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: \"property name must be valid\",\n  params: ({params}) => _`{propertyName: ${params.propertyName}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"propertyNames\",\n  type: \"object\",\n  schemaType: [\"object\", \"boolean\"],\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, data, it} = cxt\n    if (alwaysValidSchema(it, schema)) return\n    const valid = gen.name(\"valid\")\n\n    gen.forIn(\"key\", data, (key) => {\n      cxt.setParams({propertyName: key})\n      cxt.subschema(\n        {\n          keyword: \"propertyNames\",\n          data: key,\n          dataTypes: [\"string\"],\n          propertyName: key,\n          compositeRule: true,\n        },\n        valid\n      )\n      gen.if(not(valid), () => {\n        cxt.error(true)\n        if (!it.allErrors) gen.break()\n      })\n    })\n\n    cxt.ok(valid)\n  },\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  AddedKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport {allSchemaProperties, usePattern, isOwnProperty} from \"../code\"\nimport {_, nil, or, not, Code, Name} from \"../../compile/codegen\"\nimport N from \"../../compile/names\"\nimport type {SubschemaArgs} from \"../../compile/validate/subschema\"\nimport {alwaysValidSchema, schemaRefOrVal, Type} from \"../../compile/util\"\n\nexport type AdditionalPropertiesError = ErrorObject<\n  \"additionalProperties\",\n  {additionalProperty: string},\n  AnySchema\n>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must NOT have additional properties\",\n  params: ({params}) => _`{additionalProperty: ${params.additionalProperty}}`,\n}\n\nconst def: CodeKeywordDefinition & AddedKeywordDefinition = {\n  keyword: \"additionalProperties\",\n  type: [\"object\"],\n  schemaType: [\"boolean\", \"object\"],\n  allowUndefined: true,\n  trackErrors: true,\n  error,\n  code(cxt) {\n    const {gen, schema, parentSchema, data, errsCount, it} = cxt\n    /* istanbul ignore if */\n    if (!errsCount) throw new Error(\"ajv implementation error\")\n    const {allErrors, opts} = it\n    it.props = true\n    if (opts.removeAdditional !== \"all\" && alwaysValidSchema(it, schema)) return\n    const props = allSchemaProperties(parentSchema.properties)\n    const patProps = allSchemaProperties(parentSchema.patternProperties)\n    checkAdditionalProperties()\n    cxt.ok(_`${errsCount} === ${N.errors}`)\n\n    function checkAdditionalProperties(): void {\n      gen.forIn(\"key\", data, (key: Name) => {\n        if (!props.length && !patProps.length) additionalPropertyCode(key)\n        else gen.if(isAdditional(key), () => additionalPropertyCode(key))\n      })\n    }\n\n    function isAdditional(key: Name): Code {\n      let definedProp: Code\n      if (props.length > 8) {\n        // TODO maybe an option instead of hard-coded 8?\n        const propsSchema = schemaRefOrVal(it, parentSchema.properties, \"properties\")\n        definedProp = isOwnProperty(gen, propsSchema as Code, key)\n      } else if (props.length) {\n        definedProp = or(...props.map((p) => _`${key} === ${p}`))\n      } else {\n        definedProp = nil\n      }\n      if (patProps.length) {\n        definedProp = or(definedProp, ...patProps.map((p) => _`${usePattern(cxt, p)}.test(${key})`))\n      }\n      return not(definedProp)\n    }\n\n    function deleteAdditional(key: Name): void {\n      gen.code(_`delete ${data}[${key}]`)\n    }\n\n    function additionalPropertyCode(key: Name): void {\n      if (opts.removeAdditional === \"all\" || (opts.removeAdditional && schema === false)) {\n        deleteAdditional(key)\n        return\n      }\n\n      if (schema === false) {\n        cxt.setParams({additionalProperty: key})\n        cxt.error()\n        if (!allErrors) gen.break()\n        return\n      }\n\n      if (typeof schema == \"object\" && !alwaysValidSchema(it, schema)) {\n        const valid = gen.name(\"valid\")\n        if (opts.removeAdditional === \"failing\") {\n          applyAdditionalSchema(key, valid, false)\n          gen.if(not(valid), () => {\n            cxt.reset()\n            deleteAdditional(key)\n          })\n        } else {\n          applyAdditionalSchema(key, valid)\n          if (!allErrors) gen.if(not(valid), () => gen.break())\n        }\n      }\n    }\n\n    function applyAdditionalSchema(key: Name, valid: Name, errors?: false): void {\n      const subschema: SubschemaArgs = {\n        keyword: \"additionalProperties\",\n        dataProp: key,\n        dataPropType: Type.Str,\n      }\n      if (errors === false) {\n        Object.assign(subschema, {\n          compositeRule: true,\n          createErrors: false,\n          allErrors: false,\n        })\n      }\n      cxt.subschema(subschema, valid)\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition} from \"../../types\"\nimport {KeywordCxt} from \"../../compile/validate\"\nimport {propertyInData, allSchemaProperties} from \"../code\"\nimport {alwaysValidSchema, toHash, mergeEvaluated} from \"../../compile/util\"\nimport apDef from \"./additionalProperties\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"properties\",\n  type: \"object\",\n  schemaType: \"object\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, data, it} = cxt\n    if (it.opts.removeAdditional === \"all\" && parentSchema.additionalProperties === undefined) {\n      apDef.code(new KeywordCxt(it, apDef, \"additionalProperties\"))\n    }\n    const allProps = allSchemaProperties(schema)\n    for (const prop of allProps) {\n      it.definedProperties.add(prop)\n    }\n    if (it.opts.unevaluated && allProps.length && it.props !== true) {\n      it.props = mergeEvaluated.props(gen, toHash(allProps), it.props)\n    }\n    const properties = allProps.filter((p) => !alwaysValidSchema(it, schema[p]))\n    if (properties.length === 0) return\n    const valid = gen.name(\"valid\")\n\n    for (const prop of properties) {\n      if (hasDefault(prop)) {\n        applyPropertySchema(prop)\n      } else {\n        gen.if(propertyInData(gen, data, prop, it.opts.ownProperties))\n        applyPropertySchema(prop)\n        if (!it.allErrors) gen.else().var(valid, true)\n        gen.endIf()\n      }\n      cxt.it.definedProperties.add(prop)\n      cxt.ok(valid)\n    }\n\n    function hasDefault(prop: string): boolean | undefined {\n      return it.opts.useDefaults && !it.compositeRule && schema[prop].default !== undefined\n    }\n\n    function applyPropertySchema(prop: string): void {\n      cxt.subschema(\n        {\n          keyword: \"properties\",\n          schemaProp: prop,\n          dataProp: prop,\n        },\n        valid\n      )\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {allSchemaProperties, usePattern} from \"../code\"\nimport {_, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode} from \"../../compile/util\"\nimport {evaluatedPropsToName, Type} from \"../../compile/util\"\nimport {AnySchema} from \"../../types\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"patternProperties\",\n  type: \"object\",\n  schemaType: \"object\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, data, parentSchema, it} = cxt\n    const {opts} = it\n    const patterns = allSchemaProperties(schema)\n    const alwaysValidPatterns = patterns.filter((p) =>\n      alwaysValidSchema(it, schema[p] as AnySchema)\n    )\n\n    if (\n      patterns.length === 0 ||\n      (alwaysValidPatterns.length === patterns.length &&\n        (!it.opts.unevaluated || it.props === true))\n    ) {\n      return\n    }\n\n    const checkProperties =\n      opts.strictSchema && !opts.allowMatchingProperties && parentSchema.properties\n    const valid = gen.name(\"valid\")\n    if (it.props !== true && !(it.props instanceof Name)) {\n      it.props = evaluatedPropsToName(gen, it.props)\n    }\n    const {props} = it\n    validatePatternProperties()\n\n    function validatePatternProperties(): void {\n      for (const pat of patterns) {\n        if (checkProperties) checkMatchingProperties(pat)\n        if (it.allErrors) {\n          validateProperties(pat)\n        } else {\n          gen.var(valid, true) // TODO var\n          validateProperties(pat)\n          gen.if(valid)\n        }\n      }\n    }\n\n    function checkMatchingProperties(pat: string): void {\n      for (const prop in checkProperties) {\n        if (new RegExp(pat).test(prop)) {\n          checkStrictMode(\n            it,\n            `property ${prop} matches pattern ${pat} (use allowMatchingProperties)`\n          )\n        }\n      }\n    }\n\n    function validateProperties(pat: string): void {\n      gen.forIn(\"key\", data, (key) => {\n        gen.if(_`${usePattern(cxt, pat)}.test(${key})`, () => {\n          const alwaysValid = alwaysValidPatterns.includes(pat)\n          if (!alwaysValid) {\n            cxt.subschema(\n              {\n                keyword: \"patternProperties\",\n                schemaProp: pat,\n                dataProp: key,\n                dataPropType: Type.Str,\n              },\n              valid\n            )\n          }\n\n          if (it.opts.unevaluated && props !== true) {\n            gen.assign(_`${props}[${key}]`, true)\n          } else if (!alwaysValid && !it.allErrors) {\n            // can short-circuit if `unevaluatedProperties` is not supported (opts.next === false)\n            // or if all properties were evaluated (props === true)\n            gen.if(not(valid), () => gen.break())\n          }\n        })\n      })\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorNoParams, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nexport type NotKeywordError = ErrorNoParams<\"not\", AnySchema>\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"not\",\n  schemaType: [\"object\", \"boolean\"],\n  trackErrors: true,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, it} = cxt\n    if (alwaysValidSchema(it, schema)) {\n      cxt.fail()\n      return\n    }\n\n    const valid = gen.name(\"valid\")\n    cxt.subschema(\n      {\n        keyword: \"not\",\n        compositeRule: true,\n        createErrors: false,\n        allErrors: false,\n      },\n      valid\n    )\n\n    cxt.failResult(\n      valid,\n      () => cxt.reset(),\n      () => cxt.error()\n    )\n  },\n  error: {message: \"must NOT be valid\"},\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorNoParams, AnySchema} from \"../../types\"\nimport {validateUnion} from \"../code\"\n\nexport type AnyOfError = ErrorNoParams<\"anyOf\", AnySchema[]>\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"anyOf\",\n  schemaType: \"array\",\n  trackErrors: true,\n  code: validateUnion,\n  error: {message: \"must match a schema in anyOf\"},\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {SchemaCxt} from \"../../compile\"\n\nexport type OneOfError = ErrorObject<\n  \"oneOf\",\n  {passingSchemas: [number, number] | null},\n  AnySchema[]\n>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must match exactly one schema in oneOf\",\n  params: ({params}) => _`{passingSchemas: ${params.passing}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"oneOf\",\n  schemaType: \"array\",\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, it} = cxt\n    /* istanbul ignore if */\n    if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n    if (it.opts.discriminator && parentSchema.discriminator) return\n    const schArr: AnySchema[] = schema\n    const valid = gen.let(\"valid\", false)\n    const passing = gen.let(\"passing\", null)\n    const schValid = gen.name(\"_valid\")\n    cxt.setParams({passing})\n    // TODO possibly fail straight away (with warning or exception) if there are two empty always valid schemas\n\n    gen.block(validateOneOf)\n\n    cxt.result(\n      valid,\n      () => cxt.reset(),\n      () => cxt.error(true)\n    )\n\n    function validateOneOf(): void {\n      schArr.forEach((sch: AnySchema, i: number) => {\n        let schCxt: SchemaCxt | undefined\n        if (alwaysValidSchema(it, sch)) {\n          gen.var(schValid, true)\n        } else {\n          schCxt = cxt.subschema(\n            {\n              keyword: \"oneOf\",\n              schemaProp: i,\n              compositeRule: true,\n            },\n            schValid\n          )\n        }\n\n        if (i > 0) {\n          gen\n            .if(_`${schValid} && ${valid}`)\n            .assign(valid, false)\n            .assign(passing, _`[${passing}, ${i}]`)\n            .else()\n        }\n\n        gen.if(schValid, () => {\n          gen.assign(valid, true)\n          gen.assign(passing, i)\n          if (schCxt) cxt.mergeEvaluated(schCxt, Name)\n        })\n      })\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"allOf\",\n  schemaType: \"array\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, it} = cxt\n    /* istanbul ignore if */\n    if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n    const valid = gen.name(\"valid\")\n    schema.forEach((sch: AnySchema, i: number) => {\n      if (alwaysValidSchema(it, sch)) return\n      const schCxt = cxt.subschema({keyword: \"allOf\", schemaProp: i}, valid)\n      cxt.ok(valid)\n      cxt.mergeEvaluated(schCxt)\n    })\n  },\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"../../compile\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode} from \"../../compile/util\"\n\nexport type IfKeywordError = ErrorObject<\"if\", {failingKeyword: string}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params}) => str`must match \"${params.ifClause}\" schema`,\n  params: ({params}) => _`{failingKeyword: ${params.ifClause}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"if\",\n  schemaType: [\"object\", \"boolean\"],\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, parentSchema, it} = cxt\n    if (parentSchema.then === undefined && parentSchema.else === undefined) {\n      checkStrictMode(it, '\"if\" without \"then\" and \"else\" is ignored')\n    }\n    const hasThen = hasSchema(it, \"then\")\n    const hasElse = hasSchema(it, \"else\")\n    if (!hasThen && !hasElse) return\n\n    const valid = gen.let(\"valid\", true)\n    const schValid = gen.name(\"_valid\")\n    validateIf()\n    cxt.reset()\n\n    if (hasThen && hasElse) {\n      const ifClause = gen.let(\"ifClause\")\n      cxt.setParams({ifClause})\n      gen.if(schValid, validateClause(\"then\", ifClause), validateClause(\"else\", ifClause))\n    } else if (hasThen) {\n      gen.if(schValid, validateClause(\"then\"))\n    } else {\n      gen.if(not(schValid), validateClause(\"else\"))\n    }\n\n    cxt.pass(valid, () => cxt.error(true))\n\n    function validateIf(): void {\n      const schCxt = cxt.subschema(\n        {\n          keyword: \"if\",\n          compositeRule: true,\n          createErrors: false,\n          allErrors: false,\n        },\n        schValid\n      )\n      cxt.mergeEvaluated(schCxt)\n    }\n\n    function validateClause(keyword: string, ifClause?: Name): () => void {\n      return () => {\n        const schCxt = cxt.subschema({keyword}, schValid)\n        gen.assign(valid, schValid)\n        cxt.mergeValidEvaluated(schCxt, valid)\n        if (ifClause) gen.assign(ifClause, _`${keyword}`)\n        else cxt.setParams({ifClause: keyword})\n      }\n    }\n  },\n}\n\nfunction hasSchema(it: SchemaObjCxt, keyword: string): boolean {\n  const schema = it.schema[keyword]\n  return schema !== undefined && !alwaysValidSchema(it, schema)\n}\n\nexport default def\n", "import type {CodeKeywordDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {checkStrictMode} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"then\", \"else\"],\n  schemaType: [\"object\", \"boolean\"],\n  code({keyword, parentSchema, it}: KeywordCxt) {\n    if (parentSchema.if === undefined) checkStrictMode(it, `\"${keyword}\" without \"if\" is ignored`)\n  },\n}\n\nexport default def\n", "import type {ErrorNoParams, Vocabulary} from \"../../types\"\nimport additionalItems, {AdditionalItemsError} from \"./additionalItems\"\nimport prefixItems from \"./prefixItems\"\nimport items from \"./items\"\nimport items2020, {ItemsError} from \"./items2020\"\nimport contains, {ContainsError} from \"./contains\"\nimport dependencies, {DependenciesError} from \"./dependencies\"\nimport propertyNames, {PropertyNamesError} from \"./propertyNames\"\nimport additionalProperties, {AdditionalPropertiesError} from \"./additionalProperties\"\nimport properties from \"./properties\"\nimport patternProperties from \"./patternProperties\"\nimport notKeyword, {NotKeywordError} from \"./not\"\nimport anyOf, {AnyOfError} from \"./anyOf\"\nimport oneOf, {OneOfError} from \"./oneOf\"\nimport allOf from \"./allOf\"\nimport ifKeyword, {IfKeywordError} from \"./if\"\nimport thenElse from \"./thenElse\"\n\nexport default function getApplicator(draft2020 = false): Vocabulary {\n  const applicator = [\n    // any\n    notKeyword,\n    anyOf,\n    oneOf,\n    allOf,\n    ifKeyword,\n    thenElse,\n    // object\n    propertyNames,\n    additionalProperties,\n    dependencies,\n    properties,\n    patternProperties,\n  ]\n  // array\n  if (draft2020) applicator.push(prefixItems, items2020)\n  else applicator.push(additionalItems, items)\n  applicator.push(contains)\n  return applicator\n}\n\nexport type ApplicatorKeywordError =\n  | ErrorNoParams<\"false schema\">\n  | AdditionalItemsError\n  | ItemsError\n  | ContainsError\n  | AdditionalPropertiesError\n  | DependenciesError\n  | IfKeywordError\n  | AnyOfError\n  | OneOfError\n  | NotKeywordError\n  | PropertyNamesError\n", "import type {\n  AddedFormat,\n  FormatValidator,\n  AsyncFormatValidator,\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, nil, or, Code, getProperty, regexpCode} from \"../../compile/codegen\"\n\ntype FormatValidate =\n  | FormatValidator<string>\n  | FormatValidator<number>\n  | AsyncFormatValidator<string>\n  | AsyncFormatValidator<number>\n  | RegExp\n  | string\n  | true\n\nexport type FormatError = ErrorObject<\"format\", {format: string}, string | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must match format \"${schemaCode}\"`,\n  params: ({schemaCode}) => _`{format: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"format\",\n  type: [\"number\", \"string\"],\n  schemaType: \"string\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt, ruleType?: string) {\n    const {gen, data, $data, schema, schemaCode, it} = cxt\n    const {opts, errSchemaPath, schemaEnv, self} = it\n    if (!opts.validateFormats) return\n\n    if ($data) validate$DataFormat()\n    else validateFormat()\n\n    function validate$DataFormat(): void {\n      const fmts = gen.scopeValue(\"formats\", {\n        ref: self.formats,\n        code: opts.code.formats,\n      })\n      const fDef = gen.const(\"fDef\", _`${fmts}[${schemaCode}]`)\n      const fType = gen.let(\"fType\")\n      const format = gen.let(\"format\")\n      // TODO simplify\n      gen.if(\n        _`typeof ${fDef} == \"object\" && !(${fDef} instanceof RegExp)`,\n        () => gen.assign(fType, _`${fDef}.type || \"string\"`).assign(format, _`${fDef}.validate`),\n        () => gen.assign(fType, _`\"string\"`).assign(format, fDef)\n      )\n      cxt.fail$data(or(unknownFmt(), invalidFmt()))\n\n      function unknownFmt(): Code {\n        if (opts.strictSchema === false) return nil\n        return _`${schemaCode} && !${format}`\n      }\n\n      function invalidFmt(): Code {\n        const callFormat = schemaEnv.$async\n          ? _`(${fDef}.async ? await ${format}(${data}) : ${format}(${data}))`\n          : _`${format}(${data})`\n        const validData = _`(typeof ${format} == \"function\" ? ${callFormat} : ${format}.test(${data}))`\n        return _`${format} && ${format} !== true && ${fType} === ${ruleType} && !${validData}`\n      }\n    }\n\n    function validateFormat(): void {\n      const formatDef: AddedFormat | undefined = self.formats[schema]\n      if (!formatDef) {\n        unknownFormat()\n        return\n      }\n      if (formatDef === true) return\n      const [fmtType, format, fmtRef] = getFormat(formatDef)\n      if (fmtType === ruleType) cxt.pass(validCondition())\n\n      function unknownFormat(): void {\n        if (opts.strictSchema === false) {\n          self.logger.warn(unknownMsg())\n          return\n        }\n        throw new Error(unknownMsg())\n\n        function unknownMsg(): string {\n          return `unknown format \"${schema as string}\" ignored in schema at path \"${errSchemaPath}\"`\n        }\n      }\n\n      function getFormat(fmtDef: AddedFormat): [string, FormatValidate, Code] {\n        const code =\n          fmtDef instanceof RegExp\n            ? regexpCode(fmtDef)\n            : opts.code.formats\n            ? _`${opts.code.formats}${getProperty(schema)}`\n            : undefined\n        const fmt = gen.scopeValue(\"formats\", {key: schema, ref: fmtDef, code})\n        if (typeof fmtDef == \"object\" && !(fmtDef instanceof RegExp)) {\n          return [fmtDef.type || \"string\", fmtDef.validate, _`${fmt}.validate`]\n        }\n\n        return [\"string\", fmtDef, fmt]\n      }\n\n      function validCondition(): Code {\n        if (typeof formatDef == \"object\" && !(formatDef instanceof RegExp) && formatDef.async) {\n          if (!schemaEnv.$async) throw new Error(\"async format in sync schema\")\n          return _`await ${fmtRef}(${data})`\n        }\n        return typeof format == \"function\" ? _`${fmtRef}(${data})` : _`${fmtRef}.test(${data})`\n      }\n    }\n  },\n}\n\nexport default def\n", "import type {Vocabulary} from \"../../types\"\nimport formatKeyword from \"./format\"\n\nconst format: Vocabulary = [formatKeyword]\n\nexport default format\n", "import type {Vocabulary} from \"../types\"\n\nexport const metadataVocabulary: Vocabulary = [\n  \"title\",\n  \"description\",\n  \"default\",\n  \"deprecated\",\n  \"readOnly\",\n  \"writeOnly\",\n  \"examples\",\n]\n\nexport const contentVocabulary: Vocabulary = [\n  \"contentMediaType\",\n  \"contentEncoding\",\n  \"contentSchema\",\n]\n", "import type {Vocabulary} from \"../types\"\nimport coreVocabulary from \"./core\"\nimport validationVocabulary from \"./validation\"\nimport getApplicatorVocabulary from \"./applicator\"\nimport formatVocabulary from \"./format\"\nimport {metadataVocabulary, contentVocabulary} from \"./metadata\"\n\nconst draft7Vocabularies: Vocabulary[] = [\n  coreVocabulary,\n  validationVocabulary,\n  getApplicatorVocabulary(),\n  formatVocabulary,\n  metadataVocabulary,\n  contentVocabulary,\n]\n\nexport default draft7Vocabularies\n", "import type {ErrorObject} from \"../../types\"\n\nexport enum DiscrError {\n  Tag = \"tag\",\n  Mapping = \"mapping\",\n}\n\nexport type DiscrErrorObj<E extends DiscrError> = ErrorObject<\n  \"discriminator\",\n  {error: E; tag: string; tagValue: unknown},\n  string\n>\n", "import type {CodeKeywordDefinition, AnySchemaObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, getProperty, Name} from \"../../compile/codegen\"\nimport {DiscrError, DiscrErrorObj} from \"../discriminator/types\"\nimport {resolveRef, SchemaEnv} from \"../../compile\"\nimport MissingRefError from \"../../compile/ref_error\"\nimport {schemaHasRulesButRef} from \"../../compile/util\"\n\nexport type DiscriminatorError = DiscrErrorObj<DiscrError.Tag> | DiscrErrorObj<DiscrError.Mapping>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {discrError, tagName}}) =>\n    discrError === DiscrError.Tag\n      ? `tag \"${tagName}\" must be string`\n      : `value of tag \"${tagName}\" must be in oneOf`,\n  params: ({params: {discrError, tag, tagName}}) =>\n    _`{error: ${discrError}, tag: ${tagName}, tagValue: ${tag}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"discriminator\",\n  type: \"object\",\n  schemaType: \"object\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, schema, parentSchema, it} = cxt\n    const {oneOf} = parentSchema\n    if (!it.opts.discriminator) {\n      throw new Error(\"discriminator: requires discriminator option\")\n    }\n    const tagName = schema.propertyName\n    if (typeof tagName != \"string\") throw new Error(\"discriminator: requires propertyName\")\n    if (schema.mapping) throw new Error(\"discriminator: mapping is not supported\")\n    if (!oneOf) throw new Error(\"discriminator: requires oneOf keyword\")\n    const valid = gen.let(\"valid\", false)\n    const tag = gen.const(\"tag\", _`${data}${getProperty(tagName)}`)\n    gen.if(\n      _`typeof ${tag} == \"string\"`,\n      () => validateMapping(),\n      () => cxt.error(false, {discrError: DiscrError.Tag, tag, tagName})\n    )\n    cxt.ok(valid)\n\n    function validateMapping(): void {\n      const mapping = getMapping()\n      gen.if(false)\n      for (const tagValue in mapping) {\n        gen.elseIf(_`${tag} === ${tagValue}`)\n        gen.assign(valid, applyTagSchema(mapping[tagValue]))\n      }\n      gen.else()\n      cxt.error(false, {discrError: DiscrError.Mapping, tag, tagName})\n      gen.endIf()\n    }\n\n    function applyTagSchema(schemaProp?: number): Name {\n      const _valid = gen.name(\"valid\")\n      const schCxt = cxt.subschema({keyword: \"oneOf\", schemaProp}, _valid)\n      cxt.mergeEvaluated(schCxt, Name)\n      return _valid\n    }\n\n    function getMapping(): {[T in string]?: number} {\n      const oneOfMapping: {[T in string]?: number} = {}\n      const topRequired = hasRequired(parentSchema)\n      let tagRequired = true\n      for (let i = 0; i < oneOf.length; i++) {\n        let sch = oneOf[i]\n        if (sch?.$ref && !schemaHasRulesButRef(sch, it.self.RULES)) {\n          const ref = sch.$ref\n          sch = resolveRef.call(it.self, it.schemaEnv.root, it.baseId, ref)\n          if (sch instanceof SchemaEnv) sch = sch.schema\n          if (sch === undefined) throw new MissingRefError(it.opts.uriResolver, it.baseId, ref)\n        }\n        const propSch = sch?.properties?.[tagName]\n        if (typeof propSch != \"object\") {\n          throw new Error(\n            `discriminator: oneOf subschemas (or referenced schemas) must have \"properties/${tagName}\"`\n          )\n        }\n        tagRequired = tagRequired && (topRequired || hasRequired(sch))\n        addMappings(propSch, i)\n      }\n      if (!tagRequired) throw new Error(`discriminator: \"${tagName}\" must be required`)\n      return oneOfMapping\n\n      function hasRequired({required}: AnySchemaObject): boolean {\n        return Array.isArray(required) && required.includes(tagName)\n      }\n\n      function addMappings(sch: AnySchemaObject, i: number): void {\n        if (sch.const) {\n          addMapping(sch.const, i)\n        } else if (sch.enum) {\n          for (const tagValue of sch.enum) {\n            addMapping(tagValue, i)\n          }\n        } else {\n          throw new Error(`discriminator: \"properties/${tagName}\" must have \"const\" or \"enum\"`)\n        }\n      }\n\n      function addMapping(tagValue: unknown, i: number): void {\n        if (typeof tagValue != \"string\" || tagValue in oneOfMapping) {\n          throw new Error(`discriminator: \"${tagName}\" values must be unique strings`)\n        }\n        oneOfMapping[tagValue] = i\n      }\n    }\n  },\n}\n\nexport default def\n", "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"$id\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Core schema meta-schema\",\n  \"definitions\": {\n    \"schemaArray\": {\n      \"type\": \"array\",\n      \"minItems\": 1,\n      \"items\": {\"$ref\": \"#\"}\n    },\n    \"nonNegativeInteger\": {\n      \"type\": \"integer\",\n      \"minimum\": 0\n    },\n    \"nonNegativeIntegerDefault0\": {\n      \"allOf\": [{\"$ref\": \"#/definitions/nonNegativeInteger\"}, {\"default\": 0}]\n    },\n    \"simpleTypes\": {\n      \"enum\": [\"array\", \"boolean\", \"integer\", \"null\", \"number\", \"object\", \"string\"]\n    },\n    \"stringArray\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"uniqueItems\": true,\n      \"default\": []\n    }\n  },\n  \"type\": [\"object\", \"boolean\"],\n  \"properties\": {\n    \"$id\": {\n      \"type\": \"string\",\n      \"format\": \"uri-reference\"\n    },\n    \"$schema\": {\n      \"type\": \"string\",\n      \"format\": \"uri\"\n    },\n    \"$ref\": {\n      \"type\": \"string\",\n      \"format\": \"uri-reference\"\n    },\n    \"$comment\": {\n      \"type\": \"string\"\n    },\n    \"title\": {\n      \"type\": \"string\"\n    },\n    \"description\": {\n      \"type\": \"string\"\n    },\n    \"default\": true,\n    \"readOnly\": {\n      \"type\": \"boolean\",\n      \"default\": false\n    },\n    \"examples\": {\n      \"type\": \"array\",\n      \"items\": true\n    },\n    \"multipleOf\": {\n      \"type\": \"number\",\n      \"exclusiveMinimum\": 0\n    },\n    \"maximum\": {\n      \"type\": \"number\"\n    },\n    \"exclusiveMaximum\": {\n      \"type\": \"number\"\n    },\n    \"minimum\": {\n      \"type\": \"number\"\n    },\n    \"exclusiveMinimum\": {\n      \"type\": \"number\"\n    },\n    \"maxLength\": {\"$ref\": \"#/definitions/nonNegativeInteger\"},\n    \"minLength\": {\"$ref\": \"#/definitions/nonNegativeIntegerDefault0\"},\n    \"pattern\": {\n      \"type\": \"string\",\n      \"format\": \"regex\"\n    },\n    \"additionalItems\": {\"$ref\": \"#\"},\n    \"items\": {\n      \"anyOf\": [{\"$ref\": \"#\"}, {\"$ref\": \"#/definitions/schemaArray\"}],\n      \"default\": true\n    },\n    \"maxItems\": {\"$ref\": \"#/definitions/nonNegativeInteger\"},\n    \"minItems\": {\"$ref\": \"#/definitions/nonNegativeIntegerDefault0\"},\n    \"uniqueItems\": {\n      \"type\": \"boolean\",\n      \"default\": false\n    },\n    \"contains\": {\"$ref\": \"#\"},\n    \"maxProperties\": {\"$ref\": \"#/definitions/nonNegativeInteger\"},\n    \"minProperties\": {\"$ref\": \"#/definitions/nonNegativeIntegerDefault0\"},\n    \"required\": {\"$ref\": \"#/definitions/stringArray\"},\n    \"additionalProperties\": {\"$ref\": \"#\"},\n    \"definitions\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\"$ref\": \"#\"},\n      \"default\": {}\n    },\n    \"properties\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\"$ref\": \"#\"},\n      \"default\": {}\n    },\n    \"patternProperties\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\"$ref\": \"#\"},\n      \"propertyNames\": {\"format\": \"regex\"},\n      \"default\": {}\n    },\n    \"dependencies\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"anyOf\": [{\"$ref\": \"#\"}, {\"$ref\": \"#/definitions/stringArray\"}]\n      }\n    },\n    \"propertyNames\": {\"$ref\": \"#\"},\n    \"const\": true,\n    \"enum\": {\n      \"type\": \"array\",\n      \"items\": true,\n      \"minItems\": 1,\n      \"uniqueItems\": true\n    },\n    \"type\": {\n      \"anyOf\": [\n        {\"$ref\": \"#/definitions/simpleTypes\"},\n        {\n          \"type\": \"array\",\n          \"items\": {\"$ref\": \"#/definitions/simpleTypes\"},\n          \"minItems\": 1,\n          \"uniqueItems\": true\n        }\n      ]\n    },\n    \"format\": {\"type\": \"string\"},\n    \"contentMediaType\": {\"type\": \"string\"},\n    \"contentEncoding\": {\"type\": \"string\"},\n    \"if\": {\"$ref\": \"#\"},\n    \"then\": {\"$ref\": \"#\"},\n    \"else\": {\"$ref\": \"#\"},\n    \"allOf\": {\"$ref\": \"#/definitions/schemaArray\"},\n    \"anyOf\": {\"$ref\": \"#/definitions/schemaArray\"},\n    \"oneOf\": {\"$ref\": \"#/definitions/schemaArray\"},\n    \"not\": {\"$ref\": \"#\"}\n  },\n  \"default\": true\n}\n", "import type {AnySchemaObject} from \"./types\"\nimport AjvCore from \"./core\"\nimport draft7Vocabularies from \"./vocabularies/draft7\"\nimport discriminator from \"./vocabularies/discriminator\"\nimport * as draft7MetaSchema from \"./refs/json-schema-draft-07.json\"\n\nconst META_SUPPORT_DATA = [\"/properties\"]\n\nconst META_SCHEMA_ID = \"http://json-schema.org/draft-07/schema\"\n\nexport class Ajv extends AjvCore {\n  _addVocabularies(): void {\n    super._addVocabularies()\n    draft7Vocabularies.forEach((v) => this.addVocabulary(v))\n    if (this.opts.discriminator) this.addKeyword(discriminator)\n  }\n\n  _addDefaultMetaSchema(): void {\n    super._addDefaultMetaSchema()\n    if (!this.opts.meta) return\n    const metaSchema = this.opts.$data\n      ? this.$dataMetaSchema(draft7MetaSchema, META_SUPPORT_DATA)\n      : draft7MetaSchema\n    this.addMetaSchema(metaSchema, META_SCHEMA_ID, false)\n    this.refs[\"http://json-schema.org/schema\"] = META_SCHEMA_ID\n  }\n\n  defaultMeta(): string | AnySchemaObject | undefined {\n    return (this.opts.defaultMeta =\n      super.defaultMeta() || (this.getSchema(META_SCHEMA_ID) ? META_SCHEMA_ID : undefined))\n  }\n}\n\nmodule.exports = exports = Ajv\nmodule.exports.Ajv = Ajv\nObject.defineProperty(exports, \"__esModule\", {value: true})\n\nexport default Ajv\n\nexport {\n  Format,\n  FormatDefinition,\n  AsyncFormatDefinition,\n  KeywordDefinition,\n  KeywordErrorDefinition,\n  CodeKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n  Vocabulary,\n  Schema,\n  SchemaObject,\n  AnySchemaObject,\n  AsyncSchema,\n  AnySchema,\n  ValidateFunction,\n  AsyncValidateFunction,\n  SchemaValidateFunction,\n  ErrorObject,\n  ErrorNoParams,\n} from \"./types\"\n\nexport {Plugin, Options, CodeOptions, InstanceOptions, Logger, ErrorsTextOptions} from \"./core\"\nexport {SchemaCxt, SchemaObjCxt} from \"./compile\"\nexport {KeywordCxt} from \"./compile/validate\"\nexport {DefinedError} from \"./vocabularies/errors\"\nexport {JSONType} from \"./compile/rules\"\nexport {JSONSchemaType} from \"./types/json-schema\"\nexport {_, str, stringify, nil, Name, Code, CodeGen, CodeGenOptions} from \"./compile/codegen\"\nexport {default as ValidationError} from \"./runtime/validation_error\"\nexport {default as MissingRefError} from \"./compile/ref_error\"\n", "\"use strict\"\nmodule.exports = function localize_zh(errors) {\n  if (!(errors && errors.length)) return\n  for (const e of errors) {\n    let out\n    switch (e.keyword) {\n      case \"additionalItems\":\n      case \"items\":\n        out = \"\"\n        var n = e.params.limit\n        out += \"\u4E0D\u5141\u8BB8\u8D85\u8FC7\" + n + \"\u4E2A\u5143\u7D20\"\n        break\n      case \"additionalProperties\":\n        out = \"\u4E0D\u5141\u8BB8\u6709\u989D\u5916\u7684\u5C5E\u6027\"\n        break\n      case \"anyOf\":\n        out = \"\u6570\u636E\u5E94\u4E3A anyOf \u6240\u6307\u5B9A\u7684\u5176\u4E2D\u4E00\u4E2A\"\n        break\n      case \"const\":\n        out = \"\u5E94\u5F53\u7B49\u4E8E\u5E38\u91CF\"\n        break\n      case \"contains\":\n        out = \"\u5E94\u5F53\u5305\u542B\u4E00\u4E2A\u6709\u6548\u9879\"\n        break\n      case \"dependencies\":\n      case \"dependentRequired\":\n        out = \"\"\n        var n = e.params.depsCount\n        out += \"\u5E94\u5F53\u62E5\u6709\u5C5E\u6027\" + e.params.property + \"\u7684\u4F9D\u8D56\u5C5E\u6027\" + e.params.deps\n        break\n      case \"discriminator\":\n        switch (e.params.error) {\n          case \"tag\":\n            out = '\u6807\u7B7E \"' + e.params.tag + '\" \u7684\u7C7B\u578B\u5FC5\u987B\u4E3A\u5B57\u7B26\u4E32'\n            break\n          case \"mapping\":\n            out = '\u6807\u7B7E \"' + e.params.tag + '\" \u7684\u503C\u5FC5\u987B\u5728 oneOf \u4E4B\u4E2D'\n            break\n          default:\n            out = '\u5E94\u5F53\u901A\u8FC7 \"' + e.keyword + ' \u5173\u952E\u8BCD\u6821\u9A8C\"'\n        }\n        break\n      case \"enum\":\n        out = \"\u5E94\u5F53\u662F\u9884\u8BBE\u5B9A\u7684\u679A\u4E3E\u503C\u4E4B\u4E00\"\n        break\n      case \"false schema\":\n        out = \"\u5E03\u5C14\u6A21\u5F0F\u51FA\u9519\"\n        break\n      case \"format\":\n        out = '\u5E94\u5F53\u5339\u914D\u683C\u5F0F \"' + e.params.format + '\"'\n        break\n      case \"formatMaximum\":\n      case \"formatExclusiveMaximum\":\n        out = \"\"\n        var cond = e.params.comparison + \" \" + e.params.limit\n        out += \"\u5E94\u5F53\u662F \" + cond\n        break\n      case \"formatMinimum\":\n      case \"formatExclusiveMinimum\":\n        out = \"\"\n        var cond = e.params.comparison + \" \" + e.params.limit\n        out += \"\u5E94\u5F53\u662F \" + cond\n        break\n      case \"if\":\n        out = '\u5E94\u5F53\u5339\u914D\u6A21\u5F0F \"' + e.params.failingKeyword + '\" '\n        break\n      case \"maximum\":\n      case \"exclusiveMaximum\":\n        out = \"\"\n        var cond = e.params.comparison + \" \" + e.params.limit\n        out += \"\u5E94\u5F53\u4E3A \" + cond\n        break\n      case \"maxItems\":\n        out = \"\"\n        var n = e.params.limit\n        out += \"\u4E0D\u5E94\u591A\u4E8E \" + n + \" \u4E2A\u9879\"\n        break\n      case \"maxLength\":\n        out = \"\"\n        var n = e.params.limit\n        out += \"\u4E0D\u5E94\u591A\u4E8E \" + n + \" \u4E2A\u5B57\u7B26\"\n        break\n      case \"maxProperties\":\n        out = \"\"\n        var n = e.params.limit\n        out += \"\u4E0D\u5E94\u6709\u591A\u4E8E \" + n + \" \u4E2A\u5C5E\u6027\"\n        break\n      case \"minimum\":\n      case \"exclusiveMinimum\":\n        out = \"\"\n        var cond = e.params.comparison + \" \" + e.params.limit\n        out += \"\u5E94\u5F53\u4E3A \" + cond\n        break\n      case \"minItems\":\n        out = \"\"\n        var n = e.params.limit\n        out += \"\u4E0D\u5E94\u5C11\u4E8E \" + n + \" \u4E2A\u9879\"\n        break\n      case \"minLength\":\n        out = \"\"\n        var n = e.params.limit\n        out += \"\u4E0D\u5E94\u5C11\u4E8E \" + n + \" \u4E2A\u5B57\u7B26\"\n        break\n      case \"minProperties\":\n        out = \"\"\n        var n = e.params.limit\n        out += \"\u4E0D\u5E94\u6709\u5C11\u4E8E \" + n + \" \u4E2A\u5C5E\u6027\"\n        break\n      case \"multipleOf\":\n        out = \"\u5E94\u5F53\u662F \" + e.params.multipleOf + \" \u7684\u6574\u6570\u500D\"\n        break\n      case \"not\":\n        out = '\u4E0D\u5E94\u5F53\u5339\u914D \"not\" schema'\n        break\n      case \"oneOf\":\n        out = '\u53EA\u80FD\u5339\u914D\u4E00\u4E2A \"oneOf\" \u4E2D\u7684 schema'\n        break\n      case \"pattern\":\n        out = '\u5E94\u5F53\u5339\u914D\u6A21\u5F0F \"' + e.params.pattern + '\"'\n        break\n      case \"patternRequired\":\n        out = \"\u5E94\u5F53\u6709\u5C5E\u6027\u5339\u914D\u6A21\u5F0F \" + e.params.missingPattern\n        break\n      case \"propertyNames\":\n        out = \"\u5C5E\u6027\u540D \u65E0\u6548\"\n        break\n      case \"required\":\n        out = \"\u5E94\u5F53\u6709\u5FC5\u9700\u5C5E\u6027 \" + e.params.missingProperty\n        break\n      case \"type\":\n        out = \"\u5E94\u5F53\u662F \" + e.params.type + \" \u7C7B\u578B\"\n        break\n      case \"unevaluatedItems\":\n        out = \"\"\n        var n = e.params.len\n        out += \" \u4E0D\u5141\u8BB8\u6709\u8D85\u8FC7 \" + n + \" \u4E2A\u5143\u7D20\"\n        break\n      case \"unevaluatedProperties\":\n        out = \"\u4E0D\u5141\u8BB8\u5B58\u5728\u672A\u6C42\u503C\u7684\u5C5E\u6027\"\n        break\n      case \"uniqueItems\":\n        out =\n          \"\u4E0D\u5E94\u5F53\u542B\u6709\u91CD\u590D\u9879 (\u7B2C \" +\n          e.params.j +\n          \" \u9879\u4E0E\u7B2C \" +\n          e.params.i +\n          \" \u9879\u662F\u91CD\u590D\u7684)\"\n        break\n      default:\n        out = '\u5E94\u5F53\u901A\u8FC7 \"' + e.keyword + ' \u5173\u952E\u8BCD\u6821\u9A8C\"'\n    }\n    e.message = out\n  }\n}\n", "import Ajv from \"ajv\";\r\nimport { INNER_TYPE_FN, INNER_THROW_FN } from \"./constant.js\";\r\nconst localize = require(\"ajv-i18n/localize/zh\");\r\n\r\nconst ajv = new Ajv({ allErrors: true });\r\n\r\nexport default class JSONSchema {\r\n    #validate;\r\n\r\n    constructor(...params) {\r\n        if (params.length !== 1) {\r\n            throw new Error(\"\u53EA\u80FD\u4F20\u5165\u4E00\u4E2A\u5BF9\u8C61\u3002\");\r\n        }\r\n\r\n        if (typeof params[0] !== \"object\") {\r\n            throw new TypeError(\"\u53C2\u6570\u5FC5\u987B\u662F\u5BF9\u8C61\u3002\");\r\n        }\r\n\r\n        this.#validate = ajv.compile(params[0]);\r\n    }\r\n\r\n    [INNER_TYPE_FN](obj) {\r\n        return !!this.#validate(obj);\r\n    }\r\n\r\n    [INNER_THROW_FN](obj) {\r\n        if (!this.#validate(obj)) {\r\n            localize(this.#validate.errors);\r\n            return \"JSON Schema \u6821\u9A8C\u9519\u8BEF\uFF1A\\n\" + JSON.stringify(this.#validate.errors, null, 2);\r\n        }\r\n        return \"\";\r\n    }\r\n}", "/**\r\n * \u4EFB\u610F\u7C7B\u578B\u6807\u5FD7\r\n */\r\nexport const ANY_STR = \"*\";\r\n\r\n/**\r\n * \u5269\u4F59\u53C2\u6570\u6807\u5FD7\r\n */\r\nexport const REST_STR = \"...\";\r\n\r\n/**\r\n * \u7C7B\u578B\u8F6C\u6362\u6807\u5FD7\r\n */\r\nexport const TYPE_CONVERT_STR = \"\u21C4\";\r\n\r\n/**\r\n * \u5185\u90E8\u7C7B\u578B\u7236\u7EA7\u6807\u5FD7\r\n */\r\nexport const INNER_TYPE_FATHER = \"##INNER_TYPE##\";\r\n\r\n/**\r\n * \u5185\u90E8\u7C7B\u578B\u5B50\u7EA7\u6807\u5FD7\r\n */\r\nexport const INNER_TYPE_SON = \"@@INNER_TYPE@@\";\r\n\r\n/**\r\n * \u5185\u90E8\u629B\u51FA\u51FD\u6570\u6807\u5FD7\r\n */\r\nexport const INNER_THROW_FN = \"##INNER_THROW_FN##\";\r\n\r\n/**\r\n * \u5185\u90E8\u7C7B\u578B\u51FD\u6570\u6807\u5FD7\r\n */\r\nexport const INNER_TYPE_FN = \"##INNER_TYPE_FN##\";", "import overload from \"@jyostudio/overload\";\r\nimport JSONSchema from \"@jyostudio/overload/dist/jsonSchema.js\";\r\n\r\n/**\r\n * @template T\r\n * @class List\r\n */\r\nexport default class List {\r\n    /**\r\n     * \u5143\u7D20\u5217\u8868\r\n     * @type {T[]}\r\n     */\r\n    #list = [];\r\n\r\n    /**\r\n     * \u5185\u90E8\u7C7B\u578B\r\n     * @type {T}\r\n     */\r\n    #innerType = null;\r\n\r\n    /**\r\n     * \u4EE3\u7406\r\n     * @type {Proxy<List>}\r\n     */\r\n    #proxy = null;\r\n\r\n    get length() {\r\n        return this.#list.length;\r\n    }\r\n\r\n    get [Symbol.isConcatSpreadable]() {\r\n        return true;\r\n    }\r\n\r\n    get [Symbol.toStringTag]() {\r\n        return `List<${this.#innerType.name}>`;\r\n    }\r\n\r\n    static #_constructor = function (...params) {\r\n        List.#_constructor = overload()\r\n            .add([[Function, JSONSchema]],\r\n                /**\r\n                 * @this {List<T>}\r\n                 * @param {T} innerType - \u5185\u90E8\u7C7B\u578B\r\n                 */\r\n                function (innerType) {\r\n                    this.#innerType = innerType;\r\n                })\r\n            .add([[Function, JSONSchema], [Array, List.T(typeof params?.[0] === \"function\" ? params[0] : class { })]],\r\n                /**\r\n                 * @this {List<T>}\r\n                 * @param {T} innerType - \u5185\u90E8\u7C7B\u578B\r\n                 * @param {T[] | List<T>} list - \u5217\u8868\r\n                 */\r\n                function (innerType, list) {\r\n                    this.#innerType = innerType;\r\n                    for (let item of list) {\r\n                        this.add(item);\r\n                    }\r\n                })\r\n            .add([[Function, JSONSchema], Number], function (innerType, count) {\r\n                this.#innerType = innerType;\r\n                let defaultValue;\r\n\r\n                if (innerType === Number) defaultValue = 0;\r\n                else if (innerType === String) defaultValue = \"\";\r\n                else if (innerType === Boolean) defaultValue = false;\r\n                else if (innerType === BigInt) defaultValue = BigInt(0);\r\n                else if (innerType === Symbol) defaultValue = Symbol();\r\n                else defaultValue = null;\r\n\r\n                for (let i = 0; i < count; i++) {\r\n                    this.add(innerType?.[\"##STRUCT_CONSTURCTOR##\"]?.() || defaultValue);\r\n                }\r\n            });\r\n\r\n        return List.#_constructor.call(this, ...params);\r\n    };\r\n\r\n    constructor(...params) {\r\n        List.#_constructor.apply(this, params);\r\n\r\n        return this.#initProxy();\r\n    }\r\n\r\n    static T(...params) {\r\n        const CACHE_T_PROXY = new WeakMap();\r\n\r\n        List.T = overload([[Function, JSONSchema]], function (innerType) {\r\n            let proxy = CACHE_T_PROXY.get(innerType);\r\n            !proxy && CACHE_T_PROXY.set(innerType, proxy = new Proxy(List, {\r\n                get: (target, prop, receiver) => {\r\n                    if (prop === \"##INNER_TYPE##\") {\r\n                        return innerType;\r\n                    }\r\n                    return target[prop];\r\n                }\r\n            }));\r\n\r\n            return proxy;\r\n        });\r\n\r\n        return List.T(...params);\r\n    }\r\n\r\n    #initProxy() {\r\n        return this.#proxy = new Proxy(this, {\r\n            get: (target, prop, receiver) => {\r\n                if (prop === \"@@INNER_TYPE@@\") {\r\n                    return this.#innerType;\r\n                }\r\n\r\n                let result = null;\r\n\r\n                if (typeof prop === \"symbol\") {\r\n                    result = this[prop];\r\n                } else if (typeof prop === \"string\") {\r\n                    if (/^\\d+$/.test(prop)) {\r\n                        result = this.#list[prop];\r\n                    } else {\r\n                        result = this[prop];\r\n                    }\r\n                }\r\n\r\n                if (typeof result === \"function\") {\r\n                    return result.bind(this);\r\n                }\r\n\r\n                return result;\r\n            },\r\n            set: (target, prop, value, receiver) => {\r\n                if (typeof prop === \"string\" && /^\\d+$/.test(prop)) {\r\n                    if (prop >= this.#list.length) {\r\n                        throw new Error(`\u7D22\u5F15 ${prop} \u8D85\u51FA\u8303\u56F4\uFF0C\u5217\u8868\u957F\u5EA6\u4E3A ${this.#list.length}\u3002`);\r\n                    }\r\n\r\n                    overload([this.#innerType],\r\n                        /**\r\n                         * @param {T} value - \u503C\r\n                         */\r\n                        (value) => {\r\n                            this.#list[prop] = value;\r\n                        }).call(this, value);\r\n\r\n                    return true;\r\n                }\r\n\r\n                throw new Error(`\u65E0\u6CD5\u5728\u6B64\u5217\u8868\u4E0A\u8BBE\u7F6E\u5C5E\u6027 ${prop}\u3002`);\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {Number} index - \u7D22\u5F15\r\n     * @throws {Error}\r\n     */\r\n    #rangeCheck(index) {\r\n        if (index < 0) {\r\n            throw new Error(`\u7D22\u5F15 ${index} \u8D85\u51FA\u8303\u56F4\uFF0C\u7D22\u5F15\u5FC5\u987B\u5927\u4E8E\u6216\u7B49\u4E8E 0\u3002`);\r\n        }\r\n\r\n        if (index >= this.#list.length) {\r\n            throw new Error(`\u7D22\u5F15 ${index} \u8D85\u51FA\u8303\u56F4\uFF0C\u5217\u8868\u957F\u5EA6\u4E3A ${this.#list.length}\u3002`);\r\n        }\r\n    }\r\n\r\n    [Symbol.iterator] = function* () {\r\n        for (let i = 0; i < this.#list.length; i++) {\r\n            yield this.#list[i];\r\n        }\r\n    }\r\n\r\n    add(...params) {\r\n        this.add = overload([[this.#innerType, null]],\r\n            /**\r\n             * @this {List<T>}\r\n             * @param {T | null} item \r\n             */\r\n            function (item) {\r\n                this.#list.push(item);\r\n            });\r\n\r\n        return this.add(...params);\r\n    }\r\n\r\n    addRange(...params) {\r\n        List.prototype.addRange = overload([[Array, List]],\r\n            /**\r\n             * @this {List<T>}\r\n             * @param {T[] | List<T>} list - \u5217\u8868\r\n             */\r\n            function (list) {\r\n                for (let item of list) {\r\n                    this.add(item);\r\n                }\r\n            }).any(\r\n                /**\r\n                 * @this {List<T>}\r\n                 * @param {T[]} items - \u9879\u76EE\r\n                 */\r\n                function (...items) {\r\n                    for (let item of items) {\r\n                        this.add(item);\r\n                    }\r\n                });\r\n\r\n        return this.addRange(...params);\r\n    }\r\n\r\n    asReadOnly(...params) {\r\n        const ignore = [\"add\", \"addRange\", \"insert\", \"insertRange\", \"remove\", \"removeAt\", \"removeAll\", \"removeRange\", \"clear\", \"reverse\", \"sort\", \"asReadOnly\"];\r\n\r\n        List.prototype.asReadOnly = overload([],\r\n            /**\r\n             * @this {List<T>}\r\n             * @returns {Proxy<List<T>>}\r\n             */\r\n            function () {\r\n                return new Proxy(this, {\r\n                    get: (target, prop, receiver) => {\r\n                        if (ignore.includes(prop)) {\r\n                            throw new Error(`\u65E0\u6CD5\u8BBF\u95EE\u53EA\u8BFB\u5217\u8868\u4E0A\u7684\u65B9\u6CD5 ${prop}\u3002`);\r\n                        }\r\n\r\n                        return this.#proxy[prop];\r\n                    },\r\n                    set: (target, prop, value, receiver) => {\r\n                        throw new Error(`\u65E0\u6CD5\u5728\u53EA\u8BFB\u5217\u8868\u4E0A\u8BBE\u7F6E\u5C5E\u6027 ${prop}\u3002`);\r\n                    }\r\n                });\r\n            });\r\n\r\n        return this.asReadOnly(...params);\r\n    }\r\n\r\n    concat(...params) {\r\n        List.prototype.concat = overload([[Array, List]],\r\n            /**\r\n             * @this {List<T>}\r\n             * @param {T[] | List<T>} list - \u5217\u8868\r\n             */\r\n            function (list) {\r\n                /**\r\n                 * @type {List<T>}\r\n                 */\r\n                const newList = new List(this.#innerType);\r\n                for (let item of this) {\r\n                    newList.add(item);\r\n                }\r\n                for (let item of list) {\r\n                    newList.add(item);\r\n                }\r\n                return newList;\r\n            });\r\n\r\n        return this.concat(...params);\r\n    }\r\n\r\n    clear(...params) {\r\n        List.prototype.clear = overload([],\r\n            /**\r\n             * @this {List<T>}\r\n             */\r\n            function () {\r\n                this.#list = [];\r\n            });\r\n\r\n        return this.clear(...params);\r\n    }\r\n\r\n    clone(...params) {\r\n        List.prototype.clone = overload([],\r\n            /**\r\n             * @this {List<T>}\r\n             * @returns {List<T>}\r\n             */\r\n            function () {\r\n                return new List(this.#innerType, this);\r\n            });\r\n\r\n        return this.clone(...params);\r\n    }\r\n\r\n    contains(...params) {\r\n        this.contains = overload([this.#innerType],\r\n            /**\r\n             * @this {List<T>}\r\n             * @param {T} item\r\n             * @returns {Boolean}\r\n             */\r\n            function (item) {\r\n                return this.#list.includes(item);\r\n            });\r\n\r\n        return this.contains(...params);\r\n    }\r\n\r\n    copyTo(...params) {\r\n        List.prototype.copyTo = overload()\r\n            .add([Array],\r\n                /**\r\n                 * @this {List<T>}\r\n                 * @param {T[]} array - \u6570\u7EC4\r\n                 */\r\n                function (array) {\r\n                    this.#list.forEach((item, index) => {\r\n                        array[index] = item;\r\n                    });\r\n                })\r\n            .add([Array, Number],\r\n                /**\r\n                 * @this {List<T>}\r\n                 * @param {T[]} array - \u6570\u7EC4\r\n                 * @param {Number} arrayIndex - \u6570\u7EC4\u7D22\u5F15\r\n                 */\r\n                function (array, arrayIndex) {\r\n                    this.#list.forEach((item, index) => {\r\n                        array[arrayIndex + index] = item;\r\n                    });\r\n                })\r\n            .add([Array, Number, Number],\r\n                /**\r\n                 * @this {List<T>}\r\n                 * @param {T[]} array - \u6570\u7EC4\r\n                 * @param {Number} arrayIndex - \u6570\u7EC4\u7D22\u5F15\r\n                 * @param {Number} count - \u6570\u91CF\r\n                 */\r\n                function (array, arrayIndex, count) {\r\n                    for (let i = 0; i < count; i++) {\r\n                        array[arrayIndex + i] = this.#list[i];\r\n                    }\r\n                });\r\n\r\n        return this.copyTo(...params);\r\n    }\r\n\r\n    exists(...params) {\r\n        List.prototype.exists = overload([Function],\r\n            /**\r\n             * @this {List<T>}\r\n             * @param {Function} predicate - \u8C13\u8BCD\r\n             * @returns {Boolean}\r\n             */\r\n            function (predicate) {\r\n                return this.#list.some(predicate);\r\n            });\r\n\r\n        return this.exists(...params);\r\n    }\r\n\r\n    forEach(...params) {\r\n        List.prototype.forEach = overload([Function],\r\n            /**\r\n             * @this {List<T>}\r\n             * @param {Function} callback - \u56DE\u8C03\r\n             */\r\n            function (callback) {\r\n                this.#list.forEach(callback);\r\n            });\r\n\r\n        return this.forEach(...params);\r\n    }\r\n\r\n    find(...params) {\r\n        List.prototype.find = overload([Function],\r\n            /**\r\n             * @this {List<T>}\r\n             * @param {Function} predicate - \u8C13\u8BCD\r\n             * @returns {T?}\r\n             */\r\n            function (predicate) {\r\n                return this.#list.find(predicate);\r\n            });\r\n\r\n        return this.find(...params);\r\n    }\r\n\r\n    findIndex(...params) {\r\n        List.prototype.findIndex = overload([Function],\r\n            /**\r\n             * @this {List<T>}\r\n             * @param {Function} predicate - \u8C13\u8BCD\r\n             * @returns {Number}\r\n             */\r\n            function (predicate) {\r\n                return this.#list.findIndex(predicate);\r\n            });\r\n\r\n        return this.findIndex(...params);\r\n    }\r\n\r\n    findLast(...params) {\r\n        List.prototype.findLast = overload([Function],\r\n            /**\r\n             * @this {List<T>}\r\n             * @param {Function} predicate - \u8C13\u8BCD\r\n             * @returns {T?} \r\n             */\r\n            function (predicate) {\r\n                this.#list.reverse();\r\n                let find = this.#list.find(predicate);\r\n                this.#list.reverse();\r\n                return find;\r\n            });\r\n\r\n        return this.findLast(...params);\r\n    }\r\n\r\n    findLastIndex(...params) {\r\n        List.prototype.findLastIndex = overload([Function],\r\n            /**\r\n             * @this {List<T>}\r\n             * @param {Function} predicate - \u8C13\u8BCD\r\n             * @returns {Number}\r\n             */\r\n            function (predicate) {\r\n                this.#list.reverse();\r\n                let find = this.#list.findIndex(predicate);\r\n                this.#list.reverse();\r\n                return find;\r\n            });\r\n\r\n        return this.findLastIndex(...params);\r\n    }\r\n\r\n    getInnerType(...params) {\r\n        List.prototype.getInnerType = overload([],\r\n            /**\r\n             * @this {List<T>}\r\n             * @returns {T}\r\n             */\r\n            function () {\r\n                return this.#innerType;\r\n            });\r\n\r\n        return this.getInnerType(...params);\r\n    }\r\n\r\n    insert(...params) {\r\n        this.insert = overload([Number, [this.#innerType, null]],\r\n            /**\r\n             * @this {List<T>}\r\n             * @param {Number} index - \u7D22\u5F15\r\n             * @param {T | null} item - \u9879\u76EE\r\n             */\r\n            function (index, item) {\r\n                this.#rangeCheck(index);\r\n\r\n                this.#list.splice(index, 0, item);\r\n            });\r\n\r\n        return this.insert(...params);\r\n    }\r\n\r\n    insertRange(...params) {\r\n        List.prototype.insertRange = overload([Number, [Array, List]],\r\n            /**\r\n             * @this {List<T>}\r\n             * @param {Number} index - \u7D22\u5F15\r\n             * @param {T[] | List<T>} list - \u5217\u8868\r\n             */\r\n            function (index, list) {\r\n                this.#rangeCheck(index);\r\n\r\n                for (let item of list) {\r\n                    this.insert(index++, item);\r\n                }\r\n            }).add([Number, \"...\"],\r\n                /**\r\n                 * @this {List<T>}\r\n                 * @param {Number} index - \u7D22\u5F15\r\n                 * @param {T[]} items - \u9879\u76EE\r\n                 */\r\n                function (index, ...items) {\r\n                    this.#rangeCheck(index);\r\n\r\n                    for (let item of items) {\r\n                        this.insert(index++, item);\r\n                    }\r\n                });\r\n\r\n        return this.insertRange(...params);\r\n    }\r\n\r\n    indexOf(...params) {\r\n        this.indexOf = overload([this.#innerType],\r\n            /**\r\n             * @this {List<T>}\r\n             * @param {T} item - \u9879\u76EE\r\n             * @returns {Number}\r\n             */\r\n            function (item) {\r\n                return this.#list.indexOf(item);\r\n            });\r\n\r\n        return this.indexOf(...params);\r\n    }\r\n\r\n    lastIndexOf(...params) {\r\n        this.lastIndexOf = overload([this.#innerType],\r\n            /**\r\n             * @this {List<T>}\r\n             * @param {T} item - \u9879\u76EE\r\n             * @returns {Number}\r\n             */\r\n            function (item) {\r\n                return this.#list.lastIndexOf(item);\r\n            });\r\n\r\n        return this.lastIndexOf(...params);\r\n    }\r\n\r\n    remove(...params) {\r\n        this.remove = overload([this.#innerType],\r\n            /**\r\n             * @this {List<T>}\r\n             * @param {T} item - \u9879\u76EE\r\n             * @returns {Boolean}\r\n             */\r\n            function (item) {\r\n                const index = this.#list.indexOf(item);\r\n\r\n                if (index !== -1) {\r\n                    this.#list.splice(index, 1);\r\n                    return true;\r\n                }\r\n\r\n                return false;\r\n            });\r\n\r\n        return this.remove(...params);\r\n    }\r\n\r\n    removeAt(...params) {\r\n        List.prototype.removeAt = overload([Number],\r\n            /**\r\n             * @this {List<T>}\r\n             * @param {Number} index - \u7D22\u5F15 \r\n             */\r\n            function (index) {\r\n                this.#rangeCheck(index);\r\n\r\n                this.#list.splice(index, 1);\r\n            });\r\n\r\n        return this.removeAt(...params);\r\n    }\r\n\r\n    removeAll(...params) {\r\n        List.prototype.removeAll = overload([Function],\r\n            /**\r\n             * @this {List<T>}\r\n             * @param {Function} predicate - \u8C13\u8BCD\r\n             * @returns {Number}\r\n             */\r\n            function (predicate) {\r\n                let count = 0;\r\n\r\n                for (let i = this.#list.length - 1; i >= 0; i--) {\r\n                    if (predicate(this.#list[i])) {\r\n                        this.#list.splice(i, 1);\r\n                        count++;\r\n                    }\r\n                }\r\n\r\n                return count;\r\n            });\r\n\r\n        return this.removeAll(...params);\r\n    }\r\n\r\n    removeRange(...params) {\r\n        List.prototype.removeRange = overload([Number, Number],\r\n            /**\r\n             * @this {List<T>}\r\n             * @param {Number} index - \u7D22\u5F15\r\n             * @param {Number} count - \u6570\u91CF\r\n             */\r\n            function (index, count) {\r\n                this.#rangeCheck(index);\r\n                this.#rangeCheck(index + count - 1);\r\n\r\n                this.#list.splice(index, count);\r\n            });\r\n\r\n        return this.removeRange(...params);\r\n    }\r\n\r\n    reverse(...params) {\r\n        List.prototype.reverse = overload([],\r\n            /**\r\n             * @this {List<T>}\r\n             */\r\n            function () {\r\n                this.#list.reverse();\r\n            })\r\n            .add([Number, Number],\r\n                /**\r\n                 * @this {List<T>}\r\n                 * @param {Number} index - \u7D22\u5F15\r\n                 * @param {Number} count - \u6570\u91CF \r\n                 */\r\n                function (index, count) {\r\n                    this.#rangeCheck(index);\r\n                    this.#rangeCheck(index + count - 1);\r\n\r\n                    const temp = this.#list.splice(index, count);\r\n                    temp.reverse();\r\n                    this.#list.splice(index, 0, ...temp);\r\n                });\r\n\r\n        return this.reverse(...params);\r\n    }\r\n\r\n    slice(...params) {\r\n        List.prototype.slice = overload().add([Number, Number],\r\n            /**\r\n             * @this {List<T>}\r\n             * @param {Number} start - \u5F00\u59CB\r\n             * @param {Number} end - \u7ED3\u675F\r\n             * @returns {List<T>}\r\n             */\r\n            function (start, end) {\r\n                return new List(this.#innerType, this.#list.slice(start, end));\r\n            });\r\n\r\n        return this.slice(...params);\r\n    }\r\n\r\n    sort(...params) {\r\n        List.prototype.sort = overload()\r\n            .add([],\r\n                /**\r\n                 * @this {List<T>}\r\n                 */\r\n                function () {\r\n                    this.#list.sort();\r\n                })\r\n            .add([Function],\r\n                /**\r\n                 * @this {List<T>}\r\n                 * @param {Function} compareFn - \u6BD4\u8F83\u51FD\u6570 \r\n                 */\r\n                function (compareFn) {\r\n                    this.#list.sort(compareFn);\r\n                });\r\n\r\n        return this.sort(...params);\r\n    }\r\n\r\n    toArray(...params) {\r\n        List.prototype.toArray = overload([],\r\n            /**\r\n             * @this {List<T>}\r\n             * @returns {T[]}\r\n             */\r\n            function () {\r\n                return this.#list.slice();\r\n            });\r\n\r\n        return this.toArray(...params);\r\n    }\r\n\r\n    trueForAll(...params) {\r\n        List.prototype.trueForAll = overload([Function],\r\n            /**\r\n             * @this {List<T>}\r\n             * @param {Function} predicate - \u8C13\u8BCD\r\n             * @returns {Boolean}\r\n             */\r\n            function (predicate) {\r\n                return this.#list.every(predicate);\r\n            });\r\n\r\n        return this.trueForAll(...params);\r\n    }\r\n\r\n    toString(...params) {\r\n        List.prototype.toString = overload().any(\r\n            /**\r\n             * @this {List<T>}\r\n             * @param  {...any} params - \u53C2\u6570\r\n             * @returns {String}\r\n             */\r\n            function (...params) {\r\n                return this.#list.toString(...params);\r\n            });\r\n\r\n        return this.toString(...params);\r\n    }\r\n}", "import overload from \"@jyostudio/overload\";\r\nimport Encoding from \"./encoding.js\";\r\n\r\nconst CONSTURCTOR_SYMBOL = Symbol(\"constructor\");\r\n\r\nexport default class EncodingInfo {\r\n    #codePage = 0;\r\n\r\n    #displayName = \"\";\r\n\r\n    #name = \"\";\r\n\r\n    #names = null;\r\n\r\n    #encoding = null;\r\n\r\n    get codePage() {\r\n        return this.#codePage;\r\n    }\r\n\r\n    get displayName() {\r\n        return this.#displayName;\r\n    }\r\n\r\n    get name() {\r\n        return this.#name;\r\n    }\r\n\r\n    get names() {\r\n        return this.#names;\r\n    }\r\n\r\n    static [CONSTURCTOR_SYMBOL](...params) {\r\n        EncodingInfo[CONSTURCTOR_SYMBOL] = overload([Number, String, String, Array, Encoding], function (codePage, displayName, name, names, encoding) {\r\n            this.#codePage = codePage;\r\n            this.#displayName = displayName;\r\n            this.#name = name;\r\n            this.#names = names;\r\n            this.#encoding = encoding;\r\n        });\r\n\r\n        return EncodingInfo[CONSTURCTOR_SYMBOL].apply(this, params);\r\n    }\r\n\r\n    constructor(...params) {\r\n        return EncodingInfo[CONSTURCTOR_SYMBOL].apply(this, params);\r\n    }\r\n\r\n    getEncoding(...params) {\r\n        EncodingInfo.prototype.getEncoding = overload([], function () {\r\n            return this.#encoding;\r\n        });\r\n\r\n        return EncodingInfo.prototype.getEncoding.apply(this, params);\r\n    }\r\n\r\n    equals(...params) {\r\n        EncodingInfo.prototype.equals = overload([EncodingInfo], function (other) {\r\n            return (this.#codePage === other.#codePage) &&\r\n                (this.#displayName === other.#displayName) &&\r\n                (this.#name === other.#name) &&\r\n                (this.#names.equals(other.#names)) &&\r\n                (this.#encoding === other.#encoding);\r\n        }).any(() => false);\r\n\r\n        return EncodingInfo.prototype.equals.apply(this, params);\r\n    }\r\n}", "import overload from \"@jyostudio/overload\";\r\nimport List from \"@jyostudio/list\";\r\nimport EncodingInfo from \"./encodingInfo.js\";\r\n\r\nconst CONSTURCTOR_SYMBOL = Symbol(\"constructor\");\r\nconst ENCODINGS = new List(EncodingInfo);\r\n\r\nexport default class Encoding {\r\n    static get ascii() {\r\n        return Encoding.getEncoding(\"us-ascii\");\r\n    }\r\n\r\n    static get utf8() {\r\n        return Encoding.getEncoding(\"utf-8\");\r\n    }\r\n\r\n    static get utf32() {\r\n        return Encoding.getEncoding(\"utf-32\");\r\n    }\r\n\r\n    static get unicode() {\r\n        return Encoding.getEncoding(\"utf-16-le\");\r\n    }\r\n\r\n    static get bigEndianUnicode() {\r\n        return Encoding.getEncoding(\"utf-16-be\");\r\n    }\r\n\r\n    get bodyName() {\r\n        return \"\";\r\n    }\r\n\r\n    get codePage() {\r\n        return 0;\r\n    }\r\n\r\n    get encodingName() {\r\n        return \"\";\r\n    }\r\n\r\n    get headerName() {\r\n        return \"\";\r\n    }\r\n\r\n    get isBrowserDisplay() {\r\n        return true;\r\n    }\r\n\r\n    get isBrowserSave() {\r\n        return true;\r\n    }\r\n\r\n    get isMailNewsDisplay() {\r\n        return true;\r\n    }\r\n\r\n    get isMailNewsSave() {\r\n        return true;\r\n    }\r\n\r\n    get isReadOnly() {\r\n        return true;\r\n    }\r\n\r\n    get isSingleByte() {\r\n        return false;\r\n    }\r\n\r\n    get webName() {\r\n        return \"\";\r\n    }\r\n\r\n    get windowsCodePage() {\r\n        return 0;\r\n    }\r\n\r\n    static [CONSTURCTOR_SYMBOL](...params) {\r\n        Encoding[CONSTURCTOR_SYMBOL] = overload([], function () { });\r\n\r\n        return Encoding[CONSTURCTOR_SYMBOL].apply(this, params);\r\n    }\r\n\r\n    constructor(...params) {\r\n        if (new.target === Encoding) {\r\n            throw new Error(\"\u65E0\u6CD5\u521B\u5EFA\u62BD\u8C61\u7C7B Encoding \u7684\u5B9E\u4F8B\u3002\");\r\n        }\r\n\r\n        return Encoding[CONSTURCTOR_SYMBOL].apply(this, params);\r\n    }\r\n\r\n    static registerEncoding(...params) {\r\n        Encoding.registerEncoding = overload([EncodingInfo], function (encodingInfo) {\r\n            ENCODINGS.add(encodingInfo);\r\n        });\r\n\r\n        return Encoding.registerEncoding.apply(this, params);\r\n    }\r\n\r\n    static convert(...params) {\r\n        Encoding.convert = overload()\r\n            .add([Encoding, Encoding, Uint8Array], function (srcEncoding, dstEncoding, bytes) {\r\n                return Encoding.convert.call(this, srcEncoding, dstEncoding, bytes, 0, bytes.byteLength);\r\n            })\r\n            .add([Encoding, Encoding, Uint8Array, Number, Number], function (srcEncoding, dstEncoding, bytes, index, count) {\r\n                return dstEncoding.getBytes(srcEncoding.getString(bytes, index, count));\r\n            });\r\n\r\n        return Encoding.convert.apply(this, params);\r\n    }\r\n\r\n    static getEncoding(...params) {\r\n        Encoding.getEncoding = overload()\r\n            .add([Number], function (codePage) {\r\n                if (codePage < 0 || codePage > 65535) {\r\n                    throw new RangeError(\"codePage \u8D85\u51FA\u8303\u56F4\u3002\");\r\n                }\r\n\r\n                for (let i = 0; i < ENCODINGS.length; i++) {\r\n                    if (ENCODINGS[i].codePage === codePage) {\r\n                        return ENCODINGS[i].getEncoding();\r\n                    }\r\n                }\r\n\r\n                throw new Error(\"\u672A\u627E\u5230\u7F16\u7801\u3002\");\r\n            })\r\n            .add([String], function (name) {\r\n                for (let i = 0; i < ENCODINGS.length; i++) {\r\n                    const _name = name.toLowerCase();\r\n                    for (let n = 0; n < ENCODINGS[i].names.length; n++) {\r\n                        if (ENCODINGS[i].names[n] === _name) {\r\n                            return ENCODINGS[i].getEncoding();\r\n                        }\r\n                    }\r\n                }\r\n\r\n                throw new Error(\"\u672A\u627E\u5230\u7F16\u7801\u3002\");\r\n            });\r\n\r\n        return Encoding.getEncoding.apply(this, params);\r\n    }\r\n\r\n    static getEncodings(...params) {\r\n        Encoding.getEncodings = overload([], function () {\r\n            return ENCODINGS;\r\n        });\r\n\r\n        return Encoding.getEncodings.apply(this, params);\r\n    }\r\n\r\n    equals(...params) {\r\n        Encoding.equals = overload([Encoding], function (value) {\r\n            return this === value;\r\n        }).any(() => false);\r\n\r\n        return Encoding.equals.apply(this, params);\r\n    }\r\n\r\n    getByteCount(...params) {\r\n        Encoding.getByteCount = overload([String], function (s) { });\r\n\r\n        return Encoding.getByteCount.apply(this, params);\r\n    }\r\n\r\n    getBytes(...params) {\r\n        Encoding.getBytes = overload()\r\n            .add([String], function (s) { })\r\n            .add([String, Number, Number], function (s, index, count) { });\r\n\r\n        return Encoding.getBytes.apply(this, params);\r\n    }\r\n\r\n    getCharCount(...params) {\r\n        Encoding.getCharCount = overload()\r\n            .add([Uint8Array], function (bytes) { })\r\n            .add([Uint8Array, Number, Number], function (bytes, index, count) { });\r\n\r\n        return Encoding.getCharCount.apply(this, params);\r\n    }\r\n\r\n    getPreamble(...params) {\r\n        Encoding.getPreamble = overload([], function () { });\r\n\r\n        return Encoding.getPreamble.apply(this, params);\r\n    }\r\n\r\n    getString(...params) {\r\n        Encoding.getString = overload()\r\n            .add([Uint8Array], function (bytes) { })\r\n            .add([Uint8Array, Number, Number], function (bytes, index, count) { });\r\n\r\n        return Encoding.getString.apply(this, params);\r\n    }\r\n}", "import overload from \"@jyostudio/overload\";\r\nimport Encoding from \"./encoding.js\";\r\nimport EncodingInfo from \"./encodingInfo.js\";\r\n\r\nconst CONSTURCTOR_SYMBOL = Symbol(\"constructor\");\r\n\r\nexport default class UTF8Encoding extends Encoding {\r\n    static #UTF8_CODEPAGE = 65001;\r\n\r\n    static #NAME = \"utf-8\";\r\n\r\n    static #DISPLAY_NAME = \"Unicode (UTF-8)\";\r\n\r\n    static #NAMES = [\"utf-8\", \"utf8\", \"utf_8\"];\r\n\r\n    #emitUTF8Identifier = false;\r\n\r\n    get codePage() {\r\n        return UTF8Encoding.#UTF8_CODEPAGE;\r\n    }\r\n\r\n    get bodyName() {\r\n        return UTF8Encoding.#NAME;\r\n    }\r\n\r\n    get encodingName() {\r\n        return UTF8Encoding.#DISPLAY_NAME;\r\n    }\r\n\r\n    get headerName() {\r\n        return UTF8Encoding.#NAME;\r\n    }\r\n\r\n    get isBrowserDisplay() {\r\n        return true;\r\n    }\r\n\r\n    get isBrowserSave() {\r\n        return true;\r\n    }\r\n\r\n    get isMailNewsDisplay() {\r\n        return true;\r\n    }\r\n\r\n    get isMailNewsSave() {\r\n        return true;\r\n    }\r\n\r\n    get isReadOnly() {\r\n        return true;\r\n    }\r\n\r\n    get isSingleByte() {\r\n        return false;\r\n    }\r\n\r\n    get webName() {\r\n        return UTF8Encoding.#NAME;\r\n    }\r\n\r\n    get windowsCodePage() {\r\n        return 1200;\r\n    }\r\n\r\n    static [CONSTURCTOR_SYMBOL](...params) {\r\n        UTF8Encoding[CONSTURCTOR_SYMBOL] = overload()\r\n            .add([], function () {\r\n                return UTF8Encoding[CONSTURCTOR_SYMBOL].call(this, false);\r\n            })\r\n            .add([Boolean], function (encoderShouldEmitUTF8Identifier) {\r\n                this.#emitUTF8Identifier = encoderShouldEmitUTF8Identifier;\r\n            });\r\n\r\n        return UTF8Encoding[CONSTURCTOR_SYMBOL].apply(this, params);\r\n    }\r\n\r\n    constructor(...params) {\r\n        super();\r\n\r\n        return UTF8Encoding[CONSTURCTOR_SYMBOL].apply(this, params);\r\n    }\r\n\r\n    static #stringToUnit8Array(str) {\r\n        const utf8 = [];\r\n        for (let i = 0; i < str.length; i++) {\r\n            let charCode = str.charCodeAt(i);\r\n            if (charCode < 0x80) {\r\n                utf8.push(charCode);\r\n            } else if (charCode < 0x800) {\r\n                utf8.push(0xc0 | (charCode >> 6),\r\n                    0x80 | (charCode & 0x3f));\r\n            } else if (charCode < 0x10000) {\r\n                utf8.push(0xe0 | (charCode >> 12),\r\n                    0x80 | ((charCode >> 6) & 0x3f),\r\n                    0x80 | (charCode & 0x3f));\r\n            } else {\r\n                utf8.push(0xf0 | (charCode >> 18),\r\n                    0x80 | ((charCode >> 12) & 0x3f),\r\n                    0x80 | ((charCode >> 6) & 0x3f),\r\n                    0x80 | (charCode & 0x3f));\r\n            }\r\n        }\r\n        return new Uint8Array(utf8);\r\n    }\r\n\r\n    static #uint8ArrayToString(arr) {\r\n        let out, i, len, c;\r\n        let char2, char3;\r\n\r\n        out = \"\";\r\n        len = arr.length;\r\n        i = 0;\r\n        while (i < len) {\r\n            c = arr[i++];\r\n            switch (c >> 4) {\r\n                case 0: case 1: case 2: case 3: case 4: case 5: case 6: case 7:\r\n                    // 0xxxxxxx\r\n                    out += String.fromCharCode(c);\r\n                    break;\r\n                case 12: case 13:\r\n                    // 110x xxxx 10xx xxxx\r\n                    char2 = arr[i++];\r\n                    out += String.fromCharCode(((c & 0x1F) << 6) | (char2 & 0x3F));\r\n                    break;\r\n                case 14:\r\n                    // 1110 xxxx 10xx xxxx 10xx xxxx\r\n                    char2 = arr[i++];\r\n                    char3 = arr[i++];\r\n                    out += String.fromCharCode(((c & 0x0F) << 12) |\r\n                        ((char2 & 0x3F) << 6) |\r\n                        ((char3 & 0x3F) << 0));\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    getByteCount(...params) {\r\n        UTF8Encoding.prototype.getByteCount = overload([String], function (s) {\r\n            return this.getBytes(s).byteLength;\r\n        });\r\n\r\n        return UTF8Encoding.prototype.getByteCount.apply(this, params);\r\n    }\r\n\r\n    getBytes(...params) {\r\n        UTF8Encoding.prototype.getBytes = overload()\r\n            .add([String], function (s) {\r\n                return UTF8Encoding.#stringToUnit8Array(s);\r\n            })\r\n            .add([String, Number, Number], function (s, index, count) {\r\n                if (index < 0 || count < 0 || index + count > s.length) {\r\n                    throw new RangeError(\"\u7D22\u5F15\u6216\u6570\u91CF\u8D85\u51FA\u8303\u56F4\u3002\");\r\n                }\r\n\r\n                return UTF8Encoding.#stringToUnit8Array(s.substring(index, index + count));\r\n            });\r\n\r\n        return UTF8Encoding.prototype.getBytes.apply(this, params);\r\n    }\r\n\r\n    getCharCount(...params) {\r\n        UTF8Encoding.prototype.getCharCount = overload()\r\n            .add([Uint8Array], function (bytes) {\r\n                return this.getString(bytes).length;\r\n            })\r\n            .add([Uint8Array, Number, Number], function (bytes, index, count) {\r\n                if (index < 0 || count < 0 || index + count > bytes.length) {\r\n                    throw new RangeError(\"\u7D22\u5F15\u6216\u6570\u91CF\u8D85\u51FA\u8303\u56F4\u3002\");\r\n                }\r\n\r\n                return this.getString(bytes, index, count).length;\r\n            });\r\n\r\n        return UTF8Encoding.prototype.getCharCount.apply(this, params);\r\n    }\r\n\r\n    getPreamble(...params) {\r\n        UTF8Encoding.prototype.getPreamble = overload([], function () {\r\n            return this.#emitUTF8Identifier ? [0xEF, 0xBB, 0xBF] : [];\r\n        });\r\n\r\n        return UTF8Encoding.prototype.getPreamble.apply(this, params);\r\n    }\r\n\r\n    getString(...params) {\r\n        UTF8Encoding.prototype.getString = overload()\r\n            .add([Uint8Array], function (bytes) {\r\n                return UTF8Encoding.#uint8ArrayToString(bytes);\r\n            })\r\n            .add([Uint8Array, Number, Number], function (bytes, index, count) {\r\n                if (index < 0 || count < 0 || index + count > bytes.byteLength) {\r\n                    throw new RangeError(\"\u7D22\u5F15\u6216\u6570\u91CF\u8D85\u51FA\u8303\u56F4\u3002\");\r\n                }\r\n\r\n                return UTF8Encoding.#uint8ArrayToString(new Uint8Array(bytes.buffer, index, count));\r\n            });\r\n\r\n        return UTF8Encoding.prototype.getString.apply(this, params);\r\n    }\r\n\r\n    static {\r\n        Encoding.registerEncoding(new EncodingInfo(this.#UTF8_CODEPAGE, this.#DISPLAY_NAME, this.#NAME, this.#NAMES, new UTF8Encoding()));\r\n    }\r\n}", "import overload from \"@jyostudio/overload\";\r\nimport Encoding from \"./encoding.js\";\r\nimport EncodingInfo from \"./encodingInfo.js\";\r\n\r\nconst CONSTURCTOR_SYMBOL = Symbol(\"constructor\");\r\n\r\nexport default class UnicodeEncoding extends Encoding {\r\n    static #NAME = \"utf-16\";\r\n\r\n    static #DISPLAY_NAME = \"Unicode\";\r\n\r\n    static #NAMES = [\"unicode\", \"utf16\", \"utf-16\", \"utf_16\"];\r\n\r\n    #bigEndian = false;\r\n\r\n    #byteOrderMark = true;\r\n\r\n    static get charSize() {\r\n        return 2;\r\n    }\r\n\r\n    get codePage() {\r\n        return this.#bigEndian ? 1201 : 1200;\r\n    }\r\n\r\n    get bodyName() {\r\n        return UnicodeEncoding.#NAME;\r\n    }\r\n\r\n    get encodingName() {\r\n        return UnicodeEncoding.#DISPLAY_NAME;\r\n    }\r\n\r\n    get headerName() {\r\n        return UnicodeEncoding.#NAME;\r\n    }\r\n\r\n    get isBrowserDisplay() {\r\n        return false;\r\n    }\r\n\r\n    get isBrowserSave() {\r\n        return true;\r\n    }\r\n\r\n    get isMailNewsDisplay() {\r\n        return false;\r\n    }\r\n\r\n    get isMailNewsSave() {\r\n        return false;\r\n    }\r\n\r\n    get isReadOnly() {\r\n        return true;\r\n    }\r\n\r\n    get isSingleByte() {\r\n        return false;\r\n    }\r\n\r\n    get webName() {\r\n        return UnicodeEncoding.#NAME;\r\n    }\r\n\r\n    get windowsCodePage() {\r\n        return 1200;\r\n    }\r\n\r\n    static [CONSTURCTOR_SYMBOL](...params) {\r\n        UnicodeEncoding[CONSTURCTOR_SYMBOL] = overload()\r\n            .add([], function () {\r\n                return UnicodeEncoding[CONSTURCTOR_SYMBOL].call(this, false, true);\r\n            })\r\n            .add([Boolean, Boolean], function (bigEndian, byteOrderMark) {\r\n                this.#bigEndian = bigEndian;\r\n                this.#byteOrderMark = byteOrderMark;\r\n            });\r\n\r\n        return UnicodeEncoding[CONSTURCTOR_SYMBOL].apply(this, params);\r\n    }\r\n\r\n    constructor(...params) {\r\n        super();\r\n\r\n        return UnicodeEncoding[CONSTURCTOR_SYMBOL].apply(this, params);\r\n    }\r\n\r\n    static #stringToUint16Array(str, isBig) {\r\n        const buffer = new Uint8Array(str.length * UnicodeEncoding.charSize);\r\n        const view = new DataView(buffer.buffer);\r\n        for (let i = 0; i < str.length; i++) {\r\n            view.setUint16(i * UnicodeEncoding.charSize, str.charCodeAt(i), !isBig);\r\n        }\r\n        return buffer;\r\n    }\r\n\r\n    static #uint16ArrayToString(arr, isBig) {\r\n        const view = new DataView(arr.buffer);\r\n        let result = '';\r\n        for (let i = 0; i < arr.byteLength / UnicodeEncoding.charSize; i++) {\r\n            result += String.fromCharCode(view.getUint16(i * UnicodeEncoding.charSize, !isBig));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getByteCount(...params) {\r\n        UnicodeEncoding.prototype.getByteCount = overload([String], function (str) {\r\n            return this.getBytes(str).byteLength;\r\n        });\r\n\r\n        return UnicodeEncoding.prototype.getByteCount.apply(this, params);\r\n    }\r\n\r\n    getBytes(...params) {\r\n        UnicodeEncoding.prototype.getBytes = overload()\r\n            .add([String], function (str) {\r\n                return UnicodeEncoding.#stringToUint16Array(str, this.#bigEndian);\r\n            })\r\n            .add([String, Number, Number], function (str, index, count) {\r\n                if (index < 0 || count < 0 || index + count > str.length) {\r\n                    throw new RangeError(\"\u7D22\u5F15\u6216\u6570\u91CF\u8D85\u51FA\u8303\u56F4\u3002\");\r\n                }\r\n\r\n                return UnicodeEncoding.#stringToUint16Array(str.substring(index, index + count), this.#bigEndian);\r\n            });\r\n\r\n        return UnicodeEncoding.prototype.getBytes.apply(this, params);\r\n    }\r\n\r\n    getCharCount(...params) {\r\n        UnicodeEncoding.prototype.getCharCount = overload()\r\n            .add([Uint8Array], function (bytes) {\r\n                return this.getString(bytes).length;\r\n            })\r\n            .add([Uint8Array, Number, Number], function (bytes, index, count) {\r\n                if (index < 0 || count < 0 || index + count > bytes.length) {\r\n                    throw new RangeError(\"\u7D22\u5F15\u6216\u6570\u91CF\u8D85\u51FA\u8303\u56F4\u3002\");\r\n                }\r\n\r\n                return this.getString(bytes, index, count).length;\r\n            });\r\n\r\n        return UnicodeEncoding.prototype.getCharCount.apply(this, params);\r\n    }\r\n\r\n    getPreamble(...params) {\r\n        UnicodeEncoding.prototype.getPreamble = overload([], function () {\r\n            return this.#byteOrderMark ? (this.#bigEndian ? [0xFE, 0xFF] : [0xFF, 0xFE]) : [];\r\n        });\r\n\r\n        return UnicodeEncoding.prototype.getPreamble.apply(this, params);\r\n    }\r\n\r\n    getString(...params) {\r\n        UnicodeEncoding.prototype.getString = overload()\r\n            .add([Uint8Array], function (bytes) {\r\n                return UnicodeEncoding.#uint16ArrayToString(bytes, this.#bigEndian);\r\n            })\r\n            .add([Uint8Array, Number, Number], function (bytes, index, count) {\r\n                if (index < 0 || count < 0 || index + count > bytes.length) {\r\n                    throw new RangeError(\"\u7D22\u5F15\u6216\u6570\u91CF\u8D85\u51FA\u8303\u56F4\u3002\");\r\n                }\r\n\r\n                return UnicodeEncoding.#uint16ArrayToString(new Uint8Array(bytes.buffer, index, count), this.#bigEndian);\r\n            });\r\n\r\n        return UnicodeEncoding.prototype.getString.apply(this, params);\r\n    }\r\n\r\n    static {\r\n        Encoding.registerEncoding(new EncodingInfo(1200, this.#DISPLAY_NAME, this.#NAME, this.#NAMES.concat([\"utf16le\", \"utf16-le\", \"utf16_le\", \"utf-16le\", \"utf-16-le\", \"utf_16_le\", \"utf-16_le\", \"utf_16-le\"]), new UnicodeEncoding(false, true)));\r\n        Encoding.registerEncoding(new EncodingInfo(1201, this.#DISPLAY_NAME, this.#NAME, this.#NAMES.concat([\"utf16be\", \"utf16-be\", \"utf16_be\", \"utf-16be\", \"utf-16-be\", \"utf_16_be\", \"utf-16_be\", \"utf_16-be\"]), new UnicodeEncoding(true, true)));\r\n    }\r\n}", "import overload from \"@jyostudio/overload\";\r\nimport Encoding from \"./encoding.js\";\r\nimport EncodingInfo from \"./encodingInfo.js\";\r\n\r\nconst CONSTURCTOR_SYMBOL = Symbol(\"constructor\");\r\n\r\nexport default class UTF32Encoding extends Encoding {\r\n    static #NAME = \"utf-32\";\r\n\r\n    static #DISPLAY_NAME = \"Unicode (UTF-32)\";\r\n\r\n    static #NAMES = [\"utf-32\", \"utf32\", \"utf_32\"];\r\n\r\n    #bigEndian = false;\r\n\r\n    #byteOrderMark = true;\r\n\r\n    get codePage() {\r\n        return this.#bigEndian ? 12001 : 12000;\r\n    }\r\n\r\n    get bodyName() {\r\n        return UTF32Encoding.#NAME;\r\n    }\r\n\r\n    get encodingName() {\r\n        return UTF32Encoding.#DISPLAY_NAME;\r\n    }\r\n\r\n    get headerName() {\r\n        return UTF32Encoding.#NAME;\r\n    }\r\n\r\n    get isBrowserDisplay() {\r\n        return false;\r\n    }\r\n\r\n    get isBrowserSave() {\r\n        return false;\r\n    }\r\n\r\n    get isMailNewsDisplay() {\r\n        return false;\r\n    }\r\n\r\n    get isMailNewsSave() {\r\n        return false;\r\n    }\r\n\r\n    get isReadOnly() {\r\n        return true;\r\n    }\r\n\r\n    get isSingleByte() {\r\n        return false;\r\n    }\r\n\r\n    get webName() {\r\n        return UTF32Encoding.#NAME;\r\n    }\r\n\r\n    get windowsCodePage() {\r\n        return 1200;\r\n    }\r\n\r\n    static [CONSTURCTOR_SYMBOL](...params) {\r\n        UTF32Encoding[CONSTURCTOR_SYMBOL] = overload()\r\n            .add([], function () {\r\n                return UTF32Encoding[CONSTURCTOR_SYMBOL].call(this, false, true);\r\n            })\r\n            .add([Boolean, Boolean], function (bigEndian, byteOrderMark) {\r\n                this.#bigEndian = bigEndian;\r\n                this.#byteOrderMark = byteOrderMark;\r\n            });\r\n\r\n        return UTF32Encoding[CONSTURCTOR_SYMBOL].apply(this, params);\r\n    }\r\n\r\n    constructor(...params) {\r\n        super();\r\n\r\n        return UTF32Encoding[CONSTURCTOR_SYMBOL].apply(this, params);\r\n    }\r\n\r\n    static #stringToUnit32Array(str, isBig) {\r\n        const buffer = new Uint8Array(str.length * 4);\r\n        const view = new DataView(buffer.buffer);\r\n        for (let i = 0; i < str.length; i++) {\r\n            view.setUint32(i * 4, str.charCodeAt(i), !isBig);\r\n        }\r\n        return buffer;\r\n    }\r\n\r\n    static #unit32ArrayToString(arr, isBig) {\r\n        const view = new DataView(arr.buffer);\r\n        let result = '';\r\n        for (let i = 0; i < arr.byteLength / 4; i++) {\r\n            result += String.fromCharCode(view.getUint32(i * 4, !isBig));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getByteCount(...params) {\r\n        UTF32Encoding.prototype.getByteCount = overload([String], function (s) {\r\n            return this.getBytes(s).byteLength;\r\n        });\r\n\r\n        return UTF32Encoding.prototype.getByteCount.apply(this, params);\r\n    }\r\n\r\n    getBytes(...params) {\r\n        UTF32Encoding.prototype.getBytes = overload()\r\n            .add([String], function (s) {\r\n                return UTF32Encoding.#stringToUnit32Array(s, this.#bigEndian);\r\n            })\r\n            .add([String, Number, Number], function (s, index, count) {\r\n                if (index < 0 || count < 0 || index + count > s.length) {\r\n                    throw new RangeError(\"\u7D22\u5F15\u6216\u6570\u91CF\u8D85\u51FA\u8303\u56F4\u3002\");\r\n                }\r\n\r\n                return UTF32Encoding.#stringToUnit32Array(s.substring(index, index + count), this.#bigEndian);\r\n            });\r\n\r\n        return UTF32Encoding.prototype.getBytes.apply(this, params);\r\n    }\r\n\r\n    getCharCount(...params) {\r\n        UTF32Encoding.prototype.getCharCount = overload()\r\n            .add([Uint8Array], function (bytes) {\r\n                return this.getString(bytes).length;\r\n            })\r\n            .add([Uint8Array, Number, Number], function (bytes, index, count) {\r\n                if (index < 0 || count < 0 || index + count > bytes.length) {\r\n                    throw new RangeError(\"\u7D22\u5F15\u6216\u6570\u91CF\u8D85\u51FA\u8303\u56F4\u3002\");\r\n                }\r\n\r\n                return this.getString(bytes, index, count).length;\r\n            });\r\n\r\n        return UTF32Encoding.prototype.getCharCount.apply(this, params);\r\n    }\r\n\r\n    getPreamble(...params) {\r\n        UTF32Encoding.prototype.getPreamble = overload([], function () {\r\n            return this.#byteOrderMark ? (this.#bigEndian ? [0xFE, 0xFF] : [0xFF, 0xFE]) : [];\r\n        });\r\n\r\n        return UTF32Encoding.prototype.getPreamble.apply(this, params);\r\n    }\r\n\r\n    getString(...params) {\r\n        UTF32Encoding.prototype.getString = overload()\r\n            .add([Uint8Array], function (bytes) {\r\n                return UTF32Encoding.#unit32ArrayToString(bytes, this.#bigEndian);\r\n            })\r\n            .add([Uint8Array, Number, Number], function (bytes, index, count) {\r\n                if (index < 0 || count < 0 || index + count > bytes.byteLength) {\r\n                    throw new RangeError(\"\u7D22\u5F15\u6216\u6570\u91CF\u8D85\u51FA\u8303\u56F4\u3002\");\r\n                }\r\n\r\n                return UTF32Encoding.#unit32ArrayToString(new Uint8Array(bytes.buffer, index, count), this.#bigEndian);\r\n            });\r\n\r\n        return UTF32Encoding.prototype.getString.apply(this, params);\r\n    }\r\n\r\n    static {\r\n        Encoding.registerEncoding(new EncodingInfo(12000, this.#DISPLAY_NAME, this.#NAME, this.#NAMES.concat([\"utf32le\", \"utf32-le\", \"utf32_le\", \"utf-32le\", \"utf-32-le\", \"utf_32_le\", \"utf-32_le\", \"utf_32-le\"]), new UTF32Encoding(false, true)));\r\n        Encoding.registerEncoding(new EncodingInfo(12001, this.#DISPLAY_NAME, this.#NAME, this.#NAMES.concat([\"utf32be\", \"utf32-be\", \"utf32_be\", \"utf-32be\", \"utf-32-be\", \"utf_32_be\", \"utf-32_be\", \"utf_32-be\"]), new UTF32Encoding(true, true)));\r\n    }\r\n}", "import overload from \"@jyostudio/overload\";\r\nimport Encoding from \"./encoding.js\";\r\nimport EncodingInfo from \"./encodingInfo.js\";\r\n\r\nconst CONSTURCTOR_SYMBOL = Symbol(\"constructor\");\r\n\r\nexport default class ASCIIEncoding extends Encoding {\r\n    static #ASCII_CODEPAGE = 20127;\r\n\r\n    static #NAME = \"us-ascii\";\r\n\r\n    static #DISPLAY_NAME = \"US-ASCII\";\r\n\r\n    static #NAMES = [\"ascii\", \"us-ascii\", \"us_ascii\"];\r\n\r\n    get codePage() {\r\n        return ASCIIEncoding.#ASCII_CODEPAGE;\r\n    }\r\n\r\n    get bodyName() {\r\n        return ASCIIEncoding.#NAME;\r\n    }\r\n\r\n    get encodingName() {\r\n        return ASCIIEncoding.#DISPLAY_NAME;\r\n    }\r\n\r\n    get headerName() {\r\n        return ASCIIEncoding.#NAME;\r\n    }\r\n\r\n    get isBrowserDisplay() {\r\n        return false;\r\n    }\r\n\r\n    get isBrowserSave() {\r\n        return false;\r\n    }\r\n\r\n    get isMailNewsDisplay() {\r\n        return true;\r\n    }\r\n\r\n    get isMailNewsSave() {\r\n        return true;\r\n    }\r\n\r\n    get isReadOnly() {\r\n        return true;\r\n    }\r\n\r\n    get isSingleByte() {\r\n        return true;\r\n    }\r\n\r\n    get webName() {\r\n        return ASCIIEncoding.#NAME;\r\n    }\r\n\r\n    get windowsCodePage() {\r\n        return 1252;\r\n    }\r\n\r\n    static [CONSTURCTOR_SYMBOL](...params) {\r\n        ASCIIEncoding[CONSTURCTOR_SYMBOL] = overload([], function () { });\r\n\r\n        return ASCIIEncoding[CONSTURCTOR_SYMBOL].apply(this, params);\r\n    }\r\n\r\n    constructor(...params) {\r\n        super();\r\n\r\n        return ASCIIEncoding[CONSTURCTOR_SYMBOL].apply(this, params);\r\n    }\r\n\r\n    static #stringToUint8Array(str) {\r\n        const buffer = new Uint8Array(str.length);\r\n        const view = new DataView(buffer.buffer);\r\n        for (let i = 0; i < str.length; i++) {\r\n            let code = str[i].charCodeAt();\r\n            if (code > 0x80) {\r\n                code = 63;\r\n            }\r\n            view.setUint8(i, code);\r\n        }\r\n        return buffer;\r\n    }\r\n\r\n    static #uint8ArrayToString(arr) {\r\n        let str = \"\";\r\n        for (let i = 0; i < arr.byteLength; i++) {\r\n            str += String.fromCharCode(arr[i]);\r\n        }\r\n        return str;\r\n    }\r\n\r\n    getByteCount(...params) {\r\n        ASCIIEncoding.prototype.getByteCount = overload([String], function (str) {\r\n            return this.getBytes(str).byteLength;\r\n        });\r\n\r\n        return ASCIIEncoding.prototype.getByteCount.apply(this, params);\r\n    }\r\n\r\n    getBytes(...params) {\r\n        ASCIIEncoding.prototype.getBytes = overload()\r\n            .add([String], function (str) {\r\n                return ASCIIEncoding.#stringToUint8Array(str);\r\n            })\r\n            .add([String, Number, Number], function (str, index, count) {\r\n                if (index < 0 || count < 0 || index + count > str.length) {\r\n                    throw new RangeError(\"\u7D22\u5F15\u6216\u6570\u91CF\u8D85\u51FA\u8303\u56F4\u3002\");\r\n                }\r\n\r\n                return ASCIIEncoding.#stringToUint8Array(str.substring(index, index + count));\r\n            });\r\n\r\n        return ASCIIEncoding.prototype.getBytes.apply(this, params);\r\n    }\r\n\r\n    getCharCount(...params) {\r\n        ASCIIEncoding.prototype.getCharCount = overload()\r\n            .add([Uint8Array], function (bytes) {\r\n                return this.getString(bytes).length;\r\n            })\r\n            .add([Uint8Array, Number, Number], function (bytes, index, count) {\r\n                if (index < 0 || count < 0 || index + count > bytes.length) {\r\n                    throw new RangeError(\"\u7D22\u5F15\u6216\u6570\u91CF\u8D85\u51FA\u8303\u56F4\u3002\");\r\n                }\r\n\r\n                return this.getString(bytes, index, count).length;\r\n            });\r\n\r\n        return ASCIIEncoding.prototype.getCharCount.apply(this, params);\r\n    }\r\n\r\n    getString(...params) {\r\n        ASCIIEncoding.prototype.getString = overload()\r\n            .add([Uint8Array], function (bytes) {\r\n                return ASCIIEncoding.#uint8ArrayToString(bytes);\r\n            })\r\n            .add([Uint8Array, Number, Number], function (bytes, index, count) {\r\n                if (index < 0 || count < 0 || index + count > bytes.byteLength) {\r\n                    throw new RangeError(\"\u7D22\u5F15\u6216\u6570\u91CF\u8D85\u51FA\u8303\u56F4\u3002\");\r\n                }\r\n\r\n                return ASCIIEncoding.#uint8ArrayToString(new Uint8Array(bytes.buffer, index, count));\r\n            });\r\n\r\n        return ASCIIEncoding.prototype.getString.apply(this, params);\r\n    }\r\n\r\n    static {\r\n        Encoding.registerEncoding(new EncodingInfo(ASCIIEncoding.#ASCII_CODEPAGE, ASCIIEncoding.#NAME, ASCIIEncoding.#DISPLAY_NAME, ASCIIEncoding.#NAMES, new ASCIIEncoding()));\r\n    }\r\n}", "import List from \"@jyostudio/list\";\r\nimport overload from \"@jyostudio/overload\";\r\n\r\nconst CONSTURCTOR_SYMBOL = Symbol(\"constructor\");\r\n\r\nexport default class StringBuilder {\r\n    #chars = [];\r\n\r\n    #maxCapacity = 2147483647;\r\n\r\n    #proxy = null;\r\n\r\n    get maxCapacity() {\r\n        return this.#maxCapacity;\r\n    }\r\n\r\n    static [CONSTURCTOR_SYMBOL](...params) {\r\n        StringBuilder[CONSTURCTOR_SYMBOL] = overload()\r\n            .add([], function () {\r\n                return StringBuilder[CONSTURCTOR_SYMBOL].call(this, \"\", 0, 0);\r\n            })\r\n            .add([Number], function (maxCapacity) {\r\n                if (maxCapacity < 1) {\r\n                    throw new RangeError(\"Capacity must be greater than zero.\");\r\n                }\r\n\r\n                this.#maxCapacity = maxCapacity;\r\n                return StringBuilder[CONSTURCTOR_SYMBOL].call(this, \"\", 0, 0);\r\n            })\r\n            .add([String], function (value) {\r\n                return StringBuilder[CONSTURCTOR_SYMBOL].call(this, value, 0, value.length);\r\n            })\r\n            .add([String, Number, Number], function (value, startIndex, length) {\r\n                if (startIndex + length < 0 || startIndex + length > value.length) {\r\n                    throw new RangeError(\"startIndex \u53CA length \u8D85\u51FA\u8303\u56F4\u3002\");\r\n                }\r\n\r\n                const proxy = this.#initProxy();\r\n\r\n                for (let i = 0; i < length; i++) {\r\n                    this.append(value[startIndex + i]);\r\n                }\r\n\r\n                return proxy;\r\n            });\r\n\r\n        return StringBuilder[CONSTURCTOR_SYMBOL].apply(this, params);\r\n    }\r\n\r\n    constructor(...params) {\r\n        Object.defineProperties(this, {\r\n            length: {\r\n                get: () => this.#chars.length,\r\n                set: overload([Number], value => this.#chars.length = value)\r\n            }\r\n        });\r\n\r\n        if (new.target !== StringBuilder) {\r\n            throw new Error(\"\u4E0D\u80FD\u4ECE StringBuilder \u7C7B\u7EE7\u627F\u3002\");\r\n        }\r\n\r\n        return StringBuilder[CONSTURCTOR_SYMBOL].apply(this, params);\r\n    }\r\n\r\n    #initProxy() {\r\n        return this.#proxy = new Proxy(this, {\r\n            get: (target, prop, receiver) => {\r\n                if (/^[0-9]*$/.test(prop)) {\r\n                    return this.#chars[prop];\r\n                }\r\n\r\n                if (typeof this[prop] === \"function\") {\r\n                    return this[prop].bind(this);\r\n                }\r\n\r\n                return this[prop];\r\n            },\r\n            set: (target, prop, value, receiver) => {\r\n                if (/^[0-9]*$/.test(prop)) {\r\n                    const num = parseInt(prop, 10);\r\n\r\n                    if (num < 0 || num > this.length) {\r\n                        throw new RangeError(\"\u7D22\u5F15\u8D85\u51FA\u8303\u56F4\u3002\");\r\n                    }\r\n\r\n                    if (typeof value !== \"string\") {\r\n                        throw new TypeError(\"\u503C\u5FC5\u987B\u662F String \u7C7B\u578B\u3002\");\r\n                    }\r\n\r\n                    if (num >= this.maxCapacity) {\r\n                        throw new RangeError(\"\u5BB9\u91CF\u8D85\u51FA\u8303\u56F4\u3002\");\r\n                    }\r\n\r\n                    this.#chars[prop] = value;\r\n                } else {\r\n                    this[prop] = value;\r\n                }\r\n\r\n                return true;\r\n            },\r\n        });\r\n    }\r\n\r\n    *[Symbol.iterator]() {\r\n        for (let i = 0; i < this.#chars.length; i++) {\r\n            yield this.#chars[i];\r\n        }\r\n    }\r\n\r\n    append(...params) {\r\n        StringBuilder.prototype.append = overload()\r\n            .add([Boolean], function (value) {\r\n                if (value) {\r\n                    return this.append(['T', 'r', 'u', 'e']);\r\n                } else {\r\n                    return this.append(['F', 'a', 'l', 's', 'e']);\r\n                }\r\n            })\r\n            .add([String], function (value) {\r\n                return this.append([...value]);\r\n            })\r\n            .add([String, Number], function (value, repeatCount) {\r\n                for (let i = 0; i < repeatCount; i++) {\r\n                    this.append([...value]);\r\n                }\r\n                return this;\r\n            })\r\n            .add([String, Number, Number], function (value, startIndex, count) {\r\n                return this.append([...value.substr(startIndex, count)]);\r\n            })\r\n            .add([[Array, List.T(String)]], function (value) {\r\n                return this.append(value, 0, value.length);\r\n            })\r\n            .add([[Array, List.T(String)], Number, Number], function (value, startIndex, count) {\r\n                if (this.length + count > this.maxCapacity) {\r\n                    throw new RangeError(\"\u5BB9\u91CF\u8D85\u51FA\u8303\u56F4\u3002\");\r\n                }\r\n\r\n                for (let i = 0; i < count; i++) {\r\n                    if (value[startIndex + i].length > 1) {\r\n                        throw new RangeError(\"\u503C\u5FC5\u987B\u662F\u4E00\u4E2A\u5B57\u7B26\u3002\");\r\n                    }\r\n\r\n                    this.#chars.push(value[startIndex + i]);\r\n                }\r\n\r\n                return this;\r\n            })\r\n            .add([Number], function (value) {\r\n                return this.append([...(\"\" + value)]);\r\n            })\r\n            .add([Object], function (value) {\r\n                return this.append([...value.toString()]);\r\n            });\r\n\r\n        return StringBuilder.prototype.append.apply(this, params);\r\n    }\r\n\r\n    appendLine(...params) {\r\n        StringBuilder.prototype.appendLine = overload()\r\n            .add([], function () {\r\n                return this.append([\"\\r\", \"\\n\"]);\r\n            })\r\n            .add([String], function (value) {\r\n                this.append(value);\r\n                this.appendLine();\r\n                return this;\r\n            });\r\n\r\n        return StringBuilder.prototype.appendLine.apply(this, params);\r\n    }\r\n\r\n    clear(...params) {\r\n        StringBuilder.prototype.clear = overload([], function () {\r\n            this.#chars.length = 0;\r\n            return this;\r\n        });\r\n\r\n        return StringBuilder.prototype.clear.apply(this, params);\r\n    }\r\n\r\n    copyTo(...params) {\r\n        StringBuilder.prototype.copyTo = overload([Number, Array, Number, Number], function (sourceIndex, destination, destinationIndex, count) {\r\n            for (let i = 0; i < count; i++) {\r\n                destination[destinationIndex + i] = this.#chars[sourceIndex + i];\r\n            }\r\n        });\r\n\r\n        return StringBuilder.prototype.copyTo.apply(this, params);\r\n    }\r\n\r\n    insert(...params) {\r\n        StringBuilder.prototype.insert = overload()\r\n            .add([Number, Boolean], function (index, value) {\r\n                if (value) {\r\n                    return this.insert(index, ['T', 'r', 'u', 'e']);\r\n                } else {\r\n                    return this.insert(index, ['F', 'a', 'l', 's', 'e']);\r\n                }\r\n            })\r\n            .add([Number, String], function (index, value) {\r\n                return this.insert(index, [...value]);\r\n            })\r\n            .add([Number, String, Number], function (index, value, repeatCount) {\r\n                for (let i = 0; i < repeatCount; i++) {\r\n                    this.insert(index, [...value]);\r\n                }\r\n                return this;\r\n            })\r\n            .add([Number, [Array, List.T(String)]], function (index, value) {\r\n                return this.insert(index, value, 0, value.length);\r\n            })\r\n            .add([Number, [Array, List.T(String)], Number, Number], function (index, value, startIndex, count) {\r\n                if (index < 0 || index > this.length) {\r\n                    throw new RangeError(\"\u7D22\u5F15\u8D85\u51FA\u8303\u56F4\u3002\");\r\n                }\r\n\r\n                if (startIndex + count >= this.maxCapacity) {\r\n                    throw new RangeError(\"\u5BB9\u91CF\u8D85\u51FA\u8303\u56F4\u3002\");\r\n                }\r\n\r\n                for (let i = 0; i < count; i++) {\r\n                    if (typeof value[i] !== \"string\") {\r\n                        throw new TypeError(\"\u503C\u5FC5\u987B\u662F\u4E00\u4E2A\u5B57\u7B26\u3002\");\r\n                    }\r\n\r\n                    if (value[startIndex + i].length > 1) {\r\n                        throw new RangeError(\"\u503C\u5FC5\u987B\u662F\u4E00\u4E2A\u5B57\u7B26\u3002\");\r\n                    }\r\n\r\n                    this.#chars.splice(index + i, 0, value[startIndex + i]);\r\n                }\r\n\r\n                return this;\r\n            })\r\n            .add([Number, Number], function (index, value) {\r\n                return this.insert(index, [...(\"\" + value)]);\r\n            })\r\n            .add([Number, Object], function (index, value) {\r\n                return this.insert(index, [...value.toString()]);\r\n            });\r\n\r\n        return StringBuilder.prototype.insert.apply(this, params);\r\n    }\r\n\r\n    remove(...params) {\r\n        StringBuilder.prototype.remove = overload([Number, Number], function (startIndex, length) {\r\n            if (startIndex < 0) {\r\n                throw new RangeError(\"startIndex \u8D85\u51FA\u8303\u56F4\u3002\");\r\n            }\r\n\r\n            if (length < 0) {\r\n                throw new RangeError(\"\u957F\u5EA6\u8D85\u51FA\u8303\u56F4\u3002\");\r\n            }\r\n\r\n            if (startIndex + length > this.length) {\r\n                throw new RangeError(\"startIndex \u53CA length \u8D85\u51FA\u8303\u56F4\u3002\");\r\n            }\r\n\r\n            this.#chars.splice(startIndex, length);\r\n            return this;\r\n        });\r\n\r\n        return StringBuilder.prototype.remove.apply(this, params);\r\n    }\r\n\r\n    replace(...params) {\r\n        StringBuilder.prototype.replace = overload()\r\n            .add([String, String], function (oldValue, newValue) {\r\n                return this.replace(oldValue, newValue, 0, this.length);\r\n            })\r\n            .add([String, String, Number, Number], function (oldValue, newValue, startIndex, count) {\r\n                if (oldValue.length > 1) {\r\n                    throw new RangeError(\"oldValue \u5FC5\u987B\u662F\u4E00\u4E2A\u5B57\u7B26\u3002\");\r\n                }\r\n\r\n                if (newValue.length > 1) {\r\n                    throw new RangeError(\"newValue \u5FC5\u987B\u662F\u4E00\u4E2A\u5B57\u7B26\u3002\");\r\n                }\r\n\r\n                for (let i = 0; i < count; i++) {\r\n                    if (this.#chars[startIndex + i] === oldValue) {\r\n                        this.#chars[startIndex + i] = newValue;\r\n                    }\r\n                }\r\n\r\n                return this;\r\n            });\r\n\r\n        return StringBuilder.prototype.replace.apply(this, params);\r\n    }\r\n\r\n    toString(...params) {\r\n        StringBuilder.prototype.toString = overload()\r\n            .add([], function () {\r\n                return this.#chars.join(\"\");\r\n            })\r\n            .add([Number, Number], function (startIndex, length) {\r\n                if (startIndex < 0) {\r\n                    throw new RangeError(\"startIndex \u8D85\u51FA\u8303\u56F4\u3002\");\r\n                }\r\n\r\n                if (length < 0) {\r\n                    throw new RangeError(\"\u957F\u5EA6\u8D85\u51FA\u8303\u56F4\u3002\");\r\n                }\r\n\r\n                if (startIndex + length > this.length) {\r\n                    throw new RangeError(\"startIndex \u53CA length \u8D85\u51FA\u8303\u56F4\u3002\");\r\n                }\r\n\r\n                let str = \"\";\r\n                for (let i = 0; i < length; i++) {\r\n                    str += this.#chars[startIndex + i];\r\n                }\r\n                return str;\r\n            });\r\n\r\n        return StringBuilder.prototype.toString.apply(this, params);\r\n    }\r\n}"],
  "mappings": "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",
  "names": ["INNER_TYPE_FATHER", "INNER_TYPE_SON", "INNER_THROW_FN", "INNER_TYPE_FN", "matchType", "param", "type", "i", "INNER_TYPE_FN", "INNER_TYPE_SON", "INNER_TYPE_FATHER", "getTypeName", "paramType", "className", "v", "throwStackInfo", "err", "types", "args", "stackList", "errorMessage", "formattedStack", "errorMethodName", "stackLine", "index", "arr", "parts", "fullMethodName", "methodName", "matchingTypes", "hasError", "expectedType", "expectedTypeNames", "INNER_THROW_FN", "createOverload", "TYPES", "FNS", "OPTIONS", "anyFn", "runAny", "overload", "params", "paramsLength", "loop", "options", "typesLength", "j", "convert", "fn", "key", "isArray", "typeofStr", "src_default", "result", "INNER_TYPE_FATHER", "INNER_TYPE_SON", "INNER_THROW_FN", "INNER_TYPE_FN", "matchType", "param", "type", "i", "getTypeName", "paramType", "className", "v", "throwStackInfo", "err", "types", "args", "stackList", "errorMessage", "formattedStack", "errorMethodName", "stackLine", "index", "arr", "parts", "fullMethodName", "methodName", "matchingTypes", "hasError", "expectedType", "expectedTypeNames", "createOverload", "TYPES", "FNS", "OPTIONS", "anyFn", "runAny", "overload", "params", "paramsLength", "loop", "options", "typesLength", "j", "convert", "fn", "key", "isArray", "typeofStr", "src_default", "result", "We", "ze", "Qe", "Ze", "Xe", "et", "M", "tt", "s", "f", "l", "rt", "be", "_CodeOrName", "exports", "Name", "_Code", "code", "item", "e", "_a", "c", "names", "_", "strs", "addCodeArg", "plus", "str", "expr", "safeStringify", "optimize", "arg", "interpolate", "res", "mergeExprItems", "a", "b", "strConcat", "c1", "c2", "x", "stringify", "getProperty", "getEsmExportName", "regexpCode", "rx", "code_1", "ValueError", "name", "UsedValueState", "Scope", "prefixes", "parent", "nameOrPrefix", "prefix", "ng", "r", "_b", "ValueScopeName", "nameStr", "value", "property", "itemIndex", "line", "ValueScope", "opts", "valueKey", "vs", "_name", "keyOrRef", "scopeName", "values", "usedValues", "getCode", "valueCode", "nameSet", "def", "scope_1", "ir", "code_2", "scope_2", "Node", "_names", "_constants", "Def", "varKind", "rhs", "es5", "_n", "constants", "optimizeExpr", "Assign", "lhs", "sideEffects", "addExprNames", "AssignOp", "op", "Label", "label", "Break", "Throw", "error", "AnyCode", "ParentNode", "nodes", "n", "subtractNames", "addNames", "BlockNode", "Root", "Else", "If", "_If", "condition", "cond", "ns", "not", "For", "ForLoop", "iteration", "ForRange", "from", "to", "ForIter", "iterable", "Func", "async", "Return", "Try", "Catch", "Finally", "CodeGen", "extScope", "prefixOrName", "constant", "_constant", "keyValues", "thenBody", "elseBody", "node", "forBody", "obj", "tryBody", "catchCode", "finallyCode", "body", "nodeCount", "len", "toClose", "funcBody", "N1", "N2", "replaceName", "canOptimize", "items", "par", "andCode", "mappend", "and", "orCode", "or", "y", "R", "S", "codegen_1", "P", "toHash", "hash", "alwaysValidSchema", "it", "schema", "checkUnknownRules", "schemaHasRules", "self", "rules", "checkStrictMode", "schemaHasRulesButRef", "RULES", "schemaRefOrVal", "topSchemaRef", "schemaPath", "keyword", "$data", "unescapeFragment", "unescapeJsonPointer", "escapeFragment", "escapeJsonPointer", "eachItem", "xs", "makeMergeEvaluated", "mergeNames", "mergeToName", "mergeValues", "resultToName", "gen", "toName", "setEvaluated", "evaluatedPropsToName", "ps", "props", "p", "snippets", "useFunc", "Type", "getErrorPath", "dataProp", "dataPropType", "jsPropertySyntax", "isNumber", "msg", "mode", "util_1", "names_1", "de", "schemaType", "reportError", "cxt", "errorPaths", "overrideAllErrors", "compositeRule", "allErrors", "errObj", "errorObjectCode", "addError", "returnErrors", "reportExtraError", "resetErrorsCount", "errsCount", "extendErrors", "schemaValue", "data", "errs", "validateName", "schemaEnv", "E", "createErrors", "errorObject", "errorInstancePath", "errorSchemaPath", "extraErrorProps", "errorPath", "instancePath", "instPath", "errSchemaPath", "parentSchema", "schPath", "message", "propertyName", "an", "Te", "errors_1", "boolError", "topBoolOrEmptySchema", "falseSchemaError", "boolOrEmptySchema", "valid", "Pr", "Ce", "_jsonTypes", "jsonTypes", "isJSONType", "getRules", "groups", "schemaHasRulesForType", "group", "shouldUseGroup", "rule", "shouldUseRule", "kwd", "rules_1", "applicability_1", "Sr", "DataType", "getSchemaTypes", "getJSONTypes", "ts", "coerceAndCheckDataType", "coerceTo", "coerceToTypes", "checkTypes", "wrongType", "checkDataTypes", "coerceData", "reportTypeError", "COERCIBLE", "coerceTypes", "t", "dataType", "coerced", "coerceSpecificType", "assignParentData", "parentData", "parentDataProperty", "checkDataType", "strictNums", "correct", "EQ", "numCond", "_cond", "dataTypes", "notObj", "typeError", "getTypeErrorContext", "schemaCode", "hn", "qt", "assignDefaults", "ty", "properties", "assignDefault", "sch", "prop", "defaultValue", "childData", "Q", "I", "util_2", "checkReportMissingProp", "noPropertyInData", "checkMissingProp", "missing", "reportMissingProp", "hasPropFunc", "isOwnProperty", "propertyInData", "ownProperties", "allSchemaProperties", "schemaMap", "schemaProperties", "callValidateCode", "func", "context", "passSchema", "dataAndSchema", "valCxt", "newRegExp", "usePattern", "pattern", "u", "regExp", "validateArray", "validArr", "validateItems", "notValid", "validateUnion", "schValid", "_sch", "schCxt", "macroKeywordCode", "macroSchema", "schemaRef", "useKeyword", "funcKeywordCode", "checkAsyncKeyword", "validate", "validateRef", "validateKeyword", "assignValid", "modifyData", "reportErrs", "ruleErrs", "validateAsync", "validateSync", "addErrs", "validateErrs", "_await", "passCxt", "errors", "q", "validSchemaType", "allowUndefined", "st", "validateKeywordUsage", "deps", "getSubschema", "schemaProp", "extendSubschemaData", "subschema", "dpType", "dataPathArr", "nextData", "dataContextProps", "_nextData", "extendSubschemaMode", "jtdDiscriminator", "jtdMetadata", "require_fast_deep_equal", "__commonJSMin", "module", "equal", "length", "keys", "require_json_schema_traverse", "traverse", "cb", "pre", "post", "_traverse", "jsonPtr", "rootSchema", "parentJsonPtr", "parentKeyword", "keyIndex", "escapeJsonPtr", "J", "Ir", "En", "SIMPLE_INLINED", "inlineRef", "limit", "hasRef", "countKeys", "REF_KEYWORDS", "count", "getFullPath", "resolver", "id", "normalize", "normalizeId", "_getFullPath", "TRAILING_SLASH_HASH", "resolveUrl", "baseId", "ANCHOR", "getSchemaRefs", "schemaId", "uriResolver", "schId", "baseIds", "pathPrefix", "localRefs", "schemaRefs", "fullPath", "innerBaseId", "addRef", "addAnchor", "ref", "_resolve", "ambiguos", "schOrRef", "checkAmbiguosRef", "anchor", "sch1", "sch2", "boolSchema_1", "dataType_1", "dataType_2", "defaults_1", "keyword_1", "gn", "subschema_1", "vn", "resolve_1", "validateFunctionCode", "isSchemaObj", "checkKeywords", "schemaCxtHasRules", "topSchemaObjCode", "validateFunction", "funcSourceUrl", "destructureValCxtES5", "destructureValCxt", "commentKeyword", "checkNoDefault", "resetEvaluated", "typeAndKeywords", "returnResults", "subschemaCode", "subSchemaObjCode", "updateContext", "checkAsyncSchema", "checkRefsAndKeywords", "schemaKeywords", "checkedTypes", "rootName", "ValidationError", "assignEvaluated", "evaluated", "typeErrors", "keywordCode", "checkStrictTypes", "groupKeywords", "iterateKeywords", "useDefaults", "checkContextTypes", "checkMultipleTypes", "checkKeywordTypes", "includesType", "strictTypesError", "narrowSchemaTypes", "hasApplicableType", "schTs", "kwdT", "withTypes", "KeywordCxt", "getData", "successAction", "failAction", "append", "errorParams", "assign", "codeBlock", "$dataValid", "wrong$DataType", "invalid$DataSchema", "validateSchemaRef", "appl", "nextContext", "schemaCxt", "ruleType", "JSON_POINTER", "RELATIVE_JSON_POINTER", "dataLevel", "dataNames", "jsonPointer", "matches", "up", "errorMsg", "segments", "segment", "pointerType", "MissingRefError", "validation_error_1", "It", "validate_1", "at", "SchemaEnv", "env", "compileSchema", "getCompilingSchema", "rootId", "lines", "_ValidationError", "sourceCode", "validateCode", "resolveRef", "root", "schOrFunc", "resolve", "inlineOrCompile", "schEnv", "sameSchemaEnv", "s1", "s2", "resolveSchema", "refPath", "getJsonPointer", "PREVENT_SCOPE_CHANGE", "parsedRef", "part", "partSchema", "$ref", "require_data", "require_scopedChars", "HEX", "require_utils", "Hn", "normalizeIPv4", "host", "findToken", "address", "stripLeadingZeros", "stringArrayToHexStripped", "input", "keepZero", "acc", "strip", "getIPV6", "tokenCount", "output", "buffer", "isZone", "endipv6Encountered", "endIpv6", "consume", "hex", "cursor", "normalizeIPv6", "ipv6", "newHost", "escapedHost", "token", "out", "skip", "ind", "RDS1", "RDS2", "RDS3", "RDS5", "removeDotSegments", "im", "normalizeComponentEncoding", "components", "esc", "recomposeAuthority", "uriTokens", "ipV4res", "ipV6res", "require_schemes", "UUID_REG", "URN_REG", "isSecure", "wsComponents", "httpParse", "httpSerialize", "secure", "wsParse", "wsSerialize", "path", "query", "urnParse", "urnComponents", "scheme", "urnScheme", "schemeHandler", "SCHEMES", "urnSerialize", "nid", "uriComponents", "nss", "urnuuidParse", "uuidComponents", "urnuuidSerialize", "http", "https", "ws", "wss", "urn", "urnuuid", "require_fast_uri", "Zn", "aa", "uri", "serialize", "parse", "baseURI", "relativeURI", "schemelessOptions", "resolved", "resolveComponents", "base", "relative", "skipNormalization", "target", "uriA", "uriB", "cmpts", "authority", "hexLookUp", "k", "nonSimpleDomain", "URI_PARSE", "parsed", "gotEncoding", "isIP", "ipv4result", "ipv6result", "fastUri", "ia", "ref_error_1", "ot", "compile_1", "Ct", "codegen_2", "$dataRefSchema", "xn", "uri_1", "ua", "defaultRegExp", "flags", "META_IGNORE_OPTIONS", "EXT_SCOPE_NAMES", "removedOptions", "deprecatedOptions", "MAX_EXPRESSION", "requiredOptions", "o", "d", "m", "h", "g", "N", "C", "w", "se", "ce", "er", "tr", "_optz", "_c", "_d", "_f", "_e", "_h", "_g", "_k", "_j", "_m", "_l", "_p", "_o", "_q", "_r", "_s", "_t", "_u", "_v", "_w", "_x", "_y", "_z", "_0", "Ajv", "getLogger", "formatOpt", "checkOptions", "getMetaSchemaOptions", "addInitialFormats", "addInitialKeywords", "addInitialSchemas", "meta", "_dataRefSchema", "schemaKeyRef", "_meta", "loadSchema", "runCompileAsync", "_schema", "loadMetaSchema", "_compileAsync", "checkLoaded", "loadMissingSchema", "missingRef", "_loadSchema", "_validateSchema", "throwOrLogError", "$schema", "keyRef", "getSchEnv", "cacheKey", "definitions", "kwdOrDef", "checkKeyword", "addRule", "keywordMetaschema", "definition", "format", "separator", "dataVar", "text", "metaSchema", "keywordsJsonPointers", "keywords", "seg", "schemaOrData", "schemas", "regex", "validateSchema", "addSchema", "currentOpts", "V", "checkOpts", "log", "opt", "optsSchemas", "defs", "metaOpts", "noLogs", "logger", "KEYWORD_NAME", "ruleGroup", "addBeforeRule", "before", "_rule", "$dataRef", "ga", "Xr", "callRootRef", "schOrEnv", "callValidate", "inlineRefSchema", "callRef", "getValidate", "schName", "$async", "callAsyncRef", "callSyncRef", "addEvaluatedFrom", "addErrorsFrom", "source", "schEvaluated", "id_1", "ref_1", "ba", "core", "ops", "KWDs", "prec", "invalid", "ucs2length", "pos", "qa", "rs", "ucs2length_1", "ka", "comp", "missingProperty", "useLoop", "allErrorsMode", "exitOnErrorMode", "definedProperties", "requiredKey", "loopAllRequired", "loopUntilMissing", "equal_1", "Lt", "itemTypes", "validateUniqueItems", "loopN", "loopN2", "indices", "eql", "outer", "getEql", "loopEnum", "vSchema", "equalCode", "limitNumber_1", "Pa", "multipleOf_1", "Sa", "limitLength_1", "pattern_1", "Oa", "limitProperties_1", "ja", "required_1", "Ra", "limitItems_1", "Ia", "uniqueItems_1", "Ca", "const_1", "Ma", "enum_1", "Aa", "validation", "validateAdditionalItems", "validateTuple", "extraItems", "schArr", "checkStrictTuple", "fullTuple", "items_1", "ys", "additionalItems_1", "ms", "prefixItems", "min", "max", "minContains", "maxContains", "validateItemsWithCount", "checkLimits", "_valid", "block", "depsCount", "property_ies", "propDeps", "schDeps", "splitDependencies", "validatePropertyDeps", "validateSchemaDeps", "propertyDeps", "schemaDeps", "hasProperty", "depProp", "patProps", "checkAdditionalProperties", "additionalPropertyCode", "isAdditional", "definedProp", "propsSchema", "deleteAdditional", "applyAdditionalSchema", "additionalProperties_1", "Es", "allProps", "hasDefault", "applyPropertySchema", "patterns", "alwaysValidPatterns", "checkProperties", "validatePatternProperties", "pat", "checkMatchingProperties", "validateProperties", "alwaysValid", "passing", "validateOneOf", "hasThen", "hasSchema", "hasElse", "validateIf", "ifClause", "validateClause", "prefixItems_1", "Ka", "items2020_1", "xa", "contains_1", "La", "dependencies_1", "Ja", "propertyNames_1", "Ya", "properties_1", "Ba", "patternProperties_1", "ro", "not_1", "so", "anyOf_1", "no", "oneOf_1", "ao", "allOf_1", "oo", "if_1", "uo", "thenElse_1", "lo", "getApplicator", "draft2020", "applicator", "validate$DataFormat", "validateFormat", "fmts", "fDef", "fType", "unknownFmt", "invalidFmt", "callFormat", "validData", "formatDef", "unknownFormat", "fmtType", "fmtRef", "getFormat", "validCondition", "unknownMsg", "fmtDef", "fmt", "format_1", "ho", "As", "core_1", "Ea", "validation_1", "Da", "applicator_1", "fo", "po", "metadata_1", "mo", "draft7Vocabularies", "DiscrError", "wo", "Vs", "types_1", "$o", "discrError", "tagName", "tag", "oneOf", "validateMapping", "mapping", "getMapping", "tagValue", "applyTagSchema", "oneOfMapping", "topRequired", "hasRequired", "tagRequired", "propSch", "addMappings", "required", "addMapping", "require_json_schema_draft_07", "Po", "A", "zs", "draft7_1", "discriminator_1", "draft7MetaSchema", "bo", "META_SUPPORT_DATA", "META_SCHEMA_ID", "require_zh", "import_ajv", "Do", "localize", "qo", "ajv", "Oo", "JSONSchema", "#validate", "List", "_List", "#list", "#innerType", "#proxy", "#_constructor", "Us", "innerType", "list", "#initProxy", "CACHE_T_PROXY", "proxy", "receiver", "#rangeCheck", "ignore", "newList", "array", "arrayIndex", "predicate", "callback", "find", "temp", "start", "end", "compareFn", "CONSTURCTOR_SYMBOL", "EncodingInfo", "_EncodingInfo", "#codePage", "#displayName", "#name", "#names", "#encoding", "params", "src_default", "Encoding", "codePage", "displayName", "name", "names", "encoding", "other", "CONSTURCTOR_SYMBOL", "ENCODINGS", "Ae", "EncodingInfo", "Encoding", "_Encoding", "params", "src_default", "encodingInfo", "srcEncoding", "dstEncoding", "bytes", "index", "count", "codePage", "i", "name", "_name", "n", "value", "s", "CONSTURCTOR_SYMBOL", "UTF8Encoding", "_UTF8Encoding", "Encoding", "#UTF8_CODEPAGE", "#NAME", "#DISPLAY_NAME", "#NAMES", "#emitUTF8Identifier", "params", "src_default", "encoderShouldEmitUTF8Identifier", "#stringToUnit8Array", "str", "utf8", "i", "charCode", "#uint8ArrayToString", "arr", "out", "len", "c", "char2", "char3", "s", "index", "count", "bytes", "EncodingInfo", "CONSTURCTOR_SYMBOL", "UnicodeEncoding", "_UnicodeEncoding", "Encoding", "#NAME", "#DISPLAY_NAME", "#NAMES", "#bigEndian", "#byteOrderMark", "params", "src_default", "bigEndian", "byteOrderMark", "#stringToUint16Array", "str", "isBig", "buffer", "view", "i", "#uint16ArrayToString", "arr", "result", "index", "count", "bytes", "EncodingInfo", "CONSTURCTOR_SYMBOL", "UTF32Encoding", "_UTF32Encoding", "Encoding", "#NAME", "#DISPLAY_NAME", "#NAMES", "#bigEndian", "#byteOrderMark", "params", "src_default", "bigEndian", "byteOrderMark", "#stringToUnit32Array", "str", "isBig", "buffer", "view", "i", "#unit32ArrayToString", "arr", "result", "s", "index", "count", "bytes", "EncodingInfo", "CONSTURCTOR_SYMBOL", "ASCIIEncoding", "_ASCIIEncoding", "Encoding", "#ASCII_CODEPAGE", "#NAME", "#DISPLAY_NAME", "#NAMES", "params", "src_default", "#stringToUint8Array", "str", "buffer", "view", "i", "code", "#uint8ArrayToString", "arr", "index", "count", "bytes", "EncodingInfo", "CONSTURCTOR_SYMBOL", "StringBuilder", "_StringBuilder", "#chars", "#maxCapacity", "#proxy", "params", "src_default", "maxCapacity", "value", "startIndex", "length", "proxy", "#initProxy", "i", "target", "prop", "receiver", "num", "repeatCount", "count", "Ae", "sourceIndex", "destination", "destinationIndex", "index", "oldValue", "newValue", "str"]
}
